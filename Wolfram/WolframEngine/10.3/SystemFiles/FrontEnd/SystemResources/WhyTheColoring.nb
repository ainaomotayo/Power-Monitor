(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     12502,        317]
NotebookOptionsPosition[     11919,        292]
NotebookOutlinePosition[     12543,        317]
CellTagsIndexPosition[     12500,        314]
WindowTitle->Why the Coloring?
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[GridBox[{
     {
      DynamicBox[ToBoxes[
        $CellContext`wtcExpr[
         CurrentValue[
          InputNotebook[], "SyntaxColoringReasons"]], StandardForm],
       ImageSizeCache->{400., {161.90625, 167.09375}}]},
     {
      ButtonBox[
       DynamicBox[StyleBox[
         FEPrivate`FrontEndResource["FEStrings", "whyMore"], 
         If[
          CurrentValue["MouseOver"], "HyperlinkActive", "Hyperlink"], 
         CurrentValue["PanelFontSize"]],
        ImageSizeCache->{284., {2., 8.}}],
       Appearance->None,
       ButtonFunction:>(
        CurrentValue[$FrontEnd, {
           PrivateFrontEndOptions, "DialogSettings", "Preferences", "SubTabs",
             "Appearance"}] = "SyntaxColoring"; 
        CurrentValue[$FrontEnd, {
           PrivateFrontEndOptions, "DialogSettings", "Preferences", "SubTabs",
             "SyntaxColoring"}] = "LocalVariables"; FrontEndExecute[{
           FrontEnd`SetOptions[
           FrontEnd`$FrontEnd, 
            FrontEnd`PreferencesSettings -> {"Page" -> "Appearance"}], 
           FrontEnd`FrontEndToken["PreferencesDialog"]}]),
       Evaluator->Automatic,
       ImageMargins->{{10, 5}, {10, 0}},
       Method->"Preemptive"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{},
  Initialization:>{$CellContext`wtcTranslationTable = {{
       "autoStyleReasonComment", "Other", "HighlightComments", 
        "CommentStyle"}, {
       "autoStyleReasonEmphasizedSyntaxError", "Error", 
        "HighlightEmphasizedSyntaxErrors", "EmphasizedSyntaxErrorStyle"}, {
       "autoStyleReasonExcessArgument", "Error", "HighlightExcessArguments", 
        "ExcessArgumentStyle"}, {
       "autoStyleReasonFunctionLocalVariable", "Variable", 
        "HighlightFunctionLocalVariables", "FunctionLocalVariableStyle"}, {
       "autoStyleReasonGlobalSymbol", "Other", "HighlightGlobalSymbols", 
        "GlobalSymbolStyle"}, {
       "autoStyleReasonGlobalToLocalScopeConflict", "Error", 
        "HighlightGlobalToLocalScopeConflicts", 
        "GlobalToLocalScopeConflictStyle"}, {
       "autoStyleReasonGraphicsCompatibilityProblem", "Error", 
        "HighlightGraphicsCompatibilityProblems", 
        "GraphicsCompatibilityProblemStyle"}, {
       "autoStyleReasonLocalScopeConflict", "Error", 
        "HighlightLocalScopeConflicts", "LocalScopeConflictStyle"}, {
       "autoStyleReasonLocalVariable", "Variable", "HighlightLocalVariables", 
        "LocalVariableStyle"}, {
       "autoStyleReasonMissingArgument", "Error", "HighlightMissingArguments",
         "MissingArgumentStyle"}, {
       "autoStyleReasonMissingArgumentsWithTemplate", "Error", 
        "HighlightMissingArgumentsWithTemplate", 
        "MissingArgumentTemplateStyle"}, {
       "autoStyleReasonMisspelledWord", "Error", "HighlightMisspelledWords", 
        "MisspelledWordStyle"}, {
       "autoStyleReasonNoKernelPresent", "Variable", 
        "HighlightNoKernelPresent", "NoKernelPresentStyle"}, {
       "autoStyleReasonNotebookVariable", "Variable", 
        "HighlightNotebookVariables", "NotebookVariableStyle"}, {
       "autoStyleReasonOrderOfEvaluationConflict", "Error", 
        "HighlightOrderOfEvaluationConflicts", 
        "OrderOfEvaluationConflictStyle"}, {
       "autoStyleReasonPatternVariable", "Variable", 
        "HighlightPatternVariables", "PatternVariableStyle"}, {
       "autoStyleReasonString", "Other", "HighlightStrings", "StringStyle"}, {
       "autoStyleReasonSymbolShadowing", "Error", "HighlightSymbolShadowing", 
        "SymbolShadowingStyle"}, {
       "autoStyleReasonSyntaxError", "Error", "HighlightSyntaxErrors", 
        "SyntaxErrorStyle"}, {
       "autoStyleReasonUndefinedSymbol", "Other", "HighlightUndefinedSymbols",
         "UndefinedSymbolStyle"}, {
       "autoStyleReasonUnknownOption", "Error", "HighlightUnknownOptions", 
        "UnknownOptionStyle"}, {
       "autoStyleReasonUnwantedAssignment", "Error", 
        "HighlightUnwantedAssignments", "UnwantedAssignmentStyle"}, {
       "autoStyleReasonSymbolContext", "Other", "HighlightSymbolContexts"}, {
       "autoStyleReasonAutoItalicWords", "Other", None, {
        FontSlant -> "Italic"}}, {
       "autoStyleReasonAutoStyleWords", "Other", None}, {
       "autoStyleReasonMultiLetterItalics", "Other", None, {
        FontSlant -> "Italic"}}, {
       "autoStyleReasonMultiLetterStyle", "Other", None, {
        FontSlant -> "Italic"}}, {
       "autoStyleReasonSingleLetterItalics", "Other", None, {
        FontSlant -> "Italic"}}, {
       "autoStyleReasonSingleLetterStyle", "Other", None}, {
       "autoStyleReasonUnmatchedBracket", "Error", None}, {
        Blank[String], "Unknown", None}}; Null, $CellContext`tr[
      Pattern[$CellContext`id, 
       Blank[]]] := Dynamic[
      RawBoxes[
       FEPrivate`FrontEndResource["FEStrings", $CellContext`id]]], 
    Apply[($CellContext`wtcCategory[#] = #2)& , \
$CellContext`wtcTranslationTable, {1}]; Null, 
    Apply[($CellContext`wtcOption[#] = #3)& , \
$CellContext`wtcTranslationTable, {1}]; Null, 
    Apply[($CellContext`wtcMessage[#] = 
      StringReplace[#, "autoStyleReason" -> "why"])& , 
      Most[$CellContext`wtcTranslationTable], {1}]; 
    Null, $CellContext`wtcMessage[
       Blank[String]] = "whyInvalid"; Null, 
    Apply[($CellContext`wtcStyle[#] := 
      CurrentValue[$FrontEnd, {AutoStyleOptions, #4}])& , 
      Cases[$CellContext`wtcTranslationTable, {
        Blank[], 
        Blank[], 
        Blank[], 
        Blank[String]}], {1}]; Null, Apply[($CellContext`wtcStyle[#] := #4)& , 
      Cases[$CellContext`wtcTranslationTable, {
        Blank[], 
        Blank[], 
        Blank[], 
        Blank[List]}], {1}]; Null, $CellContext`wtcStyle[
       Blank[String]] := {}; Null, $CellContext`wtcSingleCellQ[
       Pattern[$CellContext`c, 
        Blank[]]] := MatchQ[$CellContext`c, {
        RepeatedNull[{
          Blank[], 
          Blank[String]}]}]; Null, $CellContext`wtcMultiCellQ[
       Pattern[$CellContext`c, 
        Blank[]]] := MatchQ[$CellContext`c, {
        PatternTest[
         BlankSequence[], $CellContext`wtcSingleCellQ]}]; 
    Null, $CellContext`wtcSplitSort[
       PatternTest[
        Pattern[$CellContext`c, 
         Blank[]], $CellContext`wtcSingleCellQ]] := 
     Block[{$CellContext`lis}, $CellContext`lis = Map[{
           First[
            First[#]], 
           Map[Last, #]}& , 
          Split[
           Sort[
            Map[Reverse, $CellContext`c]], First[#] === First[#2]& ]]; 
       Part[$CellContext`lis, 
         Ordering[
          Map[$CellContext`wtcCategory[
            First[#]]& , $CellContext`lis]]]]; 
    Null, $CellContext`wtcTab[] = ($CellContext`wtcTab[{}] = Column[{
         $CellContext`tr["whyNoColoring"], Space, 
         Dynamic[
          If[
           (And[
            ListQ[#], Flatten[#] == {}, Length[#] > 1]& )[
            CurrentValue[
             InputNotebook[], "SyntaxColoringReasons"]], 
           Style[
            $CellContext`tr["whyEmpty"], 
            RGBColor[0, 0.4, 0]], Space]]}]); Null, $CellContext`wtcTab[
      Pattern[$CellContext`c, 
       Blank[]]] := Pane[
      Column[
       Map[$CellContext`wtcRow, 
        $CellContext`wtcSplitSort[$CellContext`c]], Left, 2], 
      Scrollbars -> {False, Automatic}, ScrollPosition -> {0, 0}, 
      ImageSize -> {360, 220}, AppearanceElements -> {}], $CellContext`wtcRow[{
        Pattern[$CellContext`token, 
         Blank[]], 
        Pattern[$CellContext`samples, 
         Blank[List]]}] := Grid[{{"\[GrayCircle]", 
         $CellContext`tr[
          $CellContext`wtcMessage[$CellContext`token]]}, {"", 
         $CellContext`wtcFormatSamples[$CellContext`token, \
$CellContext`samples]}}, Alignment -> {Left, Right}, 
       ItemSize -> {{Automatic, 
          Scaled[0.9]}}]; Null, $CellContext`wtcFormatSamples[
       Pattern[$CellContext`token, 
        Blank[]], 
       Pattern[$CellContext`lis, 
        Blank[]]] := Style[
       Style[
        Row[
         Union[$CellContext`lis], "\[Bullet]"], "Input"], 
       Apply[Sequence, 
        $CellContext`wtcStyle[$CellContext`token]], "StandardForm", 
       FontFamily -> "Courier", ShowStringCharacters -> False, 
       AutoMultiplicationSymbol -> False]; Null, 
    SetAttributes[$CellContext`jumpToPopup, HoldRest]; Null, 
    Null, $CellContext`jumpToPopup[
       Pattern[$CellContext`list, 
        Blank[]], 
       Pattern[$CellContext`tab, 
        Blank[]]] := ActionMenu[
       $CellContext`tr["whyJumpLabel"], 
       MapIndexed[Style[
          Row[{
            $CellContext`tr["whyCellLabel"], 
            First[#2]}], 
          If[# == {}, 
           GrayLevel[0.2], Bold]] :> ($CellContext`tab = 
         First[#2])& , $CellContext`list], Enabled -> 
       Dynamic[Length[$CellContext`list] > 7]]; 
    Null, $CellContext`tabView[True, 
       Pattern[$CellContext`c, 
        Blank[]], 
       Pattern[$CellContext`tab, 
        Blank[]]] := TabView[
       MapIndexed[{
         First[#2], Row[{
            $CellContext`tr["whyCellLabel"], 
            
            First[#2]}] -> $CellContext`wtcTab[#]}& , $CellContext`c], \
$CellContext`tab]; Null, $CellContext`tabView[False, 
      Pattern[$CellContext`c, 
       Blank[]], 
      Pattern[$CellContext`tab, 
       Blank[]]] := TabView[
      MapIndexed[{
        First[#2], Tooltip[
          Style[
           Row[{
             $CellContext`tr["whyCellLabel"], 
             First[#2]}], 
           If[# == {}, 
            GrayLevel[0.2], Bold]], 
          Dynamic[
           RawBoxes[
            FrontEnd`ObjectContents[
             FrontEnd`IndexedCell[
              InputNotebook[], 
              First[#2], True], True, 
             1000000]]]] -> $CellContext`wtcTab[#]}& , $CellContext`c], \
$CellContext`tab, Appearance -> {"Limited", 5}], $CellContext`wtcExpr[
       Pattern[$CellContext`c, 
        Blank[List]]] := 
     DynamicModule[{$CellContext`a = 0, $CellContext`i = 1, $CellContext`tab = 
        1}, 
       Grid[{{
          Item[
           $CellContext`jumpToPopup[$CellContext`c, $CellContext`tab], 
           Alignment -> Right]}, {
          Switch[
           Length[$CellContext`c], 
           Alternatives[0, 1], 
           
           TabView[{{
             1, $CellContext`tr["whySelectionLabel"] -> 
              Apply[$CellContext`wtcTab, $CellContext`c]}}, 1], 
           PatternTest[
            Blank[], NumberQ], 
           $CellContext`tabView[Length[$CellContext`c] < 8, $CellContext`c, 
            Dynamic[$CellContext`tab]], 
           Blank[], 
           TabView[{{1, "Error" -> $CellContext`tr["whyError"]}}, 1]]}}]]; 
    Null, $CellContext`wtcExpr[
       Pattern[$CellContext`c, 
        Blank[]]] := $CellContext`wtcExpr[{}]; Null}]],
 CellMargins->{{0, 0}, {0, 0}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]]
},
Saveable->False,
Evaluator->"System",
WindowSize->All,
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
WindowElements->{},
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["FEStrings", "whyTitle"]],
CellContext->Notebook,
DynamicUpdating->True,
TabViewBoxOptions->{ImageSize->{400, 300}},
TooltipBoxOptions->{TooltipDelay->Automatic},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (August 14, \
2012)",
StyleDefinitions->"SystemPalette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[589, 21, 11326, 269, 360, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

