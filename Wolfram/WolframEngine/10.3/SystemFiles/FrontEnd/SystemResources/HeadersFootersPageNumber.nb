(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16411,        414]
NotebookOptionsPosition[     13904,        345]
NotebookOutlinePosition[     16453,        414]
CellTagsIndexPosition[     16410,        411]
WindowTitle->Choose page number format...
WindowFrame->ModalDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`x$$, $CellContext`i$$, $CellContext`return$$ =
   System`FEDump`$HFReturn, $CellContext`pos$$ = 
  System`FEDump`$HFPosition, $CellContext`page$$ = 
  System`FEDump`$PageCounterType, $CellContext`data$$ = {{
    Dynamic[
     FEPrivate`FrontEndResource[
     "HeadersFootersDialog", "DecimalNumberLabel"]], Identity}, {
    Dynamic[
     FEPrivate`FrontEndResource[
     "HeadersFootersDialog", "CapsRomanNumberLabel"]], 
    FrontEnd`CapitalRomanNumeral}, {
    Dynamic[
     FEPrivate`FrontEndResource["HeadersFootersDialog", "RomanNumberLabel"]], 
    FrontEnd`RomanNumeral}, {
    Dynamic[
     FEPrivate`FrontEndResource["HeadersFootersDialog", "DashedNumberLabel"]],
     FEPrivate`StringJoin["\[Dash]", 
     FEPrivate`ToString[#], "\[Dash]"]& }, {
    Dynamic[
     FEPrivate`FrontEndResource["HeadersFootersDialog", "WavyNumberLabel"]], 
    FEPrivate`StringJoin["\[Tilde]", 
     FEPrivate`ToString[#], "\[Tilde]"]& }}}, 
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {
           FrameBox[
            TagBox[GridBox[{
               {
                
                SetterBox[
                 Dynamic[$CellContext`i$$, ($CellContext`i$$ = #; \
$CellContext`x$$ = Last[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "DecimalNumberLabel"]], 
                    Identity}])& ], {1}, 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "DecimalNumberLabel"], 
                   StandardForm],
                  ImageSizeCache->{93., {1., 9.}}],
                 Background->Dynamic[
                   If[$CellContext`i$$ == 1, 
                    RGBColor[0.87, 0.94, 1], Automatic, Automatic]]]},
               {
                
                SetterBox[
                 Dynamic[$CellContext`i$$, ($CellContext`i$$ = #; \
$CellContext`x$$ = Last[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "CapsRomanNumberLabel"]], 
                    FrontEnd`CapitalRomanNumeral}])& ], {2}, 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "CapsRomanNumberLabel"], 
                   StandardForm],
                  ImageSizeCache->{90., {1., 9.}}],
                 Background->Dynamic[
                   If[$CellContext`i$$ == 2, 
                    RGBColor[0.87, 0.94, 1], Automatic, Automatic]]]},
               {
                
                SetterBox[
                 Dynamic[$CellContext`i$$, ($CellContext`i$$ = #; \
$CellContext`x$$ = Last[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RomanNumberLabel"]], 
                    FrontEnd`RomanNumeral}])& ], {3}, 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "RomanNumberLabel"], StandardForm],
                  ImageSizeCache->{151., {1., 9.}}],
                 Background->Dynamic[
                   If[$CellContext`i$$ == 3, 
                    RGBColor[0.87, 0.94, 1], Automatic, Automatic]]]},
               {
                
                SetterBox[
                 Dynamic[$CellContext`i$$, ($CellContext`i$$ = #; \
$CellContext`x$$ = Last[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "DashedNumberLabel"]], 
                    FEPrivate`StringJoin["\[Dash]", 
                    FEPrivate`ToString[#], "\[Dash]"]& }])& ], {4}, 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "DashedNumberLabel"], StandardForm],
                  ImageSizeCache->{89., {1., 9.}}],
                 Background->Dynamic[
                   If[$CellContext`i$$ == 4, 
                    RGBColor[0.87, 0.94, 1], Automatic, Automatic]]]},
               {
                SetterBox[
                 Dynamic[$CellContext`i$$, ($CellContext`i$$ = #; \
$CellContext`x$$ = Last[{
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "WavyNumberLabel"]], 
                    FEPrivate`StringJoin["\[Tilde]", 
                    FEPrivate`ToString[#], "\[Tilde]"]& }])& ], {5}, 
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "WavyNumberLabel"], StandardForm],
                  ImageSizeCache->{117., {1., 9.}}],
                 Background->Dynamic[
                   If[$CellContext`i$$ == 5, 
                    RGBColor[0.87, 0.94, 1], Automatic, Automatic]]]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               "ControlStyle", 
                SetterBoxOptions -> {
                 ImageSize -> {200, 20}, Appearance -> None, 
                  Alignment -> {Left, Center}, 
                  FrameMargins -> {{5, 0}, {0, 0}}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
             "Grid"],
            Alignment->Top,
            Background->GrayLevel[1],
            FrameMargins->0,
            ImageSize->{Automatic, 200},
            StripOnInput->False], 
           PaneBox[
            TagBox[GridBox[{
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "HeadersFootersDialog", "PreviewCodeLabel"], StandardForm],
                 ImageSizeCache->{41., {0., 9.}}]},
               {
                FrameBox[
                 DynamicBox[ToBoxes[
                   Rasterize[
                    Notebook[
                    ConstantArray[
                    Cell[
                    TextData[
                    CounterBox[
                    "SmallText", CounterFunction -> $CellContext`x$$]], 
                    "SmallText", FontSize -> Large], 3]]], StandardForm],
                  ImageSizeCache->{468., {50., 55.}}],
                 Alignment->Center,
                 Background->GrayLevel[1],
                 ImageSize->{200, 115},
                 RoundingRadius->5,
                 StripOnInput->False]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"],
            ImageMargins->{{20, 0}, {5, 0}}]},
          {"\[SpanFromAbove]", 
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "FormatCodeLabel"], StandardForm],
                  ImageSizeCache->{67., {1., 9.}}],
                 DefaultBaseStyle->"PanelLabel",
                 StripOnInput->False]},
               {
                
                InputFieldBox[
                 Dynamic[$CellContext`x$$, ($CellContext`x$$ = #; \
$CellContext`i$$ = None)& ],
                 BoxID -> "inputfield",
                 ContinuousAction->True,
                 ImageSize->200]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"],
            ImageMargins->{{20, 0}, {0, 5}}]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
         GridBoxDividers->{
          "Columns" -> {{None}}, "Rows" -> {{False}}, 
           "RowsIndexed" -> {2 -> GrayLevel[0.5]}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       EventHandlerTag[{"UpArrowKeyDown" :> If[
           IntegerQ[$CellContext`i$$], $CellContext`i$$ = 
            Replace[$CellContext`i$$ - 1, 0 -> 5]; $CellContext`x$$ = 
            Part[$CellContext`data$$, $CellContext`i$$, 2]], 
         "DownArrowKeyDown" :> If[
           
           IntegerQ[$CellContext`i$$], $CellContext`i$$ = 
            Mod[$CellContext`i$$, 5] + 1; $CellContext`x$$ = 
            Part[$CellContext`data$$, $CellContext`i$$, 2]], PassEventsDown -> 
         Automatic, PassEventsUp -> True}]], "\[SpanFromLeft]"},
     {
      ItemBox[
       TagBox[GridBox[{
          {
           ButtonBox[
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource[
              "HeadersFootersDialog", "SetAsDefaultLabel"], StandardForm],
             ImageSizeCache->{71., {1., 9.}}],
            Appearance->Automatic,
            
            ButtonFunction:>(
             CurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "DialogSettings", "HeadersFooters", 
                "PageNumberFormat"}] = If["PageNumber" === "Date", 
               
               CounterBox[$CellContext`page$$, 
                CounterFunction -> $CellContext`x$$], 
               Part[
                
                CounterBox[$CellContext`page$$, 
                 CounterFunction -> $CellContext`x$$], 2, 2]]),
            
            Enabled->Dynamic[
             CurrentValue[$FrontEnd, {
                PrivateFrontEndOptions, "DialogSettings", "HeadersFooters", 
                 "PageNumberFormat"}] =!= If["PageNumber" === "Date", 
                
                CounterBox[$CellContext`page$$, 
                 CounterFunction -> $CellContext`x$$], 
                Part[
                 
                 CounterBox[$CellContext`page$$, 
                  CounterFunction -> $CellContext`x$$], 2, 2]]],
            Evaluator->Automatic,
            Method->"Preemptive"]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Left,
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "FEExpressions", "ChoiceButtonsOrder"][{
           ButtonBox[
            DynamicBox[
             FEPrivate`FrontEndResourceString["okButtonText"]], 
            ButtonFunction :> (DialogReturn[]; CurrentValue[
                InputNotebook[], {TaggingRules, "Highlight"}] = Inherited; (If[
               TrueQ[$CellContext`return$$], CurrentValue[
                 InputNotebook[], $CellContext`pos$$] = RowBox[{
                  CurrentValue[
                   InputNotebook[], $CellContext`pos$$], #3}], 
               NotebookWrite[
                InputNotebook[], 
                TagBox[
                 FrameBox[
                  #[
                   SlotSequence[2]]], "Placeholder"]]]& )[InterpretationBox, 
               ToBoxes[
                Dynamic[
                 FEPrivate`FrontEndResource[
                 "HeadersFootersDialog", "PageNumberCounterLabel"]]], 
               
               CounterBox[$CellContext`page$$, 
                CounterFunction -> $CellContext`x$$]]), Appearance -> 
            "DefaultButton", Evaluator -> Automatic, Method -> "Preemptive"], 
           ButtonBox[
            DynamicBox[
             FEPrivate`FrontEndResourceString["cancelButtonText"]], 
            ButtonFunction :> (DialogReturn[]; CurrentValue[
                InputNotebook[], {TaggingRules, "Highlight"}] = Inherited), 
            Appearance -> "CancelButton", Evaluator -> Automatic, Method -> 
            "Preemptive"]}],
         ImageSizeCache->{192., {19.5, 26.5}}],
        Deployed->True,
        DynamicUpdating->True,
        ButtonBoxOptions->{ImageMargins->{{2, 2}, {10, 10}},
        ImageSize->Dynamic[
          CurrentValue["DefaultButtonSize"]]},
        GridBoxOptions->{AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}],
       Alignment->Right,
       StripOnInput->False]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{},
  Initialization:>({$CellContext`return$$, $CellContext`pos$$} = {
     System`FEDump`$HFReturn, System`FEDump`$HFPosition}; $CellContext`x$$ = 
    System`FEDump`$PageCounterFunction; $CellContext`page$$ = 
    System`FEDump`$PageCounterType; $CellContext`i$$ = First[
      Flatten[{
        Position[
         Part[$CellContext`data$$, All, 2], $CellContext`x$$], 0}]]; Null),
  UnsavedVariables:>{$CellContext`x$$, $CellContext`i$$}]],
 CellMargins->{{8, 8}, {8, 8}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue["PanelFontSize"]]
},
Evaluator->"System",
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateCells"} :> (None; {}), {
   "MenuCommand", "SimilarCellBelow"} :> (None; {}), "WindowClose" :> 
  FE`Evaluate[
    FEPrivate`FindAndClickCancelButton[]], "EscapeKeyDown" :> If[
    Not[
     CurrentValue["ShiftKey"]], 
    FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]], PassEventsDown -> True},
WindowSize->All,
WindowMargins->{{732, Automatic}, {Automatic, 432}},
WindowFrame->"ModalDialog",
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["HeadersFootersDialog", "PageNumberWindowTitle"]],
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (March 4, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "SystemDialog.nb"]], 
   Cell[
    StyleData["Header"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}]], 
   Cell[
    StyleData["Footer"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}]], 
   Cell[
    StyleData["PageNumber"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}], FontSlant -> Plain], 
   Cell[
    StyleData["Placeholder"], Background -> None, 
    FrameBoxOptions -> {
     Background -> RGBColor[1., 0.9724879835202563, 0.7976806286717022], 
      FrameMargins -> {{5, 5}, {0, 0}}, RoundingRadius -> 5}], 
   Cell[
    StyleData["TextStyleInputField"], 
    CounterBoxOptions -> {
     CounterFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}, 
    ValueBoxOptions -> {
     DisplayFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}, 
    OptionValueBoxOptions -> {
     DisplayFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}], 
   Cell[
    StyleData["SelectionHighlight"], ContextMenu -> None, 
    TooltipBoxOptions -> {TooltipDelay -> Automatic}], 
   Cell[
    StyleData["SelectedHighlight"], ContextMenu -> 
    FEPrivate`FrontEndResource["ContextMenus", "HeadersFooters"]]}, Visible -> 
  False, FrontEndVersion -> 
  "10.0 for Microsoft Windows (64-bit) (March 4, 2013)", StyleDefinitions -> 
  "Default.nb"],
Modal -> True,
Initialization :> FrontEnd`MoveCursorToInputField
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[605, 21, 13295, 322, 275, InheritFromParent,
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

