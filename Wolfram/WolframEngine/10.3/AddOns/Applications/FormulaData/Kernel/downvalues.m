(* Created with the Wolfram Language : www.wolfram.com *)
{{HoldPattern[MathematicaFormula["AbbeNumberHelium"]] :> 
   QuantityVariable["V", "Name" -> "Abbe number", "PhysicalQuantity" -> 
      "AbbeNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (-1 + QuantityVariable[Subscript["n", "d"], "Name" -> "refractive index \
at the wavelength of the Fraunhofer d spectral line of helium", 
       "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (-QuantityVariable[Subscript["n", "C"], "Name" -> "refractive index at \
the wavelength of the Fraunhofer C spectral line of hydrogen", 
        "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable[Subscript["n", "F"], "Name" -> "refractive index at \
the wavelength of the Fraunhofer F spectral line of hydrogen", 
       "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["AbbeNumberHydrogen"]] :> 
   QuantityVariable["V", "Name" -> "Abbe number", "PhysicalQuantity" -> 
      "AbbeNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (-1 + QuantityVariable[Subscript["n", "D"], "Name" -> "refractive index \
at the wavelength of the Fraunhofer D spectral line of hydrogen", 
       "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (-QuantityVariable[Subscript["n", "C"], "Name" -> "refractive index at \
the wavelength of the Fraunhofer C spectral line of hydrogen", 
        "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable[Subscript["n", "F"], "Name" -> "refractive index at \
the wavelength of the Fraunhofer F spectral line of hydrogen", 
       "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["AbbeNumberMercury"]] :> 
   QuantityVariable["V", "Name" -> "Abbe number", "PhysicalQuantity" -> 
      "AbbeNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (-1 + QuantityVariable[Subscript["n", "e"], "Name" -> "refractive index \
at the wavelength of the Fraunhofer e spectral line of mercury", 
       "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (-QuantityVariable[Subscript["n", "C'"], "Name" -> "refractive index at \
the wavelength of the Fraunhofer C' spectral line of cadmium", 
        "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable[Subscript["n", "F"], "Name" -> "refractive index at \
the wavelength of the Fraunhofer F' spectral line of cadmium", 
       "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["AcceleratingFrequency"]] :> 
   QuantityVariable[Subscript["N", "f"], "Name" -> "accelerating frequency", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Sqrt[(QuantityVariable["l", "Name" -> "characteristic length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3*
       QuantityVariable["\[CapitalDelta]\[InvisibleSpace]\[Rho]", 
        "Name" -> "density difference", "PhysicalQuantity" -> "MassDensity", 
        "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
        "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]*
       QuantityVariable["\[Omega]", "Name" -> "angular velocity", 
         "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/QuantityVariable[
       "\[Gamma]", "Name" -> "surface tension", "PhysicalQuantity" -> 
        "SurfaceTension", "CanonicalUnit" -> {HoldForm["Newtons"/"Meters"]}, 
       "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -2}}]], 
  HoldPattern[MathematicaFormula["AccelerationNumber"]] :> 
   QuantityVariable["Ac", "Name" -> "acceleration number", 
     "PhysicalQuantity" -> "AccelerationNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"^(-2)]*
      QuantityVariable["E", "Name" -> "elastic modulus", 
        "PhysicalQuantity" -> "ElasticModulus", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]^3)/
     (QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
        "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
         {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["AdiabaticProcess"]] :> 
   {QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]*
      QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]) == 
     QuantityVariable[Subscript["T", "i"], "Name" -> "initial temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]*
      QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["W", "Name" -> "work done on the system", 
      "PhysicalQuantity" -> "Work", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 
     (QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
         "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
          {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
         Subscript["V", "f"], "Name" -> "final volume", "PhysicalQuantity" -> 
          "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
         "UnitDimensions" -> {"LengthUnit", 3}] - 
       QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
         "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
          {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
         Subscript["V", "i"], "Name" -> "initial volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}])/
      (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["Q", "Name" -> "heat transferred to the system", 
      "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 0, 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]S", 
      "Name" -> "entropy change", "PhysicalQuantity" -> "Entropy", 
      "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 0}, 
  HoldPattern[MathematicaFormula["Albedo"]] :> 
   QuantityVariable["\[Alpha]", "Name" -> "albedo", 
     "PhysicalQuantity" -> "Albedo", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["M", "Name" -> "radiant exitance", 
      "PhysicalQuantity" -> "RadiantExitance", "CanonicalUnit" -> 
       {HoldForm["Watts"/"Meters"^2]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -3}}]/QuantityVariable["E", 
      "Name" -> "irradiance", "PhysicalQuantity" -> "Irradiance", 
      "CanonicalUnit" -> {HoldForm["Watts"/"Meters"^2]}, 
      "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["AlfvenNumber"]] :> 
   QuantityVariable["Al", "Name" -> "Alfv\[EAcute]n number", 
     "PhysicalQuantity" -> "AlfvenNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      Sqrt[QuantityVariable["\[Mu]", "Name" -> "permeability", 
         "PhysicalQuantity" -> "MagneticPermeability", "CanonicalUnit" -> 
          {HoldForm["Henries"/"Meters"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -2}, {"LengthUnit", 1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}]*QuantityVariable["\[Rho]", 
         "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
         "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
         "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]])/
     QuantityVariable["B", "Name" -> "magnetic flux density", 
      "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
       {HoldForm["Teslas"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["AngleSubtended"]] :> 
   Tan[QuantityVariable["\[Theta]", "Name" -> "plane angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
        {"AngleUnit", 1}]/2] == QuantityVariable["H", "Name" -> "height", 
      "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]/(2*QuantityVariable["D", "Name" -> "distance", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["AngularFrequency"]] :> 
   QuantityVariable["\[Nu]", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}]/(2*Pi), 
  HoldPattern[MathematicaFormula["AnnulusAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (Pi*(QuantityVariable[Subscript["R", 1], "Name" -> "radius 1", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4 - 
       QuantityVariable[Subscript["R", 2], "Name" -> "radius 2", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4))/4, 
  HoldPattern[MathematicaFormula["AntiKnockIndex"]] :> 
   QuantityVariable["AKI", "Name" -> "anti\[Hyphen]knock index", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["MON", "Name" -> "motor octane number", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["RON", 
       "Name" -> "research octane number", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     2, HoldPattern[MathematicaFormula["ApparentMagnitudeIntensity"]] :> 
   QuantityVariable[Subscript["I", 1]/Subscript["I", 2], 
     "Name" -> Row[{"intensity ratio ", Subscript["I", 1]/
         Subscript["I", 2]}], "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    10^((2*(-QuantityVariable[Subscript["m", 1], "Name" -> 
           "apparent magnitude 1", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + QuantityVariable[Subscript["m", 2], 
         "Name" -> "apparent magnitude 2", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/5), 
  HoldPattern[MathematicaFormula["ArchimedesNumber"]] :> 
   QuantityVariable["Ar", "Name" -> "Archimedes number", 
     "PhysicalQuantity" -> "ArchimedesNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3*
      (QuantityVariable["\[Rho]", "Name" -> "particle mass density", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}] - QuantityVariable[
        Subscript["\[Rho]", 0], "Name" -> "fluid density", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}])*QuantityVariable[
       Subscript["\[Rho]", 0], "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula["ArrheniusNumber"]] :> 
   QuantityVariable["Ar", "Name" -> "Arrhenius number", 
     "PhysicalQuantity" -> "ArrheniusNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "MolarGasConstant"^(-1)]*QuantityVariable[
       Subscript["E", "a"], "Name" -> "activation energy", 
       "PhysicalQuantity" -> "ActivationEnergy", "CanonicalUnit" -> 
        {HoldForm["Joules"/"Moles"]}, "UnitDimensions" -> 
        {{"AmountUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}])/QuantityVariable["T", "Name" -> "temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["AtkinsonCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - (QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["r", "Name" -> "compression ratio", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - 
        ((QuantityVariable["r", "Name" -> "compression ratio", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
            Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
            "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
             {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
              1}])/QuantityVariable[Subscript["T", "c"], 
           "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
            "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
           "UnitDimensions" -> {"TemperatureUnit", 1}])^
         QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]^(-1)))/
      (QuantityVariable["r", "Name" -> "compression ratio", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - 
       (QuantityVariable["r", "Name" -> "compression ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
          Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
          "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
           {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
            1}])/QuantityVariable[Subscript["T", "c"], 
         "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula["AtwoodNumber"]] :> 
   QuantityVariable["A", "Name" -> "Atwood number", 
     "PhysicalQuantity" -> "AtwoodNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript["\[Rho]", 1], "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}] - QuantityVariable[
       Subscript["\[Rho]", 2], "Name" -> "fluid density of lighter fluid", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     (QuantityVariable[Subscript["\[Rho]", 1], "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}] + QuantityVariable[
       Subscript["\[Rho]", 2], "Name" -> "fluid density of lighter fluid", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["AvogadrosLaw"]] :> 
   QuantityVariable[Subscript["V", 1], "Name" -> "initial volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}]/
     QuantityVariable[Subscript["n", 1], "Name" -> "initial moles", 
      "PhysicalQuantity" -> "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
      "UnitDimensions" -> {"AmountUnit", 1}] == 
    QuantityVariable[Subscript["V", 2], "Name" -> "final volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}]/
     QuantityVariable[Subscript["n", 2], "Name" -> "final moles", 
      "PhysicalQuantity" -> "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
      "UnitDimensions" -> {"AmountUnit", 1}], 
  HoldPattern[MathematicaFormula["AxialMemberDeformation"]] :> 
   QuantityVariable["\[Delta]", "Name" -> "deformation", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    (QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
       "Name" -> "load", "PhysicalQuantity" -> "Force", 
       "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable["E", "Name" -> "elastic modulus", 
       "PhysicalQuantity" -> "ElasticModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]), 
  HoldPattern[MathematicaFormula["BagnoldNumber"]] :> 
   QuantityVariable["Ba", "Name" -> "Bagnold number", 
     "PhysicalQuantity" -> "BagnoldNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["D", "Name" -> "solids diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable[OverDot["\[Epsilon]"], "Name" -> "strain rate", 
       "PhysicalQuantity" -> "StrainRate", "CanonicalUnit" -> 
        {HoldForm["Microstrains"/"Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", -1}]*QuantityVariable[Subscript["V", "s"], 
       "Name" -> "solids volume fraction", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable[Subscript["\[Rho]", "s"], "Name" -> "solids density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     (QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]*
      (1 - QuantityVariable[Subscript["V", "s"], 
        "Name" -> "solids volume fraction", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])), 
  HoldPattern[MathematicaFormula["BaseballBattingAverage"]] :> 
   QuantityVariable["AVG", "Name" -> "batting average", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["H", "Name" -> "hits", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
     QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula["BaseballGameScore"]] :> 
   QuantityVariable["GS", "Name" -> "game score", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 50 - QuantityVariable["BB", "Name" -> "walks", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] - 
     4*QuantityVariable["ER", "Name" -> "earned runs allowed", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] - 
     2*QuantityVariable["H", "Name" -> "hits", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + 2*QuantityVariable["IP4", 
       "Name" -> "innings pitched past the 4th inning", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["K", 
      "Name" -> "strikeouts", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     QuantityVariable["OUTS", "Name" -> "outs recorded", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] - 
     2*QuantityVariable["UR", "Name" -> "unearned runs allowed", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BaseballIsolatedPower"]] :> 
   QuantityVariable["ISO", "Name" -> "isolated power", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["2B", "Name" -> "doubles", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + 2*QuantityVariable["3B", "Name" -> "triples", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      3*QuantityVariable["HR", "Name" -> "home runs", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/QuantityVariable["AB", "Name" -> "at bats", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[
     "BaseballOnBasePercentagePlusSluggingPercentage"]] :> 
   QuantityVariable["OPS", "Name" -> "on-base plus slugging", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["OBP", "Name" -> "on-base percentage", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] + QuantityVariable["SLG", 
      "Name" -> "slugging percentage", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BaseballPythagoreanWinExpectancy"]] :> 
   QuantityVariable["PWE", "Name" -> "Pythagorean win expectancy", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["RS", "Name" -> "runs scored", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]^1.83/
     (QuantityVariable["RA", "Name" -> "runs allowed", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]^1.83 + QuantityVariable["RS", 
        "Name" -> "runs scored", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
       1.83), HoldPattern[MathematicaFormula["BaseballRangeFactor"]] :> 
   QuantityVariable["RF", "Name" -> "range factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (9*(QuantityVariable["A", "Name" -> "assists", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["PO", "Name" -> "putouts", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["I", 
      "Name" -> "innings", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BaseballSluggingPercentage"]] :> 
   QuantityVariable["SLG", "Name" -> "slugging percentage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["1B", "Name" -> "singles", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + 2*QuantityVariable["2B", "Name" -> "doubles", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      3*QuantityVariable["3B", "Name" -> "triples", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 4*QuantityVariable["HR", "Name" -> "home runs", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/QuantityVariable["AB", 
      "Name" -> "at bats", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BasketballAssistRate"]] :> 
   QuantityVariable["AST%", "Name" -> "assist rate", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (100*QuantityVariable["AST", "Name" -> "assists", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/(QuantityVariable["AST", "Name" -> "assists", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["FGA", 
       "Name" -> "field goals attempted", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      0.44*QuantityVariable["FTA", "Name" -> "free throws attempted", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["TO", 
       "Name" -> "turnovers", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[
     "BasketballEffectiveFieldGoalPercentage"]] :> 
   QuantityVariable["eFG%", "Name" -> "effective field goal percentage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (0.5*QuantityVariable["3PM", "Name" -> "three point field goals made", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["FGM", 
       "Name" -> "field goals made", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["FGA", "Name" -> "field goals attempted", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BasketballFieldGoalPercentage"]] :> 
   QuantityVariable["FG%", "Name" -> "field goal percentage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["FGM", "Name" -> "field goals made", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/QuantityVariable["FGA", 
      "Name" -> "field goals attempted", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BasketballTrueShootingPercentage"]] :> 
   QuantityVariable["TS%", "Name" -> "true shooting percentage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (0.5*QuantityVariable["PTS", "Name" -> "points scored", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["FGA", "Name" -> "field goals attempted", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + 
      0.475*QuantityVariable["FTA", "Name" -> "free throws attempted", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["BasketballUsageRate"]] :> 
   QuantityVariable["USG%", "Name" -> "usage rate", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (100*(0.33*QuantityVariable["AST", "Name" -> "assists", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] + QuantityVariable["FGA", 
        "Name" -> "field goals attempted", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 0.44*QuantityVariable["FTA", 
         "Name" -> "free throws attempted", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["TO", "Name" -> "turnovers", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["POSS", 
      "Name" -> "possessions", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BealeNumber"]] :> 
   QuantityVariable[Subscript["B", "n"], "Name" -> "Beale number", 
     "PhysicalQuantity" -> "BealeNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["W", "o"], "Name" -> "power output", 
      "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -3}}]/(QuantityVariable["f", 
       "Name" -> "engine cycle frequency", "PhysicalQuantity" -> "Frequency", 
       "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
        {"TimeUnit", -1}]*QuantityVariable["P", 
       "Name" -> "mean gas pressure", "PhysicalQuantity" -> "Pressure", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["V", "Name" -> "swept volume of expansion space", 
       "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
        {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]), 
  HoldPattern[MathematicaFormula["BejanNumberHeatTransfer"]] :> 
   QuantityVariable["Be", "Name" -> "Bejan number for heat transfer", 
     "PhysicalQuantity" -> "BejanNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]P", "Name" -> "pressure difference", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (QuantityVariable["\[Alpha]", "Name" -> "thermal diffusivity", 
       "PhysicalQuantity" -> "ThermalDiffusivity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["\[Eta]", 
       "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
        "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["BellColemanCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (-1 + (QuantityVariable[Subscript["p", "h"], "Name" -> "high pressure", 
         "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
          {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable[
         Subscript["p", "l"], "Name" -> "low pressure", "PhysicalQuantity" -> 
          "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])^((-1 + QuantityVariable["\[Gamma]", 
          "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
           "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])/QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]))^(-1), 
  HoldPattern[MathematicaFormula["BernoullisEquation"]] :> 
   QuantityVariable[Subscript["P", 1], "Name" -> "pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["\[Rho]", 
       "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
     QuantityVariable[Subscript["v", 1], "Name" -> "speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2/2 + 
     Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable[Subscript["z", 1], "Name" -> "vertical displacement", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable[Subscript["P", 2], "Name" -> "downstream pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["\[Rho]", 
       "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
     QuantityVariable[Subscript["v", 2], "Name" -> "downstream speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2/2 + 
     Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable[Subscript["z", 2], "Name" -> 
        "downstream vertical displacement", "PhysicalQuantity" -> "Height", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["BetheFormula"]] :> 
   QuantityVariable["-dE/dx", "Name" -> "stopping power", 
     "PhysicalQuantity" -> "LinearStoppingPower", "CanonicalUnit" -> 
      {HoldForm["Megaelectronvolts"/"Centimeters"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (Quantity[1/(4*Pi), "ElementaryCharge"^5/("ElectricConstant"^2*
         "ElectronMass"*"SpeedOfLight")]*QuantityVariable["n", 
       "Name" -> "electron number density", "PhysicalQuantity" -> 
        "InverseVolume", "CanonicalUnit" -> {HoldForm[1/"Meters"^3]}, 
       "UnitDimensions" -> {"LengthUnit", -3}]*
      (Log[(Quantity[2, "ElectronMass"]*QuantityVariable["v", 
            "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
            "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
            "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/
         (QuantityVariable["I", "Name" -> 
            "mean excitation energy of the absorber material", 
           "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
            {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
             {"MassUnit", 1}, {"TimeUnit", -2}}]*
          (1 + Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["v", 
              "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
              "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
              "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^
             2))] + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2))/
     (QuantityVariable["Q", "Name" -> "electric charge", 
       "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
        {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
      QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["BimetallicStrip"]] :> 
   QuantityVariable["\[Kappa]", "Name" -> "curvature of a bimetallic strip", 
     "PhysicalQuantity" -> "Curvature", "CanonicalUnit" -> 
      {HoldForm[1/"Meters"]}, "UnitDimensions" -> {"LengthUnit", -1}] == 
    (6*QuantityVariable["\[CapitalDelta]\[InvisibleSpace]T", 
       "Name" -> "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]*QuantityVariable[
       Subscript["E", "1"], "Name" -> "Young's modulus of material 1", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["E", "2"], "Name" -> "Young's modulus of material 2", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["H", "1"], "Name" -> "height of strip 1", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Centimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["H", "2"], "Name" -> "height of strip 2", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Centimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      (QuantityVariable[Subscript["H", "1"], "Name" -> "height of strip 1", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Centimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
       QuantityVariable[Subscript["H", "2"], "Name" -> "height of strip 2", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Centimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}])*
      (QuantityVariable[Subscript["\[Alpha]", 1], 
        "Name" -> "thermal expansion coefficient of material 1", 
        "PhysicalQuantity" -> "LinearThermalExpansionCoefficient", 
        "CanonicalUnit" -> {HoldForm[1/"KelvinsDifference"]}, 
        "UnitDimensions" -> {"TemperatureDifferenceUnit", -1}] - 
       QuantityVariable[Subscript["\[Alpha]", "2"], 
        "Name" -> "thermal expansion coefficient of material 2", 
        "PhysicalQuantity" -> "LinearThermalExpansionCoefficient", 
        "CanonicalUnit" -> {HoldForm[1/"KelvinsDifference"]}, 
        "UnitDimensions" -> {"TemperatureDifferenceUnit", -1}]))/
     (QuantityVariable[Subscript["E", "1"], "Name" -> 
          "Young's modulus of material 1", "PhysicalQuantity" -> 
          "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}]^2*QuantityVariable[Subscript["H", "1"], 
         "Name" -> "height of strip 1", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^4 + 4*QuantityVariable[Subscript["E", "1"], 
        "Name" -> "Young's modulus of material 1", "PhysicalQuantity" -> 
         "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable[Subscript["E", "2"], 
        "Name" -> "Young's modulus of material 2", "PhysicalQuantity" -> 
         "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable[Subscript["H", "1"], 
         "Name" -> "height of strip 1", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^3*QuantityVariable[Subscript["H", "2"], 
        "Name" -> "height of strip 2", "PhysicalQuantity" -> "Height", 
        "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}] + 6*QuantityVariable[Subscript["E", "1"], 
        "Name" -> "Young's modulus of material 1", "PhysicalQuantity" -> 
         "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable[Subscript["E", "2"], 
        "Name" -> "Young's modulus of material 2", "PhysicalQuantity" -> 
         "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable[Subscript["H", "1"], 
         "Name" -> "height of strip 1", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^2*QuantityVariable[Subscript["H", "2"], 
         "Name" -> "height of strip 2", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^2 + 4*QuantityVariable[Subscript["E", "1"], 
        "Name" -> "Young's modulus of material 1", "PhysicalQuantity" -> 
         "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable[Subscript["E", "2"], 
        "Name" -> "Young's modulus of material 2", "PhysicalQuantity" -> 
         "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable[Subscript["H", "1"], 
        "Name" -> "height of strip 1", "PhysicalQuantity" -> "Height", 
        "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable[Subscript["H", "2"], 
         "Name" -> "height of strip 2", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^3 + QuantityVariable[Subscript["E", "2"], 
         "Name" -> "Young's modulus of material 2", "PhysicalQuantity" -> 
          "YoungsModulus", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}]^2*QuantityVariable[Subscript["H", "2"], 
         "Name" -> "height of strip 2", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^4), 
  HoldPattern[MathematicaFormula["BinghamCompressionNumber"]] :> 
   QuantityVariable["Bn", "Name" -> "Bingham compression number", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["H", "Name" -> "initial height of material sample", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable[Subscript["\[Sigma]", "min"], 
       "Name" -> "minimal yield strength", "PhysicalQuantity" -> "Pressure", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     QuantityVariable["F", "Name" -> "constant loading force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["BiotNumberHeatTransfer"]] :> 
   QuantityVariable["Bi", "Name" -> "Biot number for heat transfer", 
     "PhysicalQuantity" -> "BiotNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["K", "Name" -> "heat transfer coefficient", 
       "PhysicalQuantity" -> "HeatTransferCoefficient", 
       "CanonicalUnit" -> {HoldForm["Watts"/("KelvinsDifference"*
            "Meters"^2)]}, "UnitDimensions" -> {{"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["k", "Name" -> "thermal conductivity", 
      "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["BirthdayProblemApproximation"]] :> 
   QuantityVariable["n", "Name" -> "number of people", 
      "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
       {HoldForm["People"], "Unities"}, "UnitDimensions" -> "Dimensionless"]/
     E^(QuantityVariable["n", "Name" -> "number of people", 
        "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
         {HoldForm["People"], "Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/(QuantityVariable["d", "Name" -> 
          "number of possible birthdays", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        QuantityVariable["k", "Name" -> 
          "number of people with same birthday", "PhysicalQuantity" -> 
          "Person", "CanonicalUnit" -> {HoldForm["People"], "Unities"}, 
         "UnitDimensions" -> "Dimensionless"])) == 
    (QuantityVariable["k", "Name" -> "number of people with same birthday", 
        "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
         {HoldForm["People"], "Unities"}, "UnitDimensions" -> 
         "Dimensionless"]!*Log[(1 - QuantityVariable["p", 
          "Name" -> "probability", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(-1)]*QuantityVariable["d", 
        "Name" -> "number of possible birthdays", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]^(-1 + QuantityVariable["k", 
         "Name" -> "number of people with same birthday", 
         "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
          {HoldForm["People"], "Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*(1 - QuantityVariable["n", 
         "Name" -> "number of people", "PhysicalQuantity" -> "Person", 
         "CanonicalUnit" -> {HoldForm["People"], "Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/
        (QuantityVariable["d", "Name" -> "number of possible birthdays", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*(1 + QuantityVariable["k", 
           "Name" -> "number of people with same birthday", 
           "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
            {HoldForm["People"], "Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))))^QuantityVariable["k", 
       "Name" -> "number of people with same birthday", 
       "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
        {HoldForm["People"], "Unities"}, "UnitDimensions" -> "Dimensionless"]^
      (-1), HoldPattern[MathematicaFormula[
     "BlasiusBoundaryLayerThickness"]] :> 
   QuantityVariable["\[Delta]", "Name" -> "Blasius boundary layer thickness", 
     "PhysicalQuantity" -> "Thickness", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    4.9*Sqrt[(QuantityVariable["x", "Name" -> "distance along plate", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
         "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
          {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
       (QuantityVariable["\[Rho]", "Name" -> "fluid density", 
         "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
          {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
          {{"LengthUnit", -3}, {"MassUnit", 1}}]*QuantityVariable[
         Subscript["U", "\[Infinity]"], "Name" -> "free stream velocity", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
  HoldPattern[MathematicaFormula["BlasiusDisplacementThickness"]] :> 
   QuantityVariable[Subscript["\[Delta]", 1], 
     "Name" -> "Blasius displacement thickness", "PhysicalQuantity" -> 
      "Thickness", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    1.72*Sqrt[(QuantityVariable["x", "Name" -> "distance along plate", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
         "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
          {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
       (QuantityVariable["\[Rho]", "Name" -> "fluid density", 
         "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
          {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
          {{"LengthUnit", -3}, {"MassUnit", 1}}]*QuantityVariable[
         Subscript["U", "\[Infinity]"], "Name" -> "free stream velocity", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
  HoldPattern[MathematicaFormula["BlasiusSkinFriction"]] :> 
   QuantityVariable[Subscript["c", "f"], "Name" -> "Blasius skin friction", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1.338/Sqrt[QuantityVariable["Re", "Name" -> "Reynolds number", 
       "PhysicalQuantity" -> "ReynoldsNumber", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"]], 
  HoldPattern[MathematicaFormula["BloodOxygen"]] :> 
   QuantityVariable[Subscript["CtO", "2"], 
     "Name" -> "concentration of oxygen in blood", "PhysicalQuantity" -> 
      "VolumeFraction", "CanonicalUnit" -> 
      {HoldForm["Milliliters"/"Liters"]}, "UnitDimensions" -> 
      "Dimensionless"] == 
    Quantity[0.03, "Milliliters"/("Liters"*"MillimetersOfMercury")]*
      QuantityVariable[Subscript["PO", "2"], 
       "Name" -> "partial pressure of oxygen in blood", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}] + 
     Quantity[1.34, "Milliliters"/"Grams"]*QuantityVariable["Hb", 
       "Name" -> "hemoglobin concentration in blood", "PhysicalQuantity" -> 
        "MassDensity", "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]*
      QuantityVariable[Subscript["SO", "2"], 
       "Name" -> "oxygen saturation of hemoglobin", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"], HoldPattern[MathematicaFormula["BodyMassIndex"]] :> 
   QuantityVariable["BMI", "Name" -> "body mass index", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["W", "Name" -> "body weight", "PhysicalQuantity" -> 
       "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
      "UnitDimensions" -> {"MassUnit", 1}]/
     QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> 
        "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["BondNumber"]] :> 
   QuantityVariable["Bo", "Name" -> "Bond number", "PhysicalQuantity" -> 
      "BondNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["\[CapitalDelta]\[InvisibleSpace]\[Rho]", 
       "Name" -> "density difference", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
      "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["BoseEinsteinDistribution"]] :> 
   QuantityVariable[OverBar[Subscript["n", "i"]], 
     "Name" -> "occupation number", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/
     (-1 + E^((Quantity[1, "BoltzmannConstant"^(-1)]*
         (-(QuantityVariable["n", "Name" -> "amount", "PhysicalQuantity" -> 
              "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
             "UnitDimensions" -> {"AmountUnit", 1}]*QuantityVariable["\[Mu]", 
             "Name" -> "chemical potential", "PhysicalQuantity" -> 
              "ChemicalPotential", "CanonicalUnit" -> {HoldForm[
                "Joules"/"Moles"]}, "UnitDimensions" -> {{"AmountUnit", -1}, {
                "LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]) + 
          QuantityVariable[Subscript["E", "i"], "Name" -> "state energy", 
           "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
            {HoldForm["Electronvolts"]}, "UnitDimensions" -> 
            {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]))/
        QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}])), 
  HoldPattern[MathematicaFormula["BoussinesqNumber"]] :> 
   QuantityVariable["Bs", "Name" -> "Boussinesq number", 
     "PhysicalQuantity" -> "BoussinesqNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[1/2, "StandardAccelerationOfGravity"^(-1)]*
      QuantityVariable["w", "Name" -> "flow velocity", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/
     QuantityVariable["l", "Name" -> "characteristic length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["BoyleNumber"]] :> 
   QuantityVariable[Subscript["B", "o"], "Name" -> "Boyle number", 
     "PhysicalQuantity" -> "BoyleNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["T", "B"], "Name" -> "Boyle temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
     QuantityVariable[Subscript["T", "crit"], 
      "Name" -> "critical temperature", "PhysicalQuantity" -> "Temperature", 
      "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
       {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["BoylesLaw"]] :> 
   QuantityVariable[Subscript["P", 1], "Name" -> "initial pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable[Subscript["V", 1], "Name" -> "initial volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable[Subscript["P", 2], "Name" -> "final pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable[Subscript["V", 2], "Name" -> "final volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}], 
  HoldPattern[MathematicaFormula["BrakingTorque"]] :> 
   QuantityVariable["T", "Name" -> "motor torque", "PhysicalQuantity" -> 
      "Torque", "CanonicalUnit" -> {HoldForm["Feet"*"PoundsForce"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["P", "Name" -> "motor power", 
      "PhysicalQuantity" -> "Power", "CanonicalUnit" -> 
       {HoldForm["HorsepowerMechanical"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]/
     QuantityVariable[Subscript["\[Omega]", "S"], "Name" -> "motor speed", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Revolutions"/"Minutes"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["BraytonCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - (QuantityVariable[Subscript["p", "l"], "Name" -> "low pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable[
        Subscript["p", "h"], "Name" -> "high pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}])^
      ((-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
       QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["BrewsterAngle"]] :> 
   Tan[QuantityVariable[Subscript["\[Theta]", "B"], 
      "Name" -> "Brewster's angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == 
    QuantityVariable[Subscript["n", 2], "Name" -> 
       "index of refraction (second medium)", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]/QuantityVariable[Subscript["n", 1], 
      "Name" -> "index of refraction (first medium)", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["BrinellHardness"]] :> 
   QuantityVariable["BHN", "Name" -> "Brinell hardness", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["KilogramsForce"/"Millimeters"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (2*QuantityVariable["P", "Name" -> "applied force", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["KilogramsForce"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (Pi*QuantityVariable["D", "Name" -> "diameter of indenter", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Millimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      (QuantityVariable["D", "Name" -> "diameter of indenter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Millimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
       Sqrt[-QuantityVariable["d", "Name" -> "diameter of indentation", 
            "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
             {HoldForm["Millimeters"]}, "UnitDimensions" -> 
             {"LengthUnit", 1}]^2 + QuantityVariable["D", 
           "Name" -> "diameter of indenter", "PhysicalQuantity" -> 
            "Diameter", "CanonicalUnit" -> {HoldForm["Millimeters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^2])), 
  HoldPattern[MathematicaFormula["BrinkmanNumber"]] :> 
   QuantityVariable["Br", "Name" -> "Brinkman number", 
     "PhysicalQuantity" -> "BrinkmanNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "Kelvins"/"KelvinsDifference"]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*QuantityVariable["\[Eta]", 
       "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
        "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["k", "Name" -> "thermal conductivity", 
       "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
        {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      (-QuantityVariable[Subscript["T", "f"], "Name" -> 
          "temperature of fluid", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}] + QuantityVariable[Subscript["T", "w"], 
        "Name" -> "temperature of wall", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}])), 
  HoldPattern[MathematicaFormula["BrinkmanRheologicalNumber"]] :> 
   QuantityVariable["Br", "Name" -> "Brinkman rheological number", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["w", "Name" -> "flux velocity", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
      QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["k", "Name" -> "thermal conductivity", 
       "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
        {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      QuantityVariable["\[CapitalDelta]\[InvisibleSpace]T", 
       "Name" -> "reference temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]), 
  HoldPattern[MathematicaFormula["BulkConcentration"]] :> 
   QuantityVariable[Subscript["N", "bc"], "Name" -> "bulk concentration", 
     "PhysicalQuantity" -> "BulkConcentration", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["C", "b"], 
      "Name" -> "concentration of bulk particles", "PhysicalQuantity" -> 
       "MassDensity", "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]/
     QuantityVariable["\[Rho]", "Name" -> "fluid density", 
      "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
       {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
       {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula["Buoyancy"]] :> 
   {QuantityVariable[Subscript["F", "net"], "Name" -> "effective gravity", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     -QuantityVariable["B", "Name" -> "buoyancy force in fluid", 
        "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
         {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}] + 
      Quantity[None, "StandardAccelerationOfGravity"]*
       QuantityVariable[Subscript["m", "b"], "Name" -> "mass of body", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
    QuantityVariable["B", "Name" -> "buoyancy force in fluid", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["\[Rho]", "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]*QuantityVariable[
       Subscript["V", "f"], "Name" -> "volume of replaced fluid", 
       "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
        {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}], 
    QuantityVariable["R", "Name" -> "fraction of body submerged", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["V", "f"], "Name" -> 
        "volume of replaced fluid", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
        {"LengthUnit", 3}]/QuantityVariable[Subscript["V", "b"], 
       "Name" -> "volume of body", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
        {"LengthUnit", 3}]}, 
  HoldPattern[MathematicaFormula["CableCapacitance"]] :> 
   QuantityVariable["C", "Name" -> "cable capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Picofarads"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
       {"TimeUnit", 4}}] == 
    (2*Pi*QuantityVariable["L", "Name" -> "cable length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Epsilon]", "Name" -> "permittivity of insulator", 
       "PhysicalQuantity" -> "ElectricPermittivity", "CanonicalUnit" -> 
        {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}])/Log[QuantityVariable[Subscript["R", "1"], 
        "Name" -> "sheath radius", "PhysicalQuantity" -> "Radius", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]/QuantityVariable[Subscript["R", "2"], 
        "Name" -> "conductor radius", "PhysicalQuantity" -> "Radius", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula["Capacitance"]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    QuantityVariable["Q", "Name" -> "electric charge", 
      "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
       {HoldForm["Coulombs"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]/
     QuantityVariable["V", "Name" -> "voltage", "PhysicalQuantity" -> 
       "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["CapacitanceParallel"]] :> 
   QuantityVariable["C", "Name" -> "equivalent capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    QuantityVariable[Subscript["C", 1], "Name" -> "capacitance 1", 
      "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
       {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
        {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] + 
     QuantityVariable[Subscript["C", 2], "Name" -> "capacitance 2", 
      "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
       {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
        {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}], 
  HoldPattern[MathematicaFormula["CapacitanceSeries"]] :> 
   QuantityVariable["C", "Name" -> "equivalent capacitance", 
      "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
       {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
        {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}]^(-1) == 
    QuantityVariable[Subscript["C", 1], "Name" -> "capacitance 1", 
       "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
        {HoldForm["Farads"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]^(-1) + QuantityVariable[Subscript["C", 2], 
       "Name" -> "capacitance 2", "PhysicalQuantity" -> 
        "ElectricCapacitance", "CanonicalUnit" -> {HoldForm["Farads"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, 
         {"MassUnit", -1}, {"TimeUnit", 4}}]^(-1), 
  HoldPattern[MathematicaFormula["CapillaryAction"]] :> 
   QuantityVariable["H", "Name" -> "height of liquid column", 
     "PhysicalQuantity" -> "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    (Cos[QuantityVariable["\[Theta]", "Name" -> "contact angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
      Quantity[2, "StandardAccelerationOfGravity"^(-1)]*
      QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
       "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}])/
     (QuantityVariable["r", "Name" -> "radius of tube", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Rho]", "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["CapillaryNumber"]] :> 
   QuantityVariable[Subscript["Ca", 1], "Name" -> "first capillary number", 
     "PhysicalQuantity" -> "CapillaryNumber1", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["\[Eta]", 
       "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
        "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
     QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
      "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["CapitalAssetPricingModel"]] :> 
   QuantityVariable["r", "Name" -> "expected return", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["r", "f"], 
      "Name" -> "risk\[Hyphen]free interest rate", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] + QuantityVariable["\[Beta]", 
       "Name" -> "beta coefficient", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      (-QuantityVariable[Subscript["r", "f"], "Name" -> 
          "risk\[Hyphen]free interest rate", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable[Subscript["r", "m"], 
        "Name" -> "return on market", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula["CapitalRecoveryFactor"]] :> 
   QuantityVariable["CRF", "Name" -> "capital recovery factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["i", "Name" -> "interest rate", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(1 + QuantityVariable["i", 
         "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^QuantityVariable["n", 
        "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (-1 + (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
        "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula["CardiacOutput"]] :> 
   QuantityVariable["Q", "Name" -> "cardiac output", 
     "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
      {HoldForm["Liters"/"Minutes"]}, "UnitDimensions" -> 
      {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    QuantityVariable["HR", "Name" -> "heart rate", "PhysicalQuantity" -> 
       "BeatRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["beats"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["SV", "Name" -> "stroke volume", 
      "PhysicalQuantity" -> "StrokeVolume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"/IndependentUnit["beats"]]}, 
      "UnitDimensions" -> {"LengthUnit", 3}], 
  HoldPattern[MathematicaFormula["CartesianToPolar"]] :> 
   {QuantityVariable["x", "Name" -> Row[{"x", "-coordinate"}], 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == Cos[QuantityVariable["\[CurlyPhi]", 
        "Name" -> "angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable["r", 
       "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable["y", "Name" -> Row[{"y", "-coordinate"}], 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == QuantityVariable["r", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*Sin[QuantityVariable["\[CurlyPhi]", 
        "Name" -> "angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]}, 
  HoldPattern[MathematicaFormula["CatheterFlowRate"]] :> 
   QuantityVariable["FR", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Milliliters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (Pi*QuantityVariable["r", "Name" -> "internal radius of catheter", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4*
      (-QuantityVariable[Subscript["P", "1"], "Name" -> 
          "pressure at the end of catheter proximal to site of insertion", 
         "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
          {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}] + QuantityVariable[
        Subscript["P", "2"], "Name" -> 
         "pressure at the end of catheter distal to site of insertion", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]))/
     (8*QuantityVariable["L", "Name" -> "catheter length", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["CauchyNumber"]] :> 
   QuantityVariable["Ca", "Name" -> "Cauchy number", 
     "PhysicalQuantity" -> "CauchyNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["v", "Name" -> "characteristic speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["K", "Name" -> "bulk modulus", 
      "PhysicalQuantity" -> "BulkModulus", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["CentrifugalPump"]] :> 
   QuantityVariable["P", "Name" -> "shaft power", "PhysicalQuantity" -> 
      "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["h", "Name" -> "differential head", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["q", "Name" -> "flow rate", "PhysicalQuantity" -> 
        "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/QuantityVariable["\[Eta]", 
      "Name" -> "pump efficiency", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["CerenkovRadiation"]] :> 
   {QuantityVariable["\[Gamma]", "Name" -> "relativistic gamma", 
      "PhysicalQuantity" -> "RelativisticGamma", "CanonicalUnit" -> 
       {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
     1 + (Quantity[None, "SpeedOfLight"^(-2)]*QuantityVariable["K", 
         "Name" -> "kinetic energy of particle", "PhysicalQuantity" -> 
          "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
         "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/QuantityVariable["m", 
        "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}], QuantityVariable[Subscript["v", "p"], 
      "Name" -> "velocity of particle in medium", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Quantity[None, "SpeedOfLight"]*
      Sqrt[1 - QuantityVariable["\[Gamma]", "Name" -> "relativistic gamma", 
          "PhysicalQuantity" -> "RelativisticGamma", "CanonicalUnit" -> 
           {"Unities"}, "UnitDimensions" -> "Dimensionless"]^(-2)], 
    QuantityVariable["\[Theta]", "Name" -> "Cerenkov angle", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcCos[Quantity[None, "SpeedOfLight"]/
       (QuantityVariable["n", "Name" -> "refractive index of medium", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
         Subscript["v", "p"], "Name" -> "velocity of particle in medium", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
    QuantityVariable[Subscript["c", "m"], "Name" -> "light speed in medium", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Quantity[None, "SpeedOfLight"]/QuantityVariable["n", 
       "Name" -> "refractive index of medium", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]}, 
  HoldPattern[MathematicaFormula["ChandrasekharNumber"]] :> 
   QuantityVariable["Q", "Name" -> "Chandrasekhar number", 
     "PhysicalQuantity" -> "ChandrasekharNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["B", "Name" -> "magnetic flux density", 
        "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
         {HoldForm["Teslas"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]^2*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["\[Sigma]", "Name" -> "electric conductivity", 
       "PhysicalQuantity" -> "ElectricConductivity", "CanonicalUnit" -> 
        {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 3}}])/(QuantityVariable["\[Nu]", 
       "Name" -> "kinematic viscosity", "PhysicalQuantity" -> 
        "KinematicViscosity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["ChargedBall"]] :> 
   {QuantityVariable["\[Phi]", "Name" -> "electric potential", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     Piecewise[{{(Quantity[1/(8*Pi), "ElectricConstant"^(-1)]*
          QuantityVariable["Q", "Name" -> "electric charge", 
           "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
            {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
          (3 - QuantityVariable["r", "Name" -> "distance", 
              "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> {
                HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2/
            QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
               "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
              "UnitDimensions" -> {"LengthUnit", 1}]^2))/
         QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}], 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] <= QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}, {(Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*
          QuantityVariable["Q", "Name" -> "electric charge", 
           "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
            {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
         QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}], 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] > QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}}, 0], 
    QuantityVariable["E", "Name" -> "electric field strength", 
      "PhysicalQuantity" -> "ElectricFieldStrength", 
      "CanonicalUnit" -> {HoldForm["Volts"/"Meters"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     Piecewise[{{(Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*
          QuantityVariable["Q", "Name" -> "electric charge", 
           "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
            {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
          QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
            "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}])/
         QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
            "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^3, 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] <= QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}, {(Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*
          QuantityVariable["Q", "Name" -> "electric charge", 
           "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
            {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
         QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
            "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^2, 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] > QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}}, 0]}, 
  HoldPattern[MathematicaFormula["ChargedSphere"]] :> 
   {QuantityVariable["\[Phi]", "Name" -> "electric potential", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     Piecewise[{{(Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*
          QuantityVariable["Q", "Name" -> "electric charge", 
           "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
            {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
         QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}], 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] <= QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}, {(Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*
          QuantityVariable["Q", "Name" -> "electric charge", 
           "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
            {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
         QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}], 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] > QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}}, 0], 
    QuantityVariable["E", "Name" -> "electric field strength", 
      "PhysicalQuantity" -> "ElectricFieldStrength", 
      "CanonicalUnit" -> {HoldForm["Volts"/"Meters"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     Piecewise[{{0, QuantityVariable["r", "Name" -> "distance", 
          "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] <= 
         QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]}, 
       {(Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*QuantityVariable["Q", 
           "Name" -> "electric charge", "PhysicalQuantity" -> 
            "ElectricCharge", "CanonicalUnit" -> {HoldForm["Coulombs"]}, 
           "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, 
             {"TimeUnit", 1}}])/QuantityVariable["r", "Name" -> "distance", 
           "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
        QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
           "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] > QuantityVariable["R", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]}}, 0]}, 
  HoldPattern[MathematicaFormula["CharlesLaw"]] :> 
   QuantityVariable[Subscript["V", 1], "Name" -> "initial volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}]/
     QuantityVariable[Subscript["T", 1], "Name" -> "initial temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    QuantityVariable[Subscript["V", 2], "Name" -> "final volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}]/
     QuantityVariable[Subscript["T", 2], "Name" -> "final temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["CircleArcLength"]] :> 
   QuantityVariable["s", "Name" -> "arc length", "PhysicalQuantity" -> 
      "ArcLength", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Theta]", 
      "Name" -> "plane angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
      "UnitDimensions" -> {"AngleUnit", 1}], 
  HoldPattern[MathematicaFormula["CircleArea"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    Pi*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["CircleAreaDiameter"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2)/4, 
  HoldPattern[MathematicaFormula["CircleSectorArea"]] :> 
   {QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 2}] == 
     (QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
         "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["s", 
        "Name" -> "arc length", "PhysicalQuantity" -> "ArcLength", 
        "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}])/2, 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 2}] == 
     (QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
          "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable[
        "\[Theta]", "Name" -> "plane angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}])/2}, 
  HoldPattern[MathematicaFormula["CircularCoilMaximalMagneticInduction"]] :> 
   QuantityVariable["B", "Name" -> "magnetic induction", 
     "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Log[(2*QuantityVariable["R", "Name" -> "outer coil radius", 
           "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
         QuantityVariable["r", "Name" -> "inner coil radius", 
           "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          Sqrt[(QuantityVariable["l", "Name" -> "coil length", 
               "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
              2 + 4*QuantityVariable["R", "Name" -> "outer coil radius", 
                "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
                 {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
               2)/QuantityVariable["r", "Name" -> "inner coil radius", 
              "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> {
                HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
             2])/((2 + Sqrt[4 + QuantityVariable["l", "Name" -> 
                "coil length", "PhysicalQuantity" -> "Length", 
               "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                {"LengthUnit", 1}]^2/QuantityVariable["r", "Name" -> 
                "inner coil radius", "PhysicalQuantity" -> "Radius", 
               "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                {"LengthUnit", 1}]^2])*QuantityVariable["r", 
          "Name" -> "inner coil radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}])]*Quantity[1/2, "MagneticConstant"]*
      QuantityVariable["I", "Name" -> "electric current", 
       "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
        {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
         1}]*QuantityVariable["N", "Name" -> "coil turns", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (-QuantityVariable["r", "Name" -> "inner coil radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
      QuantityVariable["R", "Name" -> "outer coil radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["CircumferenceForm1"]] :> 
   QuantityVariable["C", "Name" -> "circumference", 
     "PhysicalQuantity" -> "Circumference", "CanonicalUnit" -> 
      {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == Pi*QuantityVariable["d", "Name" -> "diameter", 
      "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["CircumferenceForm2"]] :> 
   QuantityVariable["C", "Name" -> "circumference", 
     "PhysicalQuantity" -> "Circumference", "CanonicalUnit" -> 
      {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 2*Pi*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["CloudBaseHeight"]] :> 
   QuantityVariable[Subscript["H", "b"], "Name" -> "cloud base height", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[124.67273407305822, "Meters"/"Kelvins"]*
     (QuantityVariable[Subscript["T", "db"], 
       "Name" -> "dry bulb temperature", "PhysicalQuantity" -> "Temperature", 
       "CanonicalUnit" -> {HoldForm["DegreesCelsius"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}] - 
      QuantityVariable[Subscript["T", "dew"], 
       "Name" -> "dew point temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["DegreesCelsius"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula["CoaxialCableSelfInductance"]] :> 
   QuantityVariable["L", "Name" -> "self\[Hyphen]inductance", 
     "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
      {HoldForm["Henries"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    Log[QuantityVariable[Subscript["R", "1"], "Name" -> "sheath radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       QuantityVariable[Subscript["R", "2"], "Name" -> "conductor radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]]*
     Quantity[1/(2*Pi), "MagneticConstant"]*QuantityVariable["l", 
      "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], HoldPattern[MathematicaFormula["CohensD"]] :> 
   QuantityVariable["d", "Name" -> "Cohen's d", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable[Subscript[OverBar["x"], 1], 
       "Name" -> "first sample mean", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] - 
      QuantityVariable[Subscript[OverBar["x"], 2], 
       "Name" -> "second sample mean", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     Sqrt[((-1 + QuantityVariable[Subscript["n", "1"], 
           "Name" -> "first sample size", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])*QuantityVariable[Subscript["s", 1], 
           "Name" -> "first sample standard deviation", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]^2 + (-1 + QuantityVariable[Subscript["n", 2], 
           "Name" -> "second sample size", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])*QuantityVariable[Subscript["s", 2], 
           "Name" -> "second sample standard deviation", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2)/
       (-2 + QuantityVariable[Subscript["n", 2], "Name" -> 
          "second sample size", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable[Subscript["n", "1"], 
         "Name" -> "first sample size", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])], 
  HoldPattern[MathematicaFormula["CombinedGasLaw"]] :> 
   (QuantityVariable[Subscript["P", 1], "Name" -> "initial pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Atmospheres"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["V", 1], "Name" -> "initial volume", "PhysicalQuantity" -> 
        "Volume", "CanonicalUnit" -> {HoldForm["Milliliters"]}, 
       "UnitDimensions" -> {"LengthUnit", 3}])/QuantityVariable[
      Subscript["T", 1], "Name" -> "initial temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (QuantityVariable[Subscript["P", 2], "Name" -> "final pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Atmospheres"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["V", 2], "Name" -> "final volume", "PhysicalQuantity" -> 
        "Volume", "CanonicalUnit" -> {HoldForm["Milliliters"]}, 
       "UnitDimensions" -> {"LengthUnit", 3}])/QuantityVariable[
      Subscript["T", 2], "Name" -> "final temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["CommodityContractsOptimalNumber"]] :> 
   QuantityVariable[SuperStar["N"], "Name" -> 
      "optimal futures contracts number", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript["N", "A"], "Name" -> "position size", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
      QuantityVariable[SuperStar["h"], "Name" -> 
        "minimum variance hedge ratio", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable[Subscript["Q", "F"], 
      "Name" -> "futures contract value", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["ComplementProbability"]] :> 
   QuantityVariable["P(A)", "Name" -> Row[{"probability of ", 
         Style["A", Italic]}], "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     QuantityVariable["P(\!\(TraditionalForm\`\*TemplateBox[List[StyleBox[\"\
\\\"A\\\"\", Italic, Rule[StripOnInput, False]], \"\\\"c\\\"\"], \
\"Superscript\", Rule[SyntaxForm, SuperscriptBox]]\))", 
      "Name" -> Row[{"probability of ", Style["A", Italic], 
         "\[Hyphen]complement"}], "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    1, HoldPattern[MathematicaFormula["CompoundAnnualGrowthRate"]] :> 
   QuantityVariable["CAGR", "Name" -> "compound annual growth rate", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -1 + (QuantityVariable[Subscript["V", "f"], 
        "Name" -> "final investment value", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]/QuantityVariable[Subscript["V", "i"], 
        "Name" -> "investment", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}])^(Quantity[None, "Years"]/QuantityVariable["T", 
        "Name" -> "time horizon", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Years"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}]), 
  HoldPattern[MathematicaFormula["ComptonWavelength"]] :> 
   QuantityVariable[Subscript["\[Lambda]", "C"], 
     "Name" -> "Compton wavelength", "PhysicalQuantity" -> "Wavelength", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == Quantity[1, "PlanckConstant"/"SpeedOfLight"]/
     QuantityVariable["m", "Name" -> "mass of particle", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula["ConcentrationConversion"]] :> 
   QuantityVariable["ppm", "Name" -> "parts per million", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["c", "Name" -> "concentration", 
      "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
       {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable["M", 
      "Name" -> "molar mass of solute", "PhysicalQuantity" -> "MolarMass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
      "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula["ConeMomentOfInertia"]] :> 
   {QuantityVariable[Subscript["I", "\[DoubleVerticalBar]"], 
      "Name" -> "parallel moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (3*QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/10, 
    QuantityVariable[Subscript["I", "\[UpTee]"], 
      "Name" -> "perpendicular moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (3*QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*(QuantityVariable["h", "Name" -> "height", 
          "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        4*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
            "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^2))/80}, 
  HoldPattern[MathematicaFormula["ContinuousCapitalRecoveryFactor"]] :> 
   QuantityVariable["CRF", "Name" -> "capital recovery factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (-1 + E^QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/
     (1 - E^(-(QuantityVariable["i", "Name" -> "interest rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable["n", 
          "Name" -> "interest periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))), 
  HoldPattern[MathematicaFormula["CoulombsLaw"]] :> 
   {QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*QuantityVariable[
        Subscript["Q", 1], "Name" -> "charge 1", "PhysicalQuantity" -> 
         "ElectricCharge", "CanonicalUnit" -> {HoldForm["Coulombs"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
       QuantityVariable[Subscript["Q", 2], "Name" -> "charge 2", 
        "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
         {HoldForm["Coulombs"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
      QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
         "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2, 
    QuantityVariable["U", "Name" -> "potential energy", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*QuantityVariable[
        Subscript["Q", 1], "Name" -> "charge 1", "PhysicalQuantity" -> 
         "ElectricCharge", "CanonicalUnit" -> {HoldForm["Coulombs"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
       QuantityVariable[Subscript["Q", 2], "Name" -> "charge 2", 
        "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
         {HoldForm["Coulombs"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
      QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
        "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]}, 
  HoldPattern[MathematicaFormula["CowlingNumber1"]] :> 
   QuantityVariable[Subscript["Co", 1], "Name" -> "first Cowling number", 
     "PhysicalQuantity" -> "CowlingNumber1", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["B", "Name" -> "magnetic flux density", 
        "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
         {HoldForm["Teslas"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]^2*
      QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Sigma]", "Name" -> "electric conductivity", 
       "PhysicalQuantity" -> "ElectricConductivity", "CanonicalUnit" -> 
        {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 3}}])/(QuantityVariable["v", 
       "Name" -> "characteristic speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["CowlingNumber2"]] :> 
   QuantityVariable["Co", "Name" -> "(second) Cowling number", 
     "PhysicalQuantity" -> "CowlingNumber2", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["B", "Name" -> "magnetic flux density", 
       "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
        {HoldForm["Teslas"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]^2/
     (QuantityVariable["v", "Name" -> "characteristic speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*QuantityVariable["\[Mu]", 
       "Name" -> "permeability", "PhysicalQuantity" -> 
        "MagneticPermeability", "CanonicalUnit" -> 
        {HoldForm["Henries"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["CuboidMomentOfInertia"]] :> 
   QuantityVariable[Subscript["I", "z"], "Name" -> "moment of inertia", 
     "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*(QuantityVariable["l", "Name" -> "length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["w", "Name" -> "width", "PhysicalQuantity" -> 
          "Width", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2))/12, 
  HoldPattern[MathematicaFormula["CyclotronFrequency"]] :> 
   QuantityVariable["\[Nu]", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    (QuantityVariable["B", "Name" -> "magnetic induction", 
       "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
        {HoldForm["Teslas"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["q", "Name" -> "electric charge", 
       "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
        {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
     (2*Pi*QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> 
        "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
       "UnitDimensions" -> {"MassUnit", 1}]), 
  HoldPattern[MathematicaFormula["CylinderMomentOfInertia"]] :> 
   {QuantityVariable[Subscript["I", "\[DoubleVerticalBar]"], 
      "Name" -> "parallel moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/2, 
    QuantityVariable[Subscript["I", "\[UpTee]"], 
      "Name" -> "perpendicular moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*(QuantityVariable["h", "Name" -> "height", 
          "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        3*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
            "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^2))/12}, 
  HoldPattern[MathematicaFormula["DeanNumber"]] :> 
   QuantityVariable["De", "Name" -> "Dean number", "PhysicalQuantity" -> 
      "DeanNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
        "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*
      Sqrt[QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
          "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["R", 
         "Name" -> "radius of curvature", "PhysicalQuantity" -> 
          "RadiusOfCurvature", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]]*QuantityVariable["v", 
       "Name" -> "characteristic speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     (Sqrt[2]*QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["DecibelToRatio"]] :> 
   QuantityVariable["G", "Name" -> "decibel gain", "PhysicalQuantity" -> 
      "LogarithmicQuantity", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["decibels"]]}, "UnitDimensions" -> 
      "Dimensionless"] == 
    Log[QuantityVariable[Subscript["Q", 1]/Subscript["Q", 2], 
       "Name" -> "ratio of quantities", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]]*
     Quantity[20/Log[10], IndependentUnit["decibels"]], 
  HoldPattern[MathematicaFormula["DepthOfField"]] :> 
   {QuantityVariable["DoF", "Name" -> "depth of field for photographic lens", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     QuantityVariable[Subscript["D", "F"], "Name" -> 
        "far limit of depth of field", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}] - QuantityVariable[Subscript["D", "N"], 
       "Name" -> "near limit of depth of field", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable[Subscript["D", "F"], 
      "Name" -> "far limit of depth of field", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["s", 
        "Name" -> "focused distance", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])/(QuantityVariable["f", "Name" -> "focal length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 - 
       QuantityVariable["c", "Name" -> "circle of confusion", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (-QuantityVariable["f", "Name" -> "focal length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
         QuantityVariable["s", "Name" -> "focused distance", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])), 
    QuantityVariable[Subscript["D", "N"], 
      "Name" -> "near limit of depth of field", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["s", 
        "Name" -> "focused distance", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])/(QuantityVariable["f", "Name" -> "focal length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["c", "Name" -> "circle of confusion", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (-QuantityVariable["f", "Name" -> "focal length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
         QuantityVariable["s", "Name" -> "focused distance", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]))}, 
  HoldPattern[MathematicaFormula["DieselCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - (QuantityVariable["r", "Name" -> "compression ratio", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
        Subscript["T", "c"], "Name" -> "cold reservoir temperature", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]*
       (1 - ((QuantityVariable["r", "Name" -> "compression ratio", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
            (1 - QuantityVariable["\[Gamma]", "Name" -> 
               "heat capacity ratio", "PhysicalQuantity" -> 
               "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
              "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
            Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
            "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
             {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
              1}])/QuantityVariable[Subscript["T", "c"], 
           "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
            "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
           "UnitDimensions" -> {"TemperatureUnit", 1}])^
         QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
          "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
           {"Unities"}, "UnitDimensions" -> "Dimensionless"]))/
      (QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["r", "Name" -> "compression ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^QuantityVariable["\[Gamma]", 
           "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
            "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
          Subscript["T", "c"], "Name" -> "cold reservoir temperature", 
          "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
           {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
            1}] - QuantityVariable["r", "Name" -> "compression ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
          Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
          "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
           {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
            1}])), HoldPattern[MathematicaFormula[
     "DifferentialAmplifier"]] :> 
   {QuantityVariable[Subscript["V", "out"], "Name" -> "output voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     -((QuantityVariable[Subscript["R", "f"], "Name" -> 
           "feedback resistance", "PhysicalQuantity" -> "ElectricResistance", 
          "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}]*QuantityVariable[Subscript["V", "1"], 
          "Name" -> "input voltage 1", "PhysicalQuantity" -> 
           "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
          "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
            {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}])/
        QuantityVariable[Subscript["R", "1"], "Name" -> 
          "voltage source resistance 1", "PhysicalQuantity" -> 
          "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}]) + 
      ((QuantityVariable[Subscript["R", "1"], "Name" -> 
           "voltage source resistance 1", "PhysicalQuantity" -> 
           "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
          "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
            {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] + 
         QuantityVariable[Subscript["R", "f"], "Name" -> 
           "feedback resistance", "PhysicalQuantity" -> "ElectricResistance", 
          "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}])*QuantityVariable[Subscript["R", "g"], 
         "Name" -> "terminal to ground resistance", "PhysicalQuantity" -> 
          "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}]*QuantityVariable[
         Subscript["V", "2"], "Name" -> "input voltage 2", 
         "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
          {HoldForm["Volts"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -3}}])/(QuantityVariable[Subscript["R", "1"], 
         "Name" -> "voltage source resistance 1", "PhysicalQuantity" -> 
          "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}]*
        (QuantityVariable[Subscript["R", "2"], "Name" -> 
           "voltage source resistance 2", "PhysicalQuantity" -> 
           "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
          "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
            {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] + 
         QuantityVariable[Subscript["R", "g"], "Name" -> 
           "terminal to ground resistance", "PhysicalQuantity" -> 
           "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
          "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
            {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}])), 
    QuantityVariable["A", "Name" -> "voltage gain", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == Abs[QuantityVariable[Subscript["V", "out"], 
        "Name" -> "output voltage", "PhysicalQuantity" -> 
         "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -3}}]/
       (QuantityVariable[Subscript["V", "1"], "Name" -> "input voltage 1", 
         "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
          {HoldForm["Volts"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -3}}] - QuantityVariable[Subscript["V", "2"], 
         "Name" -> "input voltage 2", "PhysicalQuantity" -> 
          "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}])]}, 
  HoldPattern[MathematicaFormula["DifferentialGearRatio"]] :> 
   QuantityVariable["r", "Name" -> "gear ratio", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == (Quantity[1/2, "Radians"^(-1)]*
      QuantityVariable["D", "Name" -> "tire diameter", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Omega]", "Name" -> "engine angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}])/QuantityVariable["v", 
      "Name" -> "vehicle speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["DiskMomentOfInertia"]] :> 
   {QuantityVariable[Subscript["I", "\[DoubleVerticalBar]"], 
      "Name" -> "parallel moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/2, 
    QuantityVariable[Subscript["I", "\[UpTee]"], 
      "Name" -> "perpendicular moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/4}, 
  HoldPattern[MathematicaFormula["DittusBoelterEquation"]] :> 
   QuantityVariable["Nu", "Name" -> "Nusselt number for heat transfer", 
     "PhysicalQuantity" -> "NusseltNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    0.023*QuantityVariable["Pr", "Name" -> 
        "Prandtl number for heat transfer", "PhysicalQuantity" -> 
        "PrandtlNumberHeatTransfer", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^QuantityVariable["n", 
       "Name" -> "heating exponent", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["Re", "Name" -> "Reynolds number", 
       "PhysicalQuantity" -> "ReynoldsNumber", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"]^(4/5), 
  HoldPattern[MathematicaFormula["DividendDiscountModel"]] :> 
   QuantityVariable["value", "Name" -> "stock value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["div", "Name" -> "initial dividend amount", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]/
     (QuantityVariable["d", "Name" -> "discount rate", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] - QuantityVariable["g", 
       "Name" -> "dividend growth rate", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["DolbearsLaw"]] :> 
   QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
      "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
     "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    Quantity[50 + (-40 + QuantityVariable["N", "Name" -> 
           "cricket chirps per minute", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/4, "DegreesFahrenheit"]*
     (50 + (-40 + QuantityVariable["N", "Name" -> 
          "cricket chirps per minute", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])/4), 
  HoldPattern[MathematicaFormula["DopplerBlueshift"]] :> 
   QuantityVariable["z", "Name" -> "redshift", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == Quantity[-1, "SpeedOfLight"^(-1)]*
     QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["DopplerRedshift"]] :> 
   QuantityVariable["z", "Name" -> "redshift", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == Quantity[None, "SpeedOfLight"^(-1)]*
     QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["DoyleLogRule"]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["BoardFeet"]}, "UnitDimensions" -> 
      {"LengthUnit", 3}] == Quantity[1/16, "BoardFeet"/"Feet"]*
     (-4 + Quantity[None, "Inches"^(-1)]*QuantityVariable["d", 
         "Name" -> "diameter", "PhysicalQuantity" -> "Diameter", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}])^2*QuantityVariable["L", "Name" -> "length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["DragCoefficient"]] :> 
   QuantityVariable[Subscript["C", "d"], "Name" -> "drag coefficient", 
     "PhysicalQuantity" -> "DragCoefficient", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (2*QuantityVariable[Subscript["F", "d"], "Name" -> "drag force", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable["u", 
        "Name" -> "characteristic speed", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["DrakeEquation"]] :> 
   QuantityVariable["N", "Name" -> 
      "number of communicating civilizations in the Milky Way", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["L", "Name" -> 
       "average lifetime of communicating civilizations", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Years"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]*QuantityVariable[
      Subscript["f", "c"], "Name" -> 
       "fraction of civilizations that communicate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
      Subscript["f", "i"], "Name" -> "fraction of life\[Hyphen]bearing \
planets that develop intelligent life", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable[Subscript["f", "l"], 
      "Name" -> "fraction of Earth\[Hyphen]like planets that develop life", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
      Subscript["f", "p"], "Name" -> "fraction of stars with planets", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
      Subscript["n", "e"], "Name" -> 
       "average number of Earth\[Hyphen]like planets per star with planets", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable[SuperStar["R"], 
      "Name" -> "rate of star formation in the Milky Way", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm[1/"Years"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula["DurationBasedHedgeRatio"]] :> 
   QuantityVariable[SuperStar["N"], "Name" -> 
      "optimal futures contracts number", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["P", "Name" -> "portfolio value", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
      QuantityVariable[Subscript["D", "P"], "Name" -> "duration portfolio", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}])/
     (QuantityVariable[Subscript["D", "F"], "Name" -> 
        "duration underlying asset", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}]*QuantityVariable[Subscript["F", "C"], 
       "Name" -> "interest rate futures contract price", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]), 
  HoldPattern[MathematicaFormula["EarthCircularOrbitPeriod"]] :> 
   QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> "Period", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}] == 
    2*Pi*Sqrt[Quantity[1, 1/("EarthMass"*"GravitationalConstant")]*
       (Quantity[None, "EarthEquatorialRadius"] + QuantityVariable["h", 
          "Name" -> "altitude", "PhysicalQuantity" -> "Height", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}])^3], 
  HoldPattern[MathematicaFormula["EarthquakeDowndipRuptureWidth"]] :> 
   QuantityVariable["RW", "Name" -> "downdip rupture width", 
     "PhysicalQuantity" -> "Width", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    10^(-1.01 + 0.32*QuantityVariable[Subscript["M", "w"], 
         "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*Quantity[None, "Kilometers"], 
  HoldPattern[MathematicaFormula["EarthquakeFaultSlip"]] :> 
   {QuantityVariable["MD", "Name" -> "maximum displacement", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     10^(-5.46 + 0.82*QuantityVariable[Subscript["M", "w"], 
          "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*Quantity[None, "Meters"], 
    QuantityVariable["AD", "Name" -> "average displacement", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     10^(-4.8 + 0.69*QuantityVariable[Subscript["M", "w"], 
          "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*Quantity[None, "Meters"]}, 
  HoldPattern[MathematicaFormula["EarthquakeFaultSlipRate"]] :> 
   QuantityVariable[Subscript["M", "w"], 
     "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    7.223 + 0.5485139306438069*Log[QuantityVariable["S", 
        "Name" -> "fault slip rate", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Millimeters"/"Years"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]], 
  HoldPattern[MathematicaFormula["EarthquakeRuptureArea"]] :> 
   QuantityVariable["RA", "Name" -> "rupture area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    10^(-3.49 + 0.91*QuantityVariable[Subscript["M", "w"], 
         "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*Quantity[None, "Kilometers"^2], 
  HoldPattern[MathematicaFormula["EarthquakeRuptureLength"]] :> 
   {QuantityVariable["SRL", "Name" -> "surface rupture length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     10^(-3.22 + 0.69*QuantityVariable[Subscript["M", "w"], 
          "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*Quantity[None, "Kilometers"], 
    QuantityVariable["RLD", "Name" -> "subsurface rupture length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     10^(-1.88 + 0.5*QuantityVariable[Subscript["M", "w"], 
          "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*Quantity[None, "Kilometers"]}, 
  HoldPattern[MathematicaFormula["EckertNumber"]] :> 
   QuantityVariable["Ec", "Name" -> "Eckert number", 
     "PhysicalQuantity" -> "EckertNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2/
     (2*QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]), 
  HoldPattern[MathematicaFormula["EconomicValueAdded"]] :> 
   QuantityVariable["EVA", "Name" -> "economic value added", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(QuantityVariable["K", "Name" -> "capital employed", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
       QuantityVariable["WACC", "Name" -> "weighted average cost of capital", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + QuantityVariable[
      Subscript["P", "t"], "Name" -> "net operating profit after taxes", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["EkmanNumber"]] :> 
   QuantityVariable["Ek", "Name" -> "Ekman number", 
     "PhysicalQuantity" -> "EkmanNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Nu]", "Name" -> "kinematic viscosity", 
      "PhysicalQuantity" -> "KinematicViscosity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}]/
     (QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["\[CapitalOmega]", "Name" -> "angular velocity", 
       "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["ElasticCollision"]] :> 
   {QuantityVariable[Subscript["v", 1, "f"], "Name" -> "final speed 1", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
        QuantityVariable[Subscript["v", 1, "i"], "Name" -> "initial speed 1", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
        QuantityVariable[Subscript["v", 2, "i"], "Name" -> "initial speed 2", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
        (-QuantityVariable[Subscript["v", 1, "i"], "Name" -> 
            "initial speed 1", "PhysicalQuantity" -> "Speed", 
           "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
           "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
         QuantityVariable[Subscript["v", 2, "i"], "Name" -> 
           "initial speed 2", "PhysicalQuantity" -> "Speed", 
          "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))/
      (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
    QuantityVariable[Subscript["v", 2, "f"], "Name" -> "final speed 2", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
        QuantityVariable[Subscript["v", 1, "i"], "Name" -> "initial speed 1", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
       QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
        (QuantityVariable[Subscript["v", 1, "i"], "Name" -> 
           "initial speed 1", "PhysicalQuantity" -> "Speed", 
          "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
         QuantityVariable[Subscript["v", 2, "i"], "Name" -> 
           "initial speed 2", "PhysicalQuantity" -> "Speed", 
          "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]) + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
        QuantityVariable[Subscript["v", 2, "i"], "Name" -> "initial speed 2", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}])}, 
  HoldPattern[MathematicaFormula["ElectricalEnergy"]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["I", "Name" -> "electric current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["V", "Name" -> "voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["EllipseArea"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    Pi*QuantityVariable["a", "Name" -> "semimajor axis", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["b", "Name" -> "semiminor axis", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["EllipseEccentricity"]] :> 
   QuantityVariable["e", "Name" -> "eccentricity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    Sqrt[QuantityVariable["a", "Name" -> "semimajor axis", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^2 - QuantityVariable["b", 
         "Name" -> "semiminor axis", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2]/QuantityVariable["a", 
      "Name" -> "semimajor axis", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["EllipsoidVolume"]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    (4*Pi*QuantityVariable["a", "Name" -> "first semiaxis", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["b", "Name" -> "second semiaxis", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["c", "Name" -> "third semiaxis", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}])/3, 
  HoldPattern[MathematicaFormula["EllipticalLaminaMomentOfInertia"]] :> 
   QuantityVariable[Subscript["I", "z"], "Name" -> "moment of inertia", 
     "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    ((QuantityVariable["a", "Name" -> "semimajor axis", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["b", "Name" -> "semiminor axis", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/4, 
  HoldPattern[MathematicaFormula["EnergyEfficiency"]] :> 
   QuantityVariable["\[Eta]", "Name" -> "efficiency", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["W", "Name" -> "work", "PhysicalQuantity" -> "Work", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> 
       "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["EotvosNumber"]] :> 
   QuantityVariable["Eo", "Name" -> "E\[ODoubleDot]tv\[ODoubleDot]s number", 
     "PhysicalQuantity" -> "EotvosNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["\[CapitalDelta]\[InvisibleSpace]\[Rho]", 
       "Name" -> "density difference", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
      "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["EquivalentSoundLevel"]] :> 
   QuantityVariable[Subscript["L", Style["eq", Italic]], 
     "Name" -> "equivalent sound level", "PhysicalQuantity" -> 
      "LogarithmicSoundPressure", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["decibels sound pressure level"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Log[QuantityVariable[Subscript["t", Style["on", Italic]], 
         "Name" -> "time source is on", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]/QuantityVariable["T", "Name" -> "total time", 
         "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
          {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]]*
      Quantity[10/Log[10], IndependentUnit[
        "decibels sound pressure level"]] + QuantityVariable[
      Subscript["L", "s"], "Name" -> "steady sound level", 
      "PhysicalQuantity" -> "LogarithmicSoundPressure", 
      "CanonicalUnit" -> {HoldForm[IndependentUnit[
          "decibels sound pressure level"]]}, "UnitDimensions" -> 
       "Dimensionless"], HoldPattern[MathematicaFormula["EricssonCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - QuantityVariable[Subscript["T", "c"], 
       "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]/QuantityVariable[
       Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["ErlangB"]] :> 
   QuantityVariable[Subscript["P", "b"], "Name" -> "blocking probability", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["E", "Name" -> "traffic volume", "PhysicalQuantity" -> 
        "TelecommunicationsTraffic", "CanonicalUnit" -> 
        {HoldForm["Erlangs"], "Unities"}, "UnitDimensions" -> 
        "Dimensionless"]^QuantityVariable["m", "Name" -> "number of servers", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]/
     (E^QuantityVariable["E", "Name" -> "traffic volume", 
        "PhysicalQuantity" -> "TelecommunicationsTraffic", 
        "CanonicalUnit" -> {HoldForm["Erlangs"], "Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
      Gamma[1 + QuantityVariable["m", "Name" -> "number of servers", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"], QuantityVariable["E", 
        "Name" -> "traffic volume", "PhysicalQuantity" -> 
         "TelecommunicationsTraffic", "CanonicalUnit" -> 
         {HoldForm["Erlangs"], "Unities"}, "UnitDimensions" -> 
         "Dimensionless"]]), HoldPattern[MathematicaFormula["ErlangC"]] :> 
   QuantityVariable[Subscript["P", "w"], "Name" -> "waiting probability", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["E", "Name" -> "traffic volume", "PhysicalQuantity" -> 
        "TelecommunicationsTraffic", "CanonicalUnit" -> 
        {HoldForm["Erlangs"], "Unities"}, "UnitDimensions" -> 
        "Dimensionless"]^QuantityVariable["m", "Name" -> "number of servers", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]/
     (QuantityVariable["E", "Name" -> "traffic volume", 
        "PhysicalQuantity" -> "TelecommunicationsTraffic", 
        "CanonicalUnit" -> {HoldForm["Erlangs"], "Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^QuantityVariable["m", 
        "Name" -> "number of servers", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] - E^QuantityVariable["E", 
         "Name" -> "traffic volume", "PhysicalQuantity" -> 
          "TelecommunicationsTraffic", "CanonicalUnit" -> 
          {HoldForm["Erlangs"], "Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*Gamma[QuantityVariable["m", 
         "Name" -> "number of servers", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"], QuantityVariable["E", "Name" -> "traffic volume", 
         "PhysicalQuantity" -> "TelecommunicationsTraffic", 
         "CanonicalUnit" -> {HoldForm["Erlangs"], "Unities"}, 
         "UnitDimensions" -> "Dimensionless"]]*
       (QuantityVariable["E", "Name" -> "traffic volume", 
         "PhysicalQuantity" -> "TelecommunicationsTraffic", 
         "CanonicalUnit" -> {HoldForm["Erlangs"], "Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - QuantityVariable["m", 
         "Name" -> "number of servers", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula["EscapeVelocity"]] :> 
   QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[2]*Sqrt[(Quantity[None, "GravitationalConstant"]*
        QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}])/QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula["EulerCharacteristic"]] :> 
   QuantityVariable["\[Chi]", "Name" -> "Euler characteristic", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -QuantityVariable["D", "Name" -> "edges", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["F", "Name" -> "faces", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] + QuantityVariable["V", 
      "Name" -> "vertices", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["ExposureValue"]] :> 
   QuantityVariable["EV", "Name" -> "exposure value", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Log[(Quantity[None, "Seconds"]*QuantityVariable["N", 
          "Name" -> "f\[Hyphen]number", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2)/QuantityVariable["t", 
        "Name" -> "shutter speed (exposure time)", "PhysicalQuantity" -> 
         "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
        "UnitDimensions" -> {"TimeUnit", 1}]]/Log[2], 
  HoldPattern[MathematicaFormula["FannoFlow"]] :> 
   {QuantityVariable["P"/Subscript["P", "*"], 
      "Name" -> "ratio of pressure and choked pressure", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     1/(Sqrt[2]*QuantityVariable["Ma", "Name" -> "Mach number", 
        "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       Sqrt[(1 + 0.5*QuantityVariable["Ma", "Name" -> "Mach number", 
             "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
           (-1 + QuantityVariable["\[Gamma]", "Name" -> 
              "heat capacity ratio", "PhysicalQuantity" -> 
              "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
             "UnitDimensions" -> "Dimensionless"]))/
         (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"])]), 
    QuantityVariable["\[Rho]"/SubStar["\[Rho]"], 
      "Name" -> "ratio of density and choked density", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (Sqrt[2]*Sqrt[(1 + 0.5*QuantityVariable["Ma", "Name" -> "Mach number", 
             "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
           (-1 + QuantityVariable["\[Gamma]", "Name" -> 
              "heat capacity ratio", "PhysicalQuantity" -> 
              "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
             "UnitDimensions" -> "Dimensionless"]))/
         (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"])])/
      QuantityVariable["Ma", "Name" -> "Mach number", "PhysicalQuantity" -> 
        "MachNumber", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["T"/SubStar["T"], "Name" -> 
       "ratio of temperature and choked temperature", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      (2*(1 + 0.5*QuantityVariable["Ma", "Name" -> "Mach number", 
           "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
         (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]))), 
    QuantityVariable["V"/SubStar["V"], "Name" -> 
       "ratio of velocity and choked velocity", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable["Ma", "Name" -> "Mach number", 
       "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]/
      (Sqrt[2]*Sqrt[(1 + 0.5*QuantityVariable["Ma", "Name" -> "Mach number", 
             "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
           (-1 + QuantityVariable["\[Gamma]", "Name" -> 
              "heat capacity ratio", "PhysicalQuantity" -> 
              "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
             "UnitDimensions" -> "Dimensionless"]))/
         (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"])]), 
    QuantityVariable[Subscript["P", 0]/Subscript["P", "0*"], 
      "Name" -> "ratio of stagnation and choked stagnation pressure", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (2^((1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
         (2*(-1 + QuantityVariable["\[Gamma]", "Name" -> 
             "heat capacity ratio", "PhysicalQuantity" -> 
             "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])))*
       ((1 + 0.5*QuantityVariable["Ma", "Name" -> "Mach number", 
             "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
           (-1 + QuantityVariable["\[Gamma]", "Name" -> 
              "heat capacity ratio", "PhysicalQuantity" -> 
              "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
             "UnitDimensions" -> "Dimensionless"]))/
         (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]))^
        ((1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
         (2*(-1 + QuantityVariable["\[Gamma]", "Name" -> 
             "heat capacity ratio", "PhysicalQuantity" -> 
             "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]))))/
      QuantityVariable["Ma", "Name" -> "Mach number", "PhysicalQuantity" -> 
        "MachNumber", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]}, 
  HoldPattern[MathematicaFormula["FieldOfView"]] :> 
   {QuantityVariable[Subscript["V", "v"], "Name" -> "vertical field of view", 
      "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     QuantityVariable["h", "Name" -> "height of image format", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
      QuantityVariable["M", "Name" -> "subject magnification factor", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["M", "Name" -> "subject magnification factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]/
      (-QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}] + QuantityVariable["s", 
        "Name" -> "subject distance", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])}, 
  HoldPattern[MathematicaFormula["FirstLawOfThermodynamics"]] :> 
   QuantityVariable["\[CapitalDelta]\[InvisibleSpace]E", 
     "Name" -> "change in internal energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]Q", 
      "Name" -> "heat transferred", "PhysicalQuantity" -> "Heat", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] - 
     QuantityVariable["\[CapitalDelta]\[InvisibleSpace]W", 
      "Name" -> "work extracted", "PhysicalQuantity" -> "Work", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["FirstOrderArrheniusEquation"]] :> 
   QuantityVariable["k", "Name" -> "first order rate constant", 
     "PhysicalQuantity" -> "FirstOrderRateConstant", 
     "CanonicalUnit" -> {HoldForm[1/"Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", -1}] == 
    E^((Quantity[-1, "MolarGasConstant"^(-1)]*QuantityVariable[
         Subscript["E", "a"], "Name" -> "activation energy", 
         "PhysicalQuantity" -> "ActivationEnergy", "CanonicalUnit" -> 
          {HoldForm["Joules"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/QuantityVariable["T", "Name" -> "temperature", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}])*
     QuantityVariable["A", "Name" -> "pre\[Hyphen]exponential factor", 
      "PhysicalQuantity" -> "FirstOrderArrheniusFactor", 
      "CanonicalUnit" -> {HoldForm[1/"Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula["FluidColumnPressure"]] :> 
   QuantityVariable["P", "Name" -> "pressure at bottom of fluid column", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "StandardAccelerationOfGravity"]*QuantityVariable["h", 
       "Name" -> "height of fluid column", "PhysicalQuantity" -> "Height", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
       "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
     QuantityVariable[Subscript["P", "0"], 
      "Name" -> "pressure at top of fluid column", "PhysicalQuantity" -> 
       "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}], HoldPattern[MathematicaFormula["FNumber"]] :> 
   QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["D", 
      "Name" -> "diameter of aperture", "PhysicalQuantity" -> "Diameter", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["FNumberArithmetic"]] :> 
   QuantityVariable[Subscript["N", 2], 
     "Name" -> "resultant f\[Hyphen]number", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 2^(QuantityVariable["\[Delta]\[InvisibleSpace]F", 
        "Name" -> "f\[Hyphen]stop increment", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/2)*QuantityVariable[Subscript["N", 1], 
      "Name" -> "original f\[Hyphen]number", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula["FootballPasserRating"]] :> 
   {QuantityVariable["CMP%C", "Name" -> "completion percentage component", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     Max[0, Min[2.375, 5*(-0.3 + QuantityVariable["COMP", 
           "Name" -> "completions", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["ATT", "Name" -> "attempts", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])]], 
    QuantityVariable["YPAC", "Name" -> "yards per attempt component", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     Max[0, Min[2.375, 0.25*(-3 + QuantityVariable["YARDS", 
           "Name" -> "yards", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["ATT", "Name" -> "attempts", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])]], 
    QuantityVariable["TDC", "Name" -> "touchdowns per attempt component", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     Max[0, Min[2.375, (20*QuantityVariable["TD", "Name" -> "touchdowns", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])/QuantityVariable["ATT", 
         "Name" -> "attempts", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]]], QuantityVariable["INTC", 
      "Name" -> "interceptions per attempt component", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     Max[0, Min[2.375, 2.375 - (25*QuantityVariable["INT", 
           "Name" -> "interceptions", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["ATT", "Name" -> "attempts", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]]], 
    QuantityVariable["PR", "Name" -> "passer rating", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (50*(QuantityVariable["CMP%C", "Name" -> 
          "completion percentage component", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["INTC", 
         "Name" -> "interceptions per attempt component", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] + QuantityVariable["TDC", 
         "Name" -> "touchdowns per attempt component", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["YPAC", 
         "Name" -> "yards per attempt component", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/3}, 
  HoldPattern[MathematicaFormula["ForceComponents"]] :> 
   {QuantityVariable[Subscript["F", "x"], 
      "Name" -> "x\[Hyphen]component of the force", "PhysicalQuantity" -> 
       "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == Cos[QuantityVariable["\[Theta]", 
        "Name" -> "angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]]*QuantityVariable["F", "Name" -> "force", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}], 
    QuantityVariable[Subscript["F", "y"], 
      "Name" -> "y\[Hyphen]component of the force", "PhysicalQuantity" -> 
       "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == QuantityVariable["F", "Name" -> "force", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      Sin[QuantityVariable["\[Theta]", "Name" -> "angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]}, 
  HoldPattern[MathematicaFormula["FourierNumberMassTransfer"]] :> 
   QuantityVariable[SuperStar["Fo"], "Name" -> 
      "Fourier number for mass transfer", "PhysicalQuantity" -> 
      "FourierNumberMassTransfer", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["D", "Name" -> "diffusion coefficient", 
       "PhysicalQuantity" -> "DiffusionCoefficient", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["t", 
       "Name" -> "characteristic time interval", "PhysicalQuantity" -> 
        "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}])/
     QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["FouriersLaw"]] :> 
   QuantityVariable["Q", "Name" -> "heat flux", "PhysicalQuantity" -> 
      "HeatFlux", "CanonicalUnit" -> {HoldForm["Watts"/"Meters"^2]}, 
     "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -3}}] == 
    -((QuantityVariable["k", "Name" -> "thermal conductivity", 
        "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
         {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
          {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
       (-QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}] + 
        QuantityVariable[Subscript["T", 2], "Name" -> 
          "equilibrium temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]))/QuantityVariable["x", 
       "Name" -> "distance", "PhysicalQuantity" -> "Distance", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["FreeWaterDeficit"]] :> 
   QuantityVariable["FWD", "Name" -> "free water deficit", 
     "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
      {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
    Quantity[0.6, "Liters"/"Kilograms"]*QuantityVariable["W", 
      "Name" -> "body weight", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]*(-1 + QuantityVariable[Subscript["Na", "c"], 
        "Name" -> "serum sodium", "PhysicalQuantity" -> "Molarity", 
        "CanonicalUnit" -> {HoldForm["Millimoles"/"Liters"]}, 
        "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]/
       QuantityVariable[Subscript["Na", "i"], "Name" -> "ideal serum sodium", 
        "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
         {HoldForm["Millimoles"/"Liters"]}, "UnitDimensions" -> 
         {{"AmountUnit", 1}, {"LengthUnit", -3}}]), 
  HoldPattern[MathematicaFormula["FrequencyPeriodRelation"]] :> 
   QuantityVariable["\[Nu]", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> "Period", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]^(-1), 
  HoldPattern[MathematicaFormula["FresnelNumber"]] :> 
   QuantityVariable["F", "Name" -> "Fresnel number", 
     "PhysicalQuantity" -> "FresnelNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["a", "Name" -> "characteristic size", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2/
     (QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
        "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Lambda]", 
       "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
       "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["FroudeNumber"]] :> 
   QuantityVariable[Subscript["Fr", 1], "Name" -> "first Froude number", 
     "PhysicalQuantity" -> "FroudeNumber1", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["v", "Name" -> "characteristic speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]/
     Sqrt[Quantity[None, "StandardAccelerationOfGravity"]*
       QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula["GayLussacNumber"]] :> 
   QuantityVariable["Ga", "Name" -> "Gay\[Hyphen]Lussac number", 
     "PhysicalQuantity" -> "GayLussacNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1/(QuantityVariable["\[Alpha]", "Name" -> 
        "coefficient of thermal expansion", "PhysicalQuantity" -> 
        "ThermalExpansionCoefficient", "CanonicalUnit" -> 
        {HoldForm[1/"KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", -1}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]), 
  HoldPattern[MathematicaFormula["GayLussacsLaw"]] :> 
   QuantityVariable[Subscript["P", 1], "Name" -> "initial pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     QuantityVariable[Subscript["T", 1], "Name" -> "initial temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    QuantityVariable[Subscript["P", 2], "Name" -> "final pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     QuantityVariable[Subscript["T", 2], "Name" -> "final temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["GlassDelta"]] :> 
   QuantityVariable["\[Delta]", "Name" -> "Glass' \[Delta]", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript[OverBar["x"], 1], 
       "Name" -> "first sample mean", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] - 
      QuantityVariable[Subscript[OverBar["x"], 2], 
       "Name" -> "second sample mean", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable[Subscript["s", 2], "Name" -> 
       "second sample standard deviation", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["GoldenRatio"]] :> 
   {QuantityVariable["a+b", "Name" -> "combined length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]/QuantityVariable["a", 
       "Name" -> "longer side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}] == GoldenRatio, 
    QuantityVariable["a", "Name" -> "longer side length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]/QuantityVariable["b", 
       "Name" -> "shorter side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}] == GoldenRatio}, 
  HoldPattern[MathematicaFormula["GraetzNumber"]] :> 
   QuantityVariable["Gz", "Name" -> "Gr\[ADoubleDot]tz number", 
     "PhysicalQuantity" -> "GraetzNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["d", "Name" -> "diameter", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     (QuantityVariable["k", "Name" -> "thermal conductivity", 
       "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
        {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["GrashofNumber"]] :> 
   QuantityVariable["Gr", "Name" -> "Grashof number for heat transfer", 
     "PhysicalQuantity" -> "GrashofNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3*
      QuantityVariable["\[Alpha]", "Name" -> 
        "coefficient of thermal expansion", "PhysicalQuantity" -> 
        "ThermalExpansionCoefficient", "CanonicalUnit" -> 
        {HoldForm[1/"KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", -1}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}])/
     QuantityVariable["\[Nu]", "Name" -> "kinematic viscosity", 
       "PhysicalQuantity" -> "KinematicViscosity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula["GravitationalPotentialEnergy"]] :> 
   QuantityVariable["U", "Name" -> "gravitational potential energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["g", 
      "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
       "GravitationalAcceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["h", 
      "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["m", "Name" -> "mass", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula["GravitationalRedshift"]] :> 
   1 + QuantityVariable["z", "Name" -> "redshift", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == 
    Sqrt[(1 + (Quantity[-2, "GravitationalConstant"/"SpeedOfLight"^2]*
         QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> 
           "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
          "UnitDimensions" -> {"MassUnit", 1}])/QuantityVariable["R", 
         "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}])^(-1)], 
  HoldPattern[MathematicaFormula["GrossDomesticProductExpenditures"]] :> 
   QuantityVariable["GDP", "Name" -> "gross domestic product", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["C", "Name" -> "consumption goods and services", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
     QuantityVariable["G", "Name" -> "government purchases", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
     QuantityVariable["I", "Name" -> "gross investments", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] - 
     QuantityVariable["M", "Name" -> "imports", "PhysicalQuantity" -> 
       "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}] + QuantityVariable["X", 
      "Name" -> "exports", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["GrossDomesticProductIncome"]] :> 
   QuantityVariable["GDP", "Name" -> "gross domestic product", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["D", "Name" -> "depreciation", "PhysicalQuantity" -> 
       "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}] + QuantityVariable["i", 
      "Name" -> "interest income", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}] + QuantityVariable["PR", "Name" -> "profits", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
     QuantityVariable["R", "Name" -> "rental income", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
     QuantityVariable["T", "Name" -> "indirect business taxes", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
     QuantityVariable["W", "Name" -> "labor income", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["GrossDomesticProductValueAdded"]] :> 
   QuantityVariable["GDP", "Name" -> "gross domestic product", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -QuantityVariable[Subscript["V", "P"], "Name" -> 
        "purchase value of intermediate goods", "PhysicalQuantity" -> 
        "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
       "UnitDimensions" -> {"MoneyUnit", 1}] + QuantityVariable[
      Subscript["V", "S"], "Name" -> "sales value of goods", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["HalfDiskAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (-8/(9*Pi) + Pi/8)*QuantityVariable["R", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4, 
  HoldPattern[MathematicaFormula["HartmannNumber"]] :> 
   QuantityVariable["Ha", "Name" -> "Hartmann number", 
     "PhysicalQuantity" -> "HartmannNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["B", "Name" -> "magnetic flux density", 
      "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
       {HoldForm["Teslas"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["l", "Name" -> "characteristic length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     Sqrt[QuantityVariable["\[Sigma]", "Name" -> "electric conductivity", 
        "PhysicalQuantity" -> "ElectricConductivity", "CanonicalUnit" -> 
         {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
          {"TimeUnit", 3}}]/(QuantityVariable["\[Nu]", 
         "Name" -> "kinematic viscosity", "PhysicalQuantity" -> 
          "KinematicViscosity", "CanonicalUnit" -> 
          {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["\[Rho]", 
         "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
         "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
         "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])], 
  HoldPattern[MathematicaFormula["HazenWilliamsEquation"]] :> 
   QuantityVariable["v", "Name" -> "flow velocity of fluid", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[0.849, "Meters"^0.37/"Seconds"]*QuantityVariable["C", 
      "Name" -> "Hazen\[Hyphen]Williams coefficient of roughness", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["R", "Name" -> "hydraulic radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^0.63*
     QuantityVariable["S", "Name" -> "hydraulic grade line slope", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^0.54, 
  HoldPattern[MathematicaFormula["HeatEngineEfficiency"]] :> 
   QuantityVariable["\[Eta]", "Name" -> "efficiency", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - QuantityVariable[Subscript["Q", 2], "Name" -> "waste heat flowing out \
of an engine into a low\[Hyphen]temperature reservoir", 
       "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}]/QuantityVariable[Subscript["Q", 1], 
       "Name" -> "heat flowing into an engine from a high\[Hyphen]temperature \
reservoir", "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> 
        {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["HedgeEffectiveness"]] :> 
   QuantityVariable[Superscript["R", 2], "Name" -> "hedge effectiveness", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript["\[Sigma]", "F"], 
        "Name" -> "standard deviation futures price change", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]^2*
      QuantityVariable[SuperStar["h"], "Name" -> 
         "minimum variance hedge ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
       2)/QuantityVariable[Subscript["\[Sigma]", "S"], 
       "Name" -> "standard deviation spot price change", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["HelmholtzResonatorFrequency"]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    (Sqrt[QuantityVariable["A", "Name" -> 
          "neck cross\[Hyphen]sectional area", "PhysicalQuantity" -> "Area", 
         "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
          {"LengthUnit", 2}]/(QuantityVariable["L", "Name" -> "neck length", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
         QuantityVariable["V", "Name" -> "cavity volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}])]*
      QuantityVariable[Subscript["v", "s"], "Name" -> "speed of sound", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/(2*Pi), 
  HoldPattern[MathematicaFormula["HexagonAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (5*Sqrt[3]*QuantityVariable["a", "Name" -> "edge length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4)/16, 
  HoldPattern[MathematicaFormula["HollowCylinderMechanicalStress"]] :> 
   {QuantityVariable[Subscript["\[Sigma]", "\[Theta]"], 
      "Name" -> "hoop stress", "PhysicalQuantity" -> "Stress", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable["r", "Name" -> "inner radius", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
      QuantityVariable["t", "Name" -> "wall thickness", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable[Subscript["\[Sigma]", "z"], "Name" -> "axial stress", 
      "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable["r", "Name" -> "inner radius", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
      (2*QuantityVariable["t", "Name" -> "wall thickness", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]), 
    QuantityVariable[Subscript["\[Sigma]", "r"], "Name" -> "radial stress", 
      "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     -QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/2}, 
  HoldPattern[MathematicaFormula["HydraulicConductivity"]] :> 
   QuantityVariable["K", "Name" -> "hydraulic conductivity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Centimeters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["\[Kappa]", "Name" -> 
        "intrinsic permeability of medium", "PhysicalQuantity" -> 
        "HydraulicPermeability", "CanonicalUnit" -> {HoldForm["Darcys"]}, 
       "UnitDimensions" -> {"LengthUnit", 2}]*QuantityVariable["\[Rho]", 
       "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["HyperfocalDistance"]] :> 
   QuantityVariable["h", "Name" -> "hyperfocal distance", 
     "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2/
     (QuantityVariable["c", "Name" -> "circle of confusion", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["HypsometricEquation"]] :> 
   QuantityVariable[Subscript["P", 2], "Name" -> "final pressure", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    E^((Quantity[-0.0034842841364027557, ("Kelvins"*"Kilograms"*
           "StandardAccelerationOfGravity")/"Joules"]*
        (QuantityVariable[Subscript["H", "2"], "Name" -> "altitude", 
          "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
           {HoldForm["Kilometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
         QuantityVariable[Subscript["H", "r"], "Name" -> 
           "reference altitude", "PhysicalQuantity" -> "Height", 
          "CanonicalUnit" -> {HoldForm["Kilometers"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]))/QuantityVariable[Subscript["T", "r"], 
        "Name" -> "reference temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}])*
     QuantityVariable[Subscript["P", "r"], "Name" -> "reference pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["IdealSolenoidMagneticInduction"]] :> 
   QuantityVariable["B", "Name" -> "magnetic induction", 
     "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "MagneticConstant"]*QuantityVariable["I", 
      "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
      "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
       {"ElectricCurrentUnit", 1}]*QuantityVariable["n", 
      "Name" -> "coil turn linear density", "PhysicalQuantity" -> 
       "CoilCoreFactor", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", -1}], 
  HoldPattern[MathematicaFormula["IlluminanceFromLuminousIntensity"]] :> 
   QuantityVariable[Subscript["E", "v"], "Name" -> "illuminance", 
     "PhysicalQuantity" -> "Illuminance", "CanonicalUnit" -> 
      {HoldForm["Lux"]}, "UnitDimensions" -> {{"LengthUnit", -2}, 
       {"LuminousIntensityUnit", 1}, {"SolidAngleUnit", 1}}] == 
    QuantityVariable["I", "Name" -> "luminous intensity", 
      "PhysicalQuantity" -> "LuminousIntensity", "CanonicalUnit" -> 
       {HoldForm["Candelas"]}, "UnitDimensions" -> {"LuminousIntensityUnit", 
        1}]/QuantityVariable["r", "Name" -> "distance", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["Impulse"]] :> 
   QuantityVariable["I", "Name" -> "impulse", "PhysicalQuantity" -> 
      "Impulse", "CanonicalUnit" -> 
      {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == QuantityVariable["F", "Name" -> "force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["t", 
      "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula["InclinedSpanSag"]] :> 
   {QuantityVariable["D", "Name" -> "sag", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     ((-1 + Cosh[(Sqrt[QuantityVariable["h", "Name" -> 
                "elevation difference", "PhysicalQuantity" -> "Length", 
               "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                {"LengthUnit", 1}]^2 + QuantityVariable["S", "Name" -> 
                "span", "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
              2]*QuantityVariable["w", "Name" -> 
             "cable weight per unit length", "PhysicalQuantity" -> 
             "ForceGradient", "CanonicalUnit" -> {HoldForm["Newtons"/
                "Meters"]}, "UnitDimensions" -> {{"MassUnit", 1}, 
              {"TimeUnit", -2}}])/(2*QuantityVariable["H", 
            "Name" -> "horizontal tension", "PhysicalQuantity" -> "Force", 
            "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
             {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])])*
       QuantityVariable["H", "Name" -> "horizontal tension", 
        "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
         {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}])/QuantityVariable["w", 
       "Name" -> "cable weight per unit length", "PhysicalQuantity" -> 
        "ForceGradient", "CanonicalUnit" -> {HoldForm["Newtons"/"Meters"]}, 
       "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -2}}], 
    QuantityVariable[Subscript["x", "L"], 
      "Name" -> "left support to low point distance", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     ((1 + QuantityVariable["h", "Name" -> "elevation difference", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
         (4*QuantityVariable["D", "Name" -> "sag", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]))*QuantityVariable["S", 
        "Name" -> "span", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])/2, QuantityVariable[Subscript["x", "R"], 
      "Name" -> "right support to low point distance", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     ((1 - QuantityVariable["h", "Name" -> "elevation difference", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
         (4*QuantityVariable["D", "Name" -> "sag", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]))*QuantityVariable["S", 
        "Name" -> "span", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])/2, QuantityVariable["L", 
      "Name" -> "cable length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == QuantityVariable["S", "Name" -> "span", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
      (QuantityVariable["w", "Name" -> "cable weight per unit length", 
          "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
           {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
           {{"MassUnit", 1}, {"TimeUnit", -2}}]^2*
        (QuantityVariable[Subscript["x", "L"], "Name" -> 
            "left support to low point distance", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^3 + 
         QuantityVariable[Subscript["x", "R"], "Name" -> 
            "right support to low point distance", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^3))/
       (6*QuantityVariable["H", "Name" -> "horizontal tension", 
          "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
           {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}]^2), 
    QuantityVariable[Subscript["D", "R"], 
      "Name" -> "sag relative to right support", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["w", "Name" -> "cable weight per unit length", 
        "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable[Subscript["x", "R"], "Name" -> 
          "right support to low point distance", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2)/
      (2*QuantityVariable["H", "Name" -> "horizontal tension", 
        "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
         {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]), 
    QuantityVariable[Subscript["D", "L"], 
      "Name" -> "sag relative to left support", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["w", "Name" -> "cable weight per unit length", 
        "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable[Subscript["x", "L"], "Name" -> 
          "left support to low point distance", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2)/
      (2*QuantityVariable["H", "Name" -> "horizontal tension", 
        "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
         {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]), 
    QuantityVariable[Subscript["T", "L"], 
      "Name" -> "tension at left support", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable["H", "Name" -> "horizontal tension", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}] + 
      QuantityVariable["w", "Name" -> "cable weight per unit length", 
        "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
        Subscript["D", "L"], "Name" -> "sag relative to left support", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable[Subscript["T", "R"], 
      "Name" -> "tension at right support", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable["H", "Name" -> "horizontal tension", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}] + 
      QuantityVariable["w", "Name" -> "cable weight per unit length", 
        "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
        Subscript["D", "R"], "Name" -> "sag relative to right support", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable[Subscript["T", "av"], "Name" -> "average tension", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     -0.5*QuantityVariable["D", "Name" -> "sag", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["w", 
        "Name" -> "cable weight per unit length", "PhysicalQuantity" -> 
         "ForceGradient", "CanonicalUnit" -> {HoldForm["Newtons"/"Meters"]}, 
        "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -2}}] + 
      0.5*(QuantityVariable[Subscript["T", "L"], "Name" -> 
          "tension at left support", "PhysicalQuantity" -> "Force", 
         "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] + 
        QuantityVariable[Subscript["T", "R"], "Name" -> 
          "tension at right support", "PhysicalQuantity" -> "Force", 
         "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])}, 
  HoldPattern[MathematicaFormula["IndicatedHorsepower"]] :> 
   {QuantityVariable["A", "Name" -> "piston area", "PhysicalQuantity" -> 
       "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
      "UnitDimensions" -> {"LengthUnit", 2}] == 
     (Pi*QuantityVariable["B", "Name" -> "piston bore", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2)/4, 
    QuantityVariable["N", "Name" -> "stroke rate", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["rpm", "Name" -> "engine rpm", "PhysicalQuantity" -> 
        "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]/2, 
    QuantityVariable["P", "Name" -> "indicated horsepower", 
      "PhysicalQuantity" -> "Power", "CanonicalUnit" -> 
       {HoldForm["HorsepowerMechanical"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     Quantity[1/33000, ("HorsepowerMechanical"*"Minutes")/
        ("Inches"*"PoundsForce"*"Revolutions")]*QuantityVariable["A", 
       "Name" -> "piston area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable["K", 
       "Name" -> "number of cylinders", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["L", "Name" -> "piston stroke", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["N", "Name" -> "stroke rate", "PhysicalQuantity" -> 
        "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["P", 
       "Name" -> "mean effective pressure", "PhysicalQuantity" -> "Pressure", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula["InductiveReactance"]] :> 
   QuantityVariable[Subscript["X", "L"], "Name" -> "inductive reactance", 
     "PhysicalQuantity" -> "ElectricReactance", "CanonicalUnit" -> 
      {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    2*Pi*QuantityVariable["f", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["L", "Name" -> "magnetic inductance", 
      "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
       {HoldForm["Henries"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["InfinitelyLongWire"]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[1/(2*Pi), "MagneticConstant"]*QuantityVariable["I", 
       "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
       "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
        {"ElectricCurrentUnit", 1}])/QuantityVariable["d", 
      "Name" -> "distance", "PhysicalQuantity" -> "Distance", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["InstrumentationAmplifier"]] :> 
   {QuantityVariable[Subscript["V", "out"], "Name" -> "output voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     (QuantityVariable[Subscript["R", "3"], "Name" -> "resistance 3", 
        "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
         {HoldForm["Ohms"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}]*(1 + (2*QuantityVariable[Subscript["R", 1], 
           "Name" -> "resistance 1", "PhysicalQuantity" -> 
            "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
           "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
             {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}])/
         QuantityVariable[Subscript["R", "gain"], "Name" -> 
           "gain resistance", "PhysicalQuantity" -> "ElectricResistance", 
          "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}])*(-QuantityVariable[Subscript["V", "1"], 
          "Name" -> "input voltage 1", "PhysicalQuantity" -> 
           "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
          "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
            {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] + 
        QuantityVariable[Subscript["V", "2"], "Name" -> "input voltage 2", 
         "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
          {HoldForm["Volts"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -3}}]))/QuantityVariable[Subscript["R", 2], 
       "Name" -> "resistance 2", "PhysicalQuantity" -> "ElectricResistance", 
       "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}], QuantityVariable["A", "Name" -> "voltage gain", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["V", "out"], "Name" -> "output voltage", 
       "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
        {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/(-QuantityVariable[Subscript["V", "1"], 
         "Name" -> "input voltage 1", "PhysicalQuantity" -> 
          "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}] + QuantityVariable[
        Subscript["V", "2"], "Name" -> "input voltage 2", 
        "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
         {HoldForm["Volts"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}])}, 
  HoldPattern[MathematicaFormula["InternationalQuarterInchLogRule"]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["BoardFeet"]}, "UnitDimensions" -> 
      {"LengthUnit", 3}] == Quantity[None, "BoardFeet"]*
     (Quantity[-1.9284000000000001, "Feet"^(-2)]*QuantityVariable["d", 
        "Name" -> "diameter", "PhysicalQuantity" -> "Diameter", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable["L", "Name" -> "length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
      Quantity[7.1712, "Feet"^(-3)]*QuantityVariable["d", 
         "Name" -> "diameter", "PhysicalQuantity" -> "Diameter", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^2*QuantityVariable["L", "Name" -> "length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
      Quantity[0.3214, "Inches"^(-1)]*QuantityVariable["L", 
        "Name" -> "length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable["t", "Name" -> "taper", 
        "PhysicalQuantity" -> "LengthRatios", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Meters"]}, "UnitDimensions" -> 
         "Dimensionless"] + Quantity[-0.1992, "Inches"^(-2)]*
       QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["L", 
        "Name" -> "length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable["t", "Name" -> "taper", 
        "PhysicalQuantity" -> "LengthRatios", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Meters"]}, "UnitDimensions" -> 
         "Dimensionless"] + Quantity[-0.9648, "Feet"^(-2)]*
       QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["t", 
        "Name" -> "taper", "PhysicalQuantity" -> "LengthRatios", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Meters"]}, 
        "UnitDimensions" -> "Dimensionless"] + 
      Quantity[0.004149999999999999, "Inches"^(-3)]*QuantityVariable["d", 
        "Name" -> "diameter", "PhysicalQuantity" -> "Diameter", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable["L", "Name" -> "length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       QuantityVariable["t", "Name" -> "taper", "PhysicalQuantity" -> 
         "LengthRatios", "CanonicalUnit" -> {HoldForm["Meters"/"Meters"]}, 
        "UnitDimensions" -> "Dimensionless"] + Quantity[1.91232, "Feet"^(-1)]*
       QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["t", "Name" -> "taper", "PhysicalQuantity" -> 
          "LengthRatios", "CanonicalUnit" -> {HoldForm["Meters"/"Meters"]}, 
         "UnitDimensions" -> "Dimensionless"]^2 + 
      Quantity[-0.0996, "Inches"^(-2)]*QuantityVariable["L", 
         "Name" -> "length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^2*QuantityVariable["t", "Name" -> "taper", 
         "PhysicalQuantity" -> "LengthRatios", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Meters"]}, "UnitDimensions" -> "Dimensionless"]^
        2 + Quantity[2.3904, "Feet"^(-3)]*QuantityVariable["L", 
         "Name" -> "length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]^3*QuantityVariable["t", "Name" -> "taper", 
         "PhysicalQuantity" -> "LengthRatios", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Meters"]}, "UnitDimensions" -> "Dimensionless"]^
        2), HoldPattern[MathematicaFormula["IntrinsicPermeability"]] :> 
   QuantityVariable["\[Kappa]", "Name" -> "intrinsic permeability of medium", 
     "PhysicalQuantity" -> "HydraulicPermeability", 
     "CanonicalUnit" -> {HoldForm["Darcys"]}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == QuantityVariable["C", 
      "Name" -> "flow path constant", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["d", "Name" -> "effective pore diameter", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["InvertingAmplifier"]] :> 
   {QuantityVariable[Subscript["V", "out"], "Name" -> "output voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     -((QuantityVariable[Subscript["R", 2], "Name" -> "resistance 2", 
         "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
          {HoldForm["Ohms"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -3}}]*QuantityVariable[Subscript["V", "in"], 
         "Name" -> "input voltage", "PhysicalQuantity" -> 
          "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}])/QuantityVariable[
        Subscript["R", 1], "Name" -> "resistance 1", "PhysicalQuantity" -> 
         "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -3}}]), 
    QuantityVariable["A", "Name" -> "voltage gain", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["R", 2], 
       "Name" -> "resistance 2", "PhysicalQuantity" -> "ElectricResistance", 
       "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/QuantityVariable[Subscript["R", 1], 
       "Name" -> "resistance 1", "PhysicalQuantity" -> "ElectricResistance", 
       "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]}, 
  HoldPattern[MathematicaFormula["IsobaricProcess"]] :> 
   {QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
      QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
       "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
        {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
     QuantityVariable[Subscript["T", "i"], "Name" -> "initial temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
      QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
       "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
        {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}], 
    QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == QuantityVariable[
      Subscript["p", "i"], "Name" -> "initial pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}], 
    QuantityVariable["W", "Name" -> "work done on the system", 
      "PhysicalQuantity" -> "Work", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == -(QuantityVariable[Subscript["p", "i"], 
        "Name" -> "initial pressure", "PhysicalQuantity" -> "Pressure", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
       (QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] - 
        QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}])), 
    QuantityVariable["Q", "Name" -> "heat transferred to the system", 
      "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == QuantityVariable[Subscript["C", "p"], 
       "Name" -> "isobaric heat capacity", "PhysicalQuantity" -> 
        "HeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*(QuantityVariable[Subscript["T", "f"], 
        "Name" -> "final temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}] - QuantityVariable[Subscript["T", "i"], 
        "Name" -> "initial temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]), 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]S", 
      "Name" -> "entropy change", "PhysicalQuantity" -> "Entropy", 
      "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
     Log[QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
        QuantityVariable[Subscript["T", "i"], "Name" -> 
          "initial temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]]*QuantityVariable[Subscript["C", "p"], 
       "Name" -> "isobaric heat capacity", "PhysicalQuantity" -> 
        "HeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula["IsochoricProcess"]] :> 
   {QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
      QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable[Subscript["T", "i"], "Name" -> "initial temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
      QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}], 
    QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
     QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}], 
    QuantityVariable["W", "Name" -> "work done on the system", 
      "PhysicalQuantity" -> "Work", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 0, QuantityVariable["Q", 
      "Name" -> "heat transferred to the system", "PhysicalQuantity" -> 
       "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == QuantityVariable[Subscript["C", "V"], 
       "Name" -> "isochoric heat capacity", "PhysicalQuantity" -> 
        "HeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*(QuantityVariable[Subscript["T", "f"], 
        "Name" -> "final temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}] - QuantityVariable[Subscript["T", "i"], 
        "Name" -> "initial temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]), 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]S", 
      "Name" -> "entropy change", "PhysicalQuantity" -> "Entropy", 
      "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
     Log[QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]/
        QuantityVariable[Subscript["T", "i"], "Name" -> 
          "initial temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]]*QuantityVariable[Subscript["C", "V"], 
       "Name" -> "isochoric heat capacity", "PhysicalQuantity" -> 
        "HeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula["IsothermalProcess"]] :> 
   {QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["V", "f"], "Name" -> "final volume", "PhysicalQuantity" -> 
        "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
       "UnitDimensions" -> {"LengthUnit", 3}] == 
     QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["V", "i"], "Name" -> "initial volume", 
       "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
        {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}], 
    QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] == 
     QuantityVariable[Subscript["T", "i"], "Name" -> "initial temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
    QuantityVariable["W", "Name" -> "work done on the system", 
      "PhysicalQuantity" -> "Work", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 
     -(Log[QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]/
         QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]]*
       QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
        Subscript["V", "i"], "Name" -> "initial volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]), 
    QuantityVariable["Q", "Name" -> "heat transferred to the system", 
      "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 
     Log[QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]/
        QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]]*
      QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["V", "i"], "Name" -> "initial volume", 
       "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
        {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}], 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]S", 
      "Name" -> "entropy change", "PhysicalQuantity" -> "Entropy", 
      "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
     (Log[QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]/
         QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]]*
       QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
        Subscript["V", "i"], "Name" -> "initial volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}])/
      QuantityVariable[Subscript["T", "i"], "Name" -> "initial temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]}, 
  HoldPattern[MathematicaFormula["IVInfusionRate"]] :> 
   QuantityVariable["rate", "Name" -> "infusion rate", 
     "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
      {HoldForm["Milliliters"/"Minutes"]}, "UnitDimensions" -> 
      {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (QuantityVariable["d", "Name" -> "dosage", "PhysicalQuantity" -> 
        "IVFlowRate", "CanonicalUnit" -> 
        {HoldForm["Micrograms"/("Kilograms"*"Minutes")]}, 
       "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable["W", 
       "Name" -> "body weight", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/QuantityVariable["c", 
      "Name" -> "infusate concentration", "PhysicalQuantity" -> 
       "MassDensity", "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[
     "JohnsonNyquistNoisePowerSpectralDensity"]] :> 
   QuantityVariable[Subsuperscript[Overscript[Style["v", Italic], "_"], "n", 
      "2"], "Name" -> "Johnson-Nyquist noise power spectral density", 
     "PhysicalQuantity" -> "ElectricVoltageNoisePowerIntensity", 
     "CanonicalUnit" -> {HoldForm["Volts"^2/"Hertz"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 4}, 
       {"MassUnit", 2}, {"TimeUnit", -5}}] == 
    Quantity[4, "BoltzmannConstant"]*QuantityVariable["R", 
      "Name" -> "electric resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}]*QuantityVariable["T", 
      "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
      "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
       {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["JohnsonNyquistNoiseVoltage"]] :> 
   QuantityVariable[Subscript["V", "n"], 
     "Name" -> "Johnson-Nyquist noise voltage", "PhysicalQuantity" -> 
      "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
       {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    2*Sqrt[Quantity[None, "BoltzmannConstant"]*QuantityVariable["R",
        "Name" -> "electric resistance", "PhysicalQuantity" -> 
         "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -3}}]*QuantityVariable["T", 
        "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]*QuantityVariable[
        "\[CapitalDelta]\[InvisibleSpace]f", "Name" -> "frequency bandwidth", 
        "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
         {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]], 
  HoldPattern[MathematicaFormula["KeplersFirstLaw"]] :> 
   QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    (QuantityVariable["a", "Name" -> "semimajor axis", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      (1 - QuantityVariable["e", "Name" -> "eccentricity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^2))/
     (1 + Cos[QuantityVariable["\[Theta]", "Name" -> "phase", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
       QuantityVariable["e", "Name" -> "eccentricity", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula["KineticEnergy"]] :> 
   QuantityVariable["K", "Name" -> "kinetic energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (QuantityVariable["m", "Name" -> "mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/2, 
  HoldPattern[MathematicaFormula["KineticEnergyRelativistic"]] :> 
   {QuantityVariable["K", "Name" -> "kinetic energy", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     Quantity[None, "SpeedOfLight"^2]*QuantityVariable["m", "Name" -> "mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      (-1 + QuantityVariable["\[Gamma]", "Name" -> "relativistic gamma", 
        "PhysicalQuantity" -> "RelativisticGamma", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["\[Gamma]", "Name" -> "relativistic gamma", 
      "PhysicalQuantity" -> "RelativisticGamma", "CanonicalUnit" -> 
       {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
     1/Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
         QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
            "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
           "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2]}, 
  HoldPattern[MathematicaFormula["KineticFrictionCoefficient"]] :> 
   QuantityVariable[Subscript["F", "f"], "Name" -> "friction force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable[Subscript["F", "n"], 
      "Name" -> "normal force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable[Subscript["\[Mu]", "k"], 
      "Name" -> "kinetic friction coefficient", "PhysicalQuantity" -> 
       "KineticFrictionCoefficient", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["KnoopHardness"]] :> 
   QuantityVariable["HK", "Name" -> "Knoop hardness", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["GramsForce"/"Millimeters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["P", "Name" -> "applied force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["GramsForce"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]/
     (QuantityVariable["L", "Name" -> "length of long axis indentation", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Millimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable[Subscript["C", "p"], "Name" -> "correction factor", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["KnudsenNumber"]] :> 
   QuantityVariable[Subscript["Kn", 1], "Name" -> "(first) Knudsen number", 
     "PhysicalQuantity" -> "KnudsenNumber1", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
      "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["l", "Name" -> "characteristic length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["LarmorPower"]] :> 
   QuantityVariable["P", "Name" -> "total radiated power", 
     "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == Quantity[1/(6*Pi), 
      1/("ElectricConstant"*"SpeedOfLight"^3)]*
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
        "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]^2*
     QuantityVariable["Q", "Name" -> "electric charge", 
       "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
        {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2, 
  HoldPattern[MathematicaFormula["LawOfCosines"]] :> 
   QuantityVariable["c", "Name" -> "third side length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]^2 == 
    QuantityVariable["a", "Name" -> "first side length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]^2 - 2*Cos[QuantityVariable["\[Gamma]", 
        "Name" -> "angle opposite third side", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable["a", 
       "Name" -> "first side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["b", 
       "Name" -> "second side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}] + 
     QuantityVariable["b", "Name" -> "second side length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["LawOfHaversines"]] :> 
   Haversine[QuantityVariable["c", "Name" -> "third side angular length", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
       {"AngleUnit", 1}]] == 
    Haversine[QuantityVariable["a", "Name" -> "first side angular length", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}] - QuantityVariable["b", 
        "Name" -> "second side angular length", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]] + 
     Haversine[QuantityVariable["\[Gamma]", "Name" -> 
         "angle opposite third side", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*
      Sin[QuantityVariable["a", "Name" -> "first side angular length", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]]*Sin[QuantityVariable["b", 
        "Name" -> "second side angular length", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula["LawOfSines"]] :> 
   Sin[QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
        {"AngleUnit", 1}]]/QuantityVariable["a", 
      "Name" -> "first side length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
    Sin[QuantityVariable["\[Beta]", "Name" -> "angle opposite second side", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
        {"AngleUnit", 1}]]/QuantityVariable["b", 
      "Name" -> "second side length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["LawOfTangents"]] :> 
   (QuantityVariable["a", "Name" -> "first side length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}] - QuantityVariable["b", 
       "Name" -> "second side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}])/
     (QuantityVariable["a", "Name" -> "first side length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}] + QuantityVariable["b", 
       "Name" -> "second side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]) == 
    Cot[(QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}] + QuantityVariable["\[Beta]", 
         "Name" -> "angle opposite second side", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}])/2]*
     Tan[(QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}] - QuantityVariable["\[Beta]", 
         "Name" -> "angle opposite second side", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}])/2], 
  HoldPattern[MathematicaFormula["LengthContractionRelativistic"]] :> 
   QuantityVariable["l", "Name" -> "moving length", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2]*
     QuantityVariable[Subscript["l", 0], "Name" -> "stationary length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["LenoirCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - (QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["T", "c"], "Name" -> 
         "cold reservoir temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]*(-1 + (QuantityVariable[Subscript["T", "h"], 
           "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
            "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
           "UnitDimensions" -> {"TemperatureUnit", 1}]/QuantityVariable[
           Subscript["T", "c"], "Name" -> "cold reservoir temperature", 
           "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
            {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
             1}])^QuantityVariable["\[Gamma]", "Name" -> 
            "heat capacity ratio", "PhysicalQuantity" -> "HeatCapacityRatio", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]^(-1)))/(-QuantityVariable[Subscript["T", "c"], 
         "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}] + 
       QuantityVariable[Subscript["T", "h"], "Name" -> 
         "hot reservoir temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula["LevelSpanSag"]] :> 
   {QuantityVariable["D", "Name" -> "sag", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     ((-1 + Cosh[(QuantityVariable["S", "Name" -> "span", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
           QuantityVariable["w", "Name" -> "cable weight per unit length", 
            "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
             {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
             {{"MassUnit", 1}, {"TimeUnit", -2}}])/
          (2*QuantityVariable["H", "Name" -> "horizontal tension", 
            "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
             {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}])])*QuantityVariable["H", 
        "Name" -> "horizontal tension", "PhysicalQuantity" -> "Force", 
        "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
      QuantityVariable["w", "Name" -> "cable weight per unit length", 
       "PhysicalQuantity" -> "ForceGradient", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}], 
    QuantityVariable["L", "Name" -> "cable length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (2*QuantityVariable["H", "Name" -> "horizontal tension", 
        "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
         {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*
       Sinh[(QuantityVariable["S", "Name" -> "span", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["w", 
           "Name" -> "cable weight per unit length", "PhysicalQuantity" -> 
            "ForceGradient", "CanonicalUnit" -> 
            {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
            {{"MassUnit", 1}, {"TimeUnit", -2}}])/
         (2*QuantityVariable["H", "Name" -> "horizontal tension", 
           "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
            {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
             {"MassUnit", 1}, {"TimeUnit", -2}}])])/QuantityVariable["w", 
       "Name" -> "cable weight per unit length", "PhysicalQuantity" -> 
        "ForceGradient", "CanonicalUnit" -> {HoldForm["Newtons"/"Meters"]}, 
       "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -2}}], 
    QuantityVariable["T", "Name" -> "tension at supports", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable["H", "Name" -> "horizontal tension", 
       "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}] + 
      QuantityVariable["D", "Name" -> "sag", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable["w", 
        "Name" -> "cable weight per unit length", "PhysicalQuantity" -> 
         "ForceGradient", "CanonicalUnit" -> {HoldForm["Newtons"/"Meters"]}, 
        "UnitDimensions" -> {{"MassUnit", 1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula["LeverMechanicalAdvantage"]] :> 
   QuantityVariable["MA", "Name" -> "mechanical advantage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["d", 1], "Name" -> "effort arm", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable[Subscript["d", 2], "Name" -> "load arm", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["LiftCoefficient"]] :> 
   QuantityVariable[Subscript["C", "L"], "Name" -> "lift coefficient", 
     "PhysicalQuantity" -> "LiftCoefficient", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (2*QuantityVariable["L", "Name" -> "lift", "PhysicalQuantity" -> "Force", 
       "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (QuantityVariable["A", "Name" -> "planform area", 
       "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
        {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}]*
      QuantityVariable["v", "Name" -> "true airspeed", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Knots"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["LightAberrationRelativistic"]] :> 
   Cos[QuantityVariable[Subscript["\[Theta]", "o"], 
      "Name" -> "aberration angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"], "Unities"}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == 
    (Cos[QuantityVariable[Subscript["\[Theta]", "s"], "Name" -> "angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["AngularDegrees"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]] + Quantity[-1, "SpeedOfLight"^(-1)]*
       QuantityVariable["v", "Name" -> 
         "velocity in observer reference frame", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["SpeedOfLight"], "Unities"}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (1 + Cos[QuantityVariable[Subscript["\[Theta]", "s"], "Name" -> "angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["AngularDegrees"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}]]*Quantity[-1, "SpeedOfLight"^(-1)]*
       QuantityVariable["v", "Name" -> 
         "velocity in observer reference frame", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["SpeedOfLight"], "Unities"}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["LineSlope"]] :> 
   QuantityVariable["m", "Name" -> "slope", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["rise", "Name" -> "rise", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]/QuantityVariable["run", "Name" -> "run", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["LogOddsRatio"]] :> 
   QuantityVariable["r", "Name" -> "log odds ratio", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Log[((1 - QuantityVariable[Subscript[OverHat["p"], 2], 
         "Name" -> "second sample proportion", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable[Subscript[OverHat["p"], "1"], 
        "Name" -> "first sample proportion", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/(QuantityVariable[Subscript[OverHat["p"], 2], 
        "Name" -> "second sample proportion", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]*(1 - QuantityVariable[Subscript[OverHat["p"], "1"], 
         "Name" -> "first sample proportion", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))], 
  HoldPattern[MathematicaFormula["LorentzFactor"]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "relativistic gamma", 
     "PhysicalQuantity" -> "RelativisticGamma", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    1/Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula["LorentzNumber"]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "Lorentz number", 
     "PhysicalQuantity" -> "RelativisticGamma", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["V", "Name" -> "voltage", "PhysicalQuantity" -> 
         "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -3}}]^2*QuantityVariable["\[Sigma]", 
       "Name" -> "specific electrical conductivity", "PhysicalQuantity" -> 
        "ElectricConductivity", "CanonicalUnit" -> 
        {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 3}}])/(QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]*QuantityVariable["\[Lambda]", 
       "Name" -> "specific thermal conductivity", "PhysicalQuantity" -> 
        "ThermalConductivity", "CanonicalUnit" -> 
        {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]), 
  HoldPattern[MathematicaFormula["LuminosityAbsoluteMagnitude"]] :> 
   QuantityVariable["L", "Name" -> "luminosity", "PhysicalQuantity" -> 
      "Luminosity", "CanonicalUnit" -> {HoldForm["SolarLuminosity"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == 
    10^(0.4*(4.83 - QuantityVariable["M", "Name" -> "absolute magnitude", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]))*
     Quantity[None, "SolarLuminosity"], 
  HoldPattern[MathematicaFormula["LuminosityApparentMagnitudeDistance"]] :> 
   QuantityVariable["L", "Name" -> "luminosity", "PhysicalQuantity" -> 
      "Luminosity", "CanonicalUnit" -> {HoldForm["SolarLuminosity"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == 
    (Quantity[0.0813, "SolarLuminosity"/"LightYears"^2]*
      QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
         "Distance", "CanonicalUnit" -> {HoldForm["Parsecs"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2)/
     10^(0.4*QuantityVariable["m", "Name" -> "apparent magnitude", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["LuminosityDistance"]] :> 
   QuantityVariable[Subscript["D", "l"], "Name" -> "luminosity distance", 
     "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
      {HoldForm["LightYears"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    10^(1 + (QuantityVariable["m", "Name" -> "apparent magnitude", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["M", 
          "Name" -> "absolute magnitude", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/5)*Quantity[None, "Parsecs"], 
  HoldPattern[MathematicaFormula["LuminosityEnergy"]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["L", "Name" -> "luminosity", "PhysicalQuantity" -> 
       "Luminosity", "CanonicalUnit" -> {HoldForm["SolarLuminosity"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -3}}]*QuantityVariable["t", "Name" -> "time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula["MachNumber"]] :> 
   QuantityVariable["Ma", "Name" -> "Mach number", "PhysicalQuantity" -> 
      "MachNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["v", "Name" -> "characteristic speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]/QuantityVariable["c", 
      "Name" -> "sound speed", "PhysicalQuantity" -> "SoundSpeed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["MagneticEnergyDensity"]] :> 
   QuantityVariable["E", "Name" -> "magnetic energy density", 
     "PhysicalQuantity" -> "EnergyDensity", "CanonicalUnit" -> 
      {HoldForm["Joules"/"Meters"^3]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[1/2, "MagneticConstant"^(-1)]*
     QuantityVariable["B", "Name" -> "magnetic induction", 
       "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
        {HoldForm["Teslas"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]^2, 
  HoldPattern[MathematicaFormula["MagneticReynoldsNumber"]] :> 
   QuantityVariable["MRe", "Name" -> "magnetic Reynolds number", 
     "PhysicalQuantity" -> "MagneticReynoldsNumber", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["l", "Name" -> "characteristic length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["v", "Name" -> "characteristic speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["\[Mu]", 
      "Name" -> "permeability", "PhysicalQuantity" -> "MagneticPermeability", 
      "CanonicalUnit" -> {HoldForm["Henries"/"Meters"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["\[Sigma]", 
      "Name" -> "electric conductivity", "PhysicalQuantity" -> 
       "ElectricConductivity", "CanonicalUnit" -> 
       {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
        {"TimeUnit", 3}}], 
  HoldPattern[MathematicaFormula["ManningFormula"]] :> 
   {QuantityVariable["v", "Name" -> "flow velocity of fluid", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (Quantity[None, "Meters"^(1/3)/"Seconds"]*
       (QuantityVariable["A", "Name" -> "flow area", "PhysicalQuantity" -> 
           "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
          "UnitDimensions" -> {"LengthUnit", 2}]/QuantityVariable["P", 
          "Name" -> "wetted perimeter", "PhysicalQuantity" -> "Length", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}])^(2/3)*Sqrt[QuantityVariable["S", 
         "Name" -> "hydraulic grade line slope", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]])/QuantityVariable["n", 
       "Name" -> "Manning's roughness coefficient", "PhysicalQuantity" -> 
        "ManningRoughnessCoefficient", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
       "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
     QuantityVariable["A", "Name" -> "flow area", "PhysicalQuantity" -> 
        "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
       "UnitDimensions" -> {"LengthUnit", 2}]*QuantityVariable["v", 
       "Name" -> "flow velocity of fluid", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula["MassDensity"]] :> 
   QuantityVariable["\[Rho]", "Name" -> "mass density", 
     "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
      {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
      {{"LengthUnit", -3}, {"MassUnit", 1}}] == 
    QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]/QuantityVariable["V", "Name" -> "volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}], 
  HoldPattern[MathematicaFormula["MassLuminosityRelationship"]] :> 
   QuantityVariable["L", "Name" -> "luminosity", "PhysicalQuantity" -> 
      "Luminosity", "CanonicalUnit" -> {HoldForm["SolarLuminosity"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == Quantity[None, "SolarLuminosity"]*
     (Quantity[None, "SolarMass"^(-1)]*QuantityVariable["M", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}])^3.5`2., 
  HoldPattern[MathematicaFormula["MechanicalStress"]] :> 
   QuantityVariable["\[Sigma]", "Name" -> "mechanical stress", 
     "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
       {"LengthUnit", 2}], 
  HoldPattern[MathematicaFormula["MinimumPowerRequiredToMoveObject"]] :> 
   QuantityVariable["P", "Name" -> "power", "PhysicalQuantity" -> "Power", 
     "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    (4*QuantityVariable["D", "Name" -> "distance", "PhysicalQuantity" -> 
         "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["m", 
       "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]^3, 
  HoldPattern[MathematicaFormula["MinimumVarianceHedgeRatio"]] :> 
   QuantityVariable[SuperStar["h"], "Name" -> "minimum variance hedge ratio", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["\[Rho]", "Name" -> 
        "correlation coefficient spot price change futures price change", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
       Subscript["\[Sigma]", "S"], "Name" -> 
        "standard deviation spot price change", "PhysicalQuantity" -> 
        "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
       "UnitDimensions" -> {"MoneyUnit", 1}])/QuantityVariable[
      Subscript["\[Sigma]", "F"], "Name" -> 
       "standard deviation futures price change", "PhysicalQuantity" -> 
       "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["MirrorEquationsConcave"]] :> 
   {QuantityVariable["i", "Name" -> "distance between image and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
      QuantityVariable["o", "Name" -> "distance between object and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
     QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^(-1), 
    QuantityVariable["M", "Name" -> "subject magnification factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     -(QuantityVariable["i", "Name" -> "distance between image and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       QuantityVariable["o", "Name" -> "distance between object and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])}, 
  HoldPattern[MathematicaFormula["MirrorEquationsConvex"]] :> 
   {QuantityVariable["i", "Name" -> "distance between image and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
      QuantityVariable["o", "Name" -> "distance between object and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
     -QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^(-1), 
    QuantityVariable["M", "Name" -> "subject magnification factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     -(QuantityVariable["i", "Name" -> "distance between image and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       QuantityVariable["o", "Name" -> "distance between object and mirror", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])}, 
  HoldPattern[MathematicaFormula["ModifiedInternalRateOfReturn"]] :> 
   QuantityVariable["MIRR", "Name" -> "modified internal rate of return", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -1 + (-((QuantityVariable[Subscript["NPV", "pos"], 
          "Name" -> "NPV of positive cash flows", "PhysicalQuantity" -> 
           "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
          "UnitDimensions" -> {"MoneyUnit", 1}]*
         (1 + QuantityVariable[Subscript["r", "R"], "Name" -> 
             "reinvestment rate", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])^QuantityVariable["n", "Name" -> 
            "time periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/(QuantityVariable[Subscript["NPV", "neg"], 
          "Name" -> "NPV of negative cash flows", "PhysicalQuantity" -> 
           "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
          "UnitDimensions" -> {"MoneyUnit", 1}]*
         (1 + QuantityVariable[Subscript["r", "F"], "Name" -> "finance rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))))^
      (-1 + QuantityVariable["n", "Name" -> "time periods", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])^(-1), 
  HoldPattern[MathematicaFormula["ModulusRelation"]] :> 
   QuantityVariable["G", "Name" -> "torsion modulus", 
     "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["E", "Name" -> "Young's modulus", 
      "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]/
     (2*(1 + QuantityVariable["\[Nu]", "Name" -> "Poisson ratio", 
        "PhysicalQuantity" -> "PoissonRatio", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])), 
  HoldPattern[MathematicaFormula["MohrCoulombFailureCriterion"]] :> 
   QuantityVariable["\[Tau]", "Name" -> "shear stress", 
     "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["c", "Name" -> "cohesion", "PhysicalQuantity" -> 
       "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] + QuantityVariable["\[Sigma]", 
       "Name" -> "normal stress", "PhysicalQuantity" -> "Stress", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      Sin[QuantityVariable["\[Theta]", "Name" -> 
         "angle of internal friction", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula["MolarityDensityConversion"]] :> 
   QuantityVariable["d", "Name" -> "density", "PhysicalQuantity" -> 
      "MassDensity", "CanonicalUnit" -> {HoldForm["Grams"/"Milliliters"]}, 
     "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] == 
    QuantityVariable["c", "Name" -> "concentration", 
      "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
       {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable["M", 
      "Name" -> "molar mass", "PhysicalQuantity" -> "MolarMass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
      "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula["MomentOfInertiaRatio"]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "moment of inertia ratio", 
     "PhysicalQuantity" -> "MomentOfInertiaRatio", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["I", "Name" -> "moment of inertia", 
      "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}]/
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["R", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula["MonoproticStrongAcidBaseTitration"]] :> 
   QuantityVariable[Row[{"[", Superscript["H", "+"], "]"}], 
      "Name" -> "acid concentration", "PhysicalQuantity" -> "Molarity", 
      "CanonicalUnit" -> {HoldForm["Molar"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
      Subscript["V", "a"], "Name" -> "volume of acid", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable[Row[{"[", Superscript["OH", "-"], "]"}], 
      "Name" -> "base concentration", "PhysicalQuantity" -> "Molarity", 
      "CanonicalUnit" -> {HoldForm["Molar"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
      Subscript["V", "b"], "Name" -> "volume of base", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}], 
  HoldPattern[MathematicaFormula["MorseEquation"]] :> 
   QuantityVariable["\[CapitalPi]", "Name" -> "osmotic pressure", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["Atmospheres"]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "MolarGasConstant"]*QuantityVariable["i", 
      "Name" -> "van't Hoff factor", "PhysicalQuantity" -> "VantHoffFactor", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["M", "Name" -> "molarity", "PhysicalQuantity" -> 
       "Molarity", "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
      "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]*
     QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["NegativePredictiveValue"]] :> 
   QuantityVariable["npv", "Name" -> "negative predictive value", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["tn", "Name" -> "true negatives", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/
     (QuantityVariable["fn", "Name" -> "false negatives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["tn", 
       "Name" -> "true negatives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["NewtonsLawOfCooling"]] :> 
   QuantityVariable[Style["dQ", Italic]/Style["dt", Italic], 
     "Name" -> "heat transfer rate", "PhysicalQuantity" -> "Power", 
     "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
       {"LengthUnit", 2}]*QuantityVariable["h", 
      "Name" -> "heat transfer coefficient", "PhysicalQuantity" -> 
       "HeatTransferCoefficient", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters"^2)]}, 
      "UnitDimensions" -> {{"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -3}}]*
     (-QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}] + 
      QuantityVariable[Subscript["T", 2], "Name" -> 
        "equilibrium temperature", "PhysicalQuantity" -> "Temperature", 
       "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
        {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula["NewtonsLawOfUniversalGravitation"]] :> 
   QuantityVariable["F", "Name" -> "gravitational force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[None, "GravitationalConstant"]*
      QuantityVariable[Subscript["m", 1], "Name" -> "primary mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable[Subscript["m", 2], "Name" -> "secondary mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}])/
     QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
        "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["NewtonsSecondLawConstantMass"]] :> 
   QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula["NominalToEffectiveInterestRate"]] :> 
   QuantityVariable[Subscript["r", "eff"], 
     "Name" -> "effective interest rate", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    -1 + (1 + QuantityVariable["r", "Name" -> "nominal interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["n", 
         "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^QuantityVariable["n", 
       "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[
     "NominalToEffectiveInterestRateContinuous"]] :> 
   QuantityVariable[SuperStar["r"], "Name" -> "effective interest rate", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -1 + E^QuantityVariable["r", "Name" -> "nominal interest rate", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["NoninvertingAmplifier"]] :> 
   {QuantityVariable[Subscript["V", "out"], "Name" -> "output voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     (1 + QuantityVariable[Subscript["R", 2], "Name" -> "resistance 2", 
         "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
          {HoldForm["Ohms"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -3}}]/QuantityVariable[Subscript["R", 1], 
         "Name" -> "resistance 1", "PhysicalQuantity" -> 
          "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}])*QuantityVariable[
       Subscript["V", "in"], "Name" -> "input voltage", 
       "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
        {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}], QuantityVariable["A", "Name" -> "voltage gain", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     1 + QuantityVariable[Subscript["R", 2], "Name" -> "resistance 2", 
        "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
         {HoldForm["Ohms"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}]/QuantityVariable[Subscript["R", 1], 
        "Name" -> "resistance 1", "PhysicalQuantity" -> "ElectricResistance", 
        "CanonicalUnit" -> {HoldForm["Ohms"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}]}, 
  HoldPattern[MathematicaFormula["NormalizedFrequency"]] :> 
   QuantityVariable["V", "Name" -> "normalized frequency", 
     "PhysicalQuantity" -> "NormalizedFrequency", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (2*Pi*QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*
      Sqrt[QuantityVariable[Subscript["n", "1"], "Name" -> 
           "maximum refractive index of the core", "PhysicalQuantity" -> 
           "RefractiveIndex", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2 - 
        QuantityVariable[Subscript["n", "2"], "Name" -> 
           "refractive index of the homogeneous cladding", 
          "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
           {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2])/
     QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["NozzlePressureDrop"]] :> 
   QuantityVariable["V", "Name" -> "air velocity", "PhysicalQuantity" -> 
      "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(Quantity[25000, ("Feet"^2*"Inches"^2)/("OuncesForce"*"Seconds"^2)]*
       QuantityVariable["D", "Name" -> "nozzle diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}])/QuantityVariable["L", 
       "Name" -> "nozzle length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula["NusseltNumberHeatTransfer"]] :> 
   QuantityVariable["Nu", "Name" -> "Nusselt number for heat transfer", 
     "PhysicalQuantity" -> "NusseltNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["K", "Name" -> "heat transfer coefficient", 
       "PhysicalQuantity" -> "HeatTransferCoefficient", 
       "CanonicalUnit" -> {HoldForm["Watts"/("KelvinsDifference"*
            "Meters"^2)]}, "UnitDimensions" -> {{"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["k", "Name" -> "thermal conductivity", 
      "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["OddsRatio"]] :> 
   QuantityVariable["r", "Name" -> "odds ratio", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == ((1 - QuantityVariable[Subscript[OverHat["p"], 2], 
        "Name" -> "second sample proportion", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])*QuantityVariable[Subscript[OverHat["p"], "1"], 
       "Name" -> "first sample proportion", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable[Subscript[OverHat["p"], 2], 
       "Name" -> "second sample proportion", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(1 - QuantityVariable[Subscript[OverHat["p"], "1"], 
        "Name" -> "first sample proportion", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])), HoldPattern[MathematicaFormula["OhmsLaw"]] :> 
   QuantityVariable["V", "Name" -> "voltage", "PhysicalQuantity" -> 
      "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
       {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable["I", "Name" -> "electric current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 1}]*
     QuantityVariable["R", "Name" -> "electric resistance", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["OttoCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - QuantityVariable["r", "Name" -> "compression ratio", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^
      (1 - QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["OxygenIndex"]] :> 
   QuantityVariable[Row[{Subscript["O", 2], "I"}, "\[InvisibleSpace]"], 
     "Name" -> "oxygen index", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["MAP", "Name" -> "mean airway pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
       Subscript["FiO", 2], "Name" -> "inspired oxygen concentration", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/QuantityVariable[
      Subscript["PaO", 2], "Name" -> "partial pressure of arterial oxygen", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["MillimetersOfMercury"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["PageSpeed"]] :> 
   QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["ppt", "Name" -> "page rate", 
      "PhysicalQuantity" -> "PageRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["pages"]/"Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable["T", 
      "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula["PantoscopicTilt"]] :> 
   {QuantityVariable[Subscript["C", "sphere"], 
      "Name" -> "spherical component of lens prescription", 
      "PhysicalQuantity" -> "OpticalPower", "CanonicalUnit" -> 
       {HoldForm["Diopters"]}, "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["C", "original"], 
       "Name" -> "original spherical component of lens prescription", 
       "PhysicalQuantity" -> "OpticalPower", "CanonicalUnit" -> 
        {HoldForm["Diopters"]}, "UnitDimensions" -> "Dimensionless"]*
      (1 + Sin[QuantityVariable["\[Theta]", "Name" -> "pantoscopic tilt", 
           "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
            {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]^2/
        3), QuantityVariable[Subscript["C", "cylindrical"], 
      "Name" -> "cylindrical component of lens prescription", 
      "PhysicalQuantity" -> "OpticalPower", "CanonicalUnit" -> 
       {HoldForm["Diopters"]}, "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["C", "original"], 
       "Name" -> "original spherical component of lens prescription", 
       "PhysicalQuantity" -> "OpticalPower", "CanonicalUnit" -> 
        {HoldForm["Diopters"]}, "UnitDimensions" -> "Dimensionless"]*
      Tan[QuantityVariable["\[Theta]", "Name" -> "pantoscopic tilt", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]^2}, 
  HoldPattern[MathematicaFormula["ParallaxDistance"]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Parsecs"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[206265, "ArcSeconds"*"AstronomicalUnit"]/
     QuantityVariable["p", "Name" -> "parallax angle", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}], 
  HoldPattern[MathematicaFormula["ParallelAxisTheorem"]] :> 
   QuantityVariable[Subscript["I", "\[DoubleVerticalBar]"], 
     "Name" -> "parallel moment of inertia", "PhysicalQuantity" -> 
      "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "axial distance", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
     QuantityVariable[Subscript["I", "CM"], 
      "Name" -> "moment of inertia about center of mass", 
      "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula["ParallelResistorCapacitorCircuit"]] :> 
   {QuantityVariable[Subscript["I", "r"], "Name" -> "resistor current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
        1}] == QuantityVariable[Subscript["V", "in"], 
       "Name" -> "input voltage", "PhysicalQuantity" -> "ElectricPotential", 
       "CanonicalUnit" -> {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}], 
    QuantityVariable[Subscript["I", "c"], "Name" -> "capacitor current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
        1}] == 2*Pi*QuantityVariable["C", "Name" -> "electric capacitance", 
       "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
        {HoldForm["Farads"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
      QuantityVariable[Subscript["V", "in"], "Name" -> "input voltage", 
       "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
        {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]}, 
  HoldPattern[MathematicaFormula[
     "ParallelResistorInductorCapacitorCircuit"]] :> 
   {QuantityVariable["PF", "Name" -> "power factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     1/(Sqrt[(2*Pi*QuantityVariable["C", "Name" -> "electric capacitance", 
             "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
              {HoldForm["Farads"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", 
                -1}, {"TimeUnit", 4}}]*QuantityVariable["f", 
             "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
             "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
              {"TimeUnit", -1}] - 1/(2*Pi*QuantityVariable["f", 
              "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
              "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> {
                "TimeUnit", -1}]*QuantityVariable["L", "Name" -> 
               "magnetic inductance", "PhysicalQuantity" -> 
               "MagneticInductance", "CanonicalUnit" -> {HoldForm[
                 "Henries"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 
                 -2}, {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", 
                 -2}}]))^2 + QuantityVariable["R", "Name" -> 
            "electric resistance", "PhysicalQuantity" -> 
            "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
           "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
             {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]^(-2)]*
       QuantityVariable["R", "Name" -> "electric resistance", 
        "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
         {HoldForm["Ohms"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}]), 
    Tan[QuantityVariable["\[Phi]", "Name" -> 
        "voltage\[Hyphen]current phase difference", "PhysicalQuantity" -> 
        "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
       "UnitDimensions" -> {"AngleUnit", 1}]] == 
     (2*Pi*QuantityVariable["C", "Name" -> "electric capacitance", 
         "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
          {HoldForm["Farads"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
           {"TimeUnit", 4}}]*QuantityVariable["f", "Name" -> "frequency", 
         "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
          {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] - 
       1/(2*Pi*QuantityVariable["f", "Name" -> "frequency", 
          "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
           {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
         QuantityVariable["L", "Name" -> "magnetic inductance", 
          "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
           {HoldForm["Henries"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TimeUnit", -2}}]))*QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}], 
    QuantityVariable["Q", "Name" -> "quality factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     Sqrt[QuantityVariable["C", "Name" -> "electric capacitance", 
         "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
          {HoldForm["Farads"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
           {"TimeUnit", 4}}]/QuantityVariable["L", 
         "Name" -> "magnetic inductance", "PhysicalQuantity" -> 
          "MagneticInductance", "CanonicalUnit" -> {HoldForm["Henries"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]]*QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}], 
    QuantityVariable[Subscript["\[Omega]", "0"], 
      "Name" -> "resonance angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     1/Sqrt[QuantityVariable["C", "Name" -> "electric capacitance", 
         "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
          {HoldForm["Farads"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
           {"TimeUnit", 4}}]*QuantityVariable["L", 
         "Name" -> "magnetic inductance", "PhysicalQuantity" -> 
          "MagneticInductance", "CanonicalUnit" -> {HoldForm["Henries"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]]}, 
  HoldPattern[MathematicaFormula["ParallelResistorInductorCircuit"]] :> 
   {QuantityVariable[Subscript["I", "r"], "Name" -> "resistor current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
        1}] == QuantityVariable[Subscript["V", "in"], 
       "Name" -> "input voltage", "PhysicalQuantity" -> "ElectricPotential", 
       "CanonicalUnit" -> {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}], 
    QuantityVariable[Subscript["I", "l"], "Name" -> "inductor current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
        1}] == QuantityVariable[Subscript["V", "in"], 
       "Name" -> "input voltage", "PhysicalQuantity" -> "ElectricPotential", 
       "CanonicalUnit" -> {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/(2*Pi*QuantityVariable["f", 
        "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
        "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
         {"TimeUnit", -1}]*QuantityVariable["L", 
        "Name" -> "magnetic inductance", "PhysicalQuantity" -> 
         "MagneticInductance", "CanonicalUnit" -> {HoldForm["Henries"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}])}, 
  HoldPattern[MathematicaFormula["ParallelWiresSelfInductance"]] :> 
   QuantityVariable["L", "Name" -> "self\[Hyphen]inductance", 
     "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
      {HoldForm["Henries"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    Log[QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
         "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["r", 
        "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]]*Quantity[Pi^(-1), "MagneticConstant"]*
     QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["PaschensLaw"]] :> 
   QuantityVariable["V", "Name" -> "breakdown voltage", 
     "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
      {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    (QuantityVariable["a", "Name" -> "constant a", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["d", "Name" -> "gap distance", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
        "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
       "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}])/
     Log[QuantityVariable["b", "Name" -> "constant b", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]*QuantityVariable["d", "Name" -> "gap distance", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]], 
  HoldPattern[MathematicaFormula["PecletNumberMassTransfer"]] :> 
   QuantityVariable[SuperStar["Pe"], "Name" -> 
      "P\[EAcute]clet number for mass transfer", "PhysicalQuantity" -> 
      "PecletNumberMassTransfer", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["PentagonAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (Sqrt[265 + 118*Sqrt[5]]*QuantityVariable["a", "Name" -> "edge length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4)/96, 
  HoldPattern[MathematicaFormula["PlantAllometryTrunkDiameterHeight"]] :> 
   QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> "Height", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == Quantity[20.6`3., "Meters"]*
     (Quantity[None, "Meters"^(-1)]*QuantityVariable["D", 
        "Name" -> "trunk diameter", "PhysicalQuantity" -> "Diameter", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])^0.535, HoldPattern[MathematicaFormula["pOH"]] :> 
   QuantityVariable["pOH", "Name" -> "pOH", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    -(Log[Quantity[None, "Liters"/"Moles"]*QuantityVariable[
         Row[{"[", Superscript["OH", "-"], "]"}], 
         "Name" -> "hydroxide ion concentration", "PhysicalQuantity" -> 
          "Molarity", "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
         "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]]/
      Log[10]), HoldPattern[MathematicaFormula["PointCharge"]] :> 
   {QuantityVariable["\[Phi]", "Name" -> "electric potential", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     (Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*QuantityVariable["Q", 
        "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
        "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
      QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
        "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable["E", "Name" -> "electric field strength", 
      "PhysicalQuantity" -> "ElectricFieldStrength", 
      "CanonicalUnit" -> {HoldForm["Volts"/"Meters"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     (Quantity[1/(4*Pi), "ElectricConstant"^(-1)]*QuantityVariable["Q", 
        "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
        "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
      QuantityVariable["r", "Name" -> "distance", "PhysicalQuantity" -> 
         "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2}, 
  HoldPattern[MathematicaFormula["PointMassMomentOfInertia"]] :> 
   QuantityVariable["I", "Name" -> "moment of inertia", 
     "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "axial distance", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["PoissonRatio"]] :> 
   QuantityVariable["\[Nu]", "Name" -> "Poisson ratio", 
     "PhysicalQuantity" -> "PoissonRatio", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -((QuantityVariable["L", "Name" -> "original length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["\[Delta]\[VeryThinSpace]w", 
        "Name" -> "width difference", "PhysicalQuantity" -> "Width", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])/(QuantityVariable["W", 
        "Name" -> "original width", "PhysicalQuantity" -> "Width", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*QuantityVariable["\[Delta]\[VeryThinSpace]l", 
        "Name" -> "length difference", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])), 
  HoldPattern[MathematicaFormula["PolarToCartesian"]] :> 
   {QuantityVariable["x", "Name" -> Row[{"x", "-coordinate"}], 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == Cos[QuantityVariable["\[CurlyPhi]", 
        "Name" -> "angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable["r", 
       "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable["y", "Name" -> Row[{"y", "-coordinate"}], 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == QuantityVariable["r", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*Sin[QuantityVariable["\[CurlyPhi]", 
        "Name" -> "angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]}, 
  HoldPattern[MathematicaFormula["PolytropicProcess"]] :> 
   {QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       QuantityVariable["n", "Name" -> "polytropic index", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       QuantityVariable["n", "Name" -> "polytropic index", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable[Subscript["T", "f"], "Name" -> "final temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]*
      QuantityVariable[Subscript["V", "f"], "Name" -> "final volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       (-1 + QuantityVariable["n", "Name" -> "polytropic index", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]) == 
     QuantityVariable[Subscript["T", "i"], "Name" -> "initial temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]*
      QuantityVariable[Subscript["V", "i"], "Name" -> "initial volume", 
        "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
         {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]^
       (-1 + QuantityVariable["n", "Name" -> "polytropic index", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["W", "Name" -> "work done on the system", 
      "PhysicalQuantity" -> "Work", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 
     (QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
         "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
          {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
         Subscript["V", "f"], "Name" -> "final volume", "PhysicalQuantity" -> 
          "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
         "UnitDimensions" -> {"LengthUnit", 3}] - 
       QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
         "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
          {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
         Subscript["V", "i"], "Name" -> "initial volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}])/
      (-1 + QuantityVariable["n", "Name" -> "polytropic index", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["Q", "Name" -> "heat transferred to the system", 
      "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == 
     ((QuantityVariable["n", "Name" -> "polytropic index", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable[Subscript["p", "f"], "Name" -> "final pressure", 
          "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
          Subscript["V", "f"], "Name" -> "final volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] - 
        QuantityVariable[Subscript["p", "i"], "Name" -> "initial pressure", 
          "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
          Subscript["V", "i"], "Name" -> "initial volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]))/
      ((-1 + QuantityVariable["n", "Name" -> "polytropic index", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
       (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"])), 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]S", 
      "Name" -> "entropy change", "PhysicalQuantity" -> "Entropy", 
      "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
     (Log[QuantityVariable[Subscript["T", "f"], "Name" -> 
           "final temperature", "PhysicalQuantity" -> "Temperature", 
          "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
           {"TemperatureUnit", 1}]/QuantityVariable[Subscript["T", "i"], 
          "Name" -> "initial temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}]]*
       (QuantityVariable["n", "Name" -> "polytropic index", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
        Subscript["C", "V"], "Name" -> "isochoric heat capacity", 
        "PhysicalQuantity" -> "HeatCapacity", "CanonicalUnit" -> 
         {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
           -1}, {"TimeUnit", -2}}])/(-1 + QuantityVariable["n", 
        "Name" -> "polytropic index", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])}, 
  HoldPattern[MathematicaFormula["PooledStandardDeviation"]] :> 
   QuantityVariable[Subscript["s", "\[Rho]"], 
     "Name" -> "pooled standard deviation", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    Sqrt[((-1 + QuantityVariable[Subscript["n", "1"], 
          "Name" -> "first sample size", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable[Subscript["s", 1], 
          "Name" -> "first sample standard deviation", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2 + (-1 + QuantityVariable[Subscript["n", 2], 
          "Name" -> "second sample size", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable[Subscript["s", 2], 
          "Name" -> "second sample standard deviation", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2)/(-2 + QuantityVariable[Subscript["n", 2], 
        "Name" -> "second sample size", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable[Subscript["n", "1"], 
        "Name" -> "first sample size", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])], 
  HoldPattern[MathematicaFormula["PooledVariance"]] :> 
   QuantityVariable[Superscript[Subscript["s", "\[Rho]"], 2], 
     "Name" -> "pooled variance", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    ((-1 + QuantityVariable[Subscript["n", "1"], "Name" -> 
          "first sample size", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable[Subscript["s", 1], 
         "Name" -> "first sample standard deviation", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2 + (-1 + QuantityVariable[Subscript["n", 2], 
         "Name" -> "second sample size", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable[Subscript["s", 2], 
         "Name" -> "second sample standard deviation", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2)/(-2 + QuantityVariable[Subscript["n", 2], 
       "Name" -> "second sample size", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable[Subscript["n", "1"], "Name" -> "first sample size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["PopulationGrowth"]] :> 
   QuantityVariable["N", "Name" -> "population", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (QuantityVariable["K", "Name" -> "maximum sustainable population", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
       Subscript["N", 0], "Name" -> "initial population", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     ((QuantityVariable["K", "Name" -> "maximum sustainable population", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - QuantityVariable[
         Subscript["N", 0], "Name" -> "initial population", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])/
       E^(QuantityVariable["r", "Name" -> 
           "rate of maximum population growth", "PhysicalQuantity" -> 
           "GrowthConstant", "CanonicalUnit" -> {HoldForm[1/"Seconds"]}, 
          "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable["t", 
          "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]) + QuantityVariable[Subscript["N", 0], 
       "Name" -> "initial population", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["PositivePredictiveValue"]] :> 
   QuantityVariable["ppv", "Name" -> "positive predictive value", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["tp", "Name" -> "true positives", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/
     (QuantityVariable["fp", "Name" -> "false positives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["tp", 
       "Name" -> "true positives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["PowerResistanceCurrent"]] :> 
   QuantityVariable["P", "Name" -> "power", "PhysicalQuantity" -> "Power", 
     "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable["I", "Name" -> "electric current", 
       "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
        {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
         1}]^2*QuantityVariable["R", "Name" -> "electric resistance", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["PowerResistanceVoltage"]] :> 
   QuantityVariable["P", "Name" -> "power", "PhysicalQuantity" -> "Power", 
     "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable["V", "Name" -> "voltage", "PhysicalQuantity" -> 
        "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}]^2/QuantityVariable["R", 
      "Name" -> "electric resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["PowerVoltageCurrent"]] :> 
   QuantityVariable["P", "Name" -> "power", "PhysicalQuantity" -> "Power", 
     "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable["I", "Name" -> "electric current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 1}]*
     QuantityVariable["V", "Name" -> "voltage", "PhysicalQuantity" -> 
       "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["PresentValueFutureValueContinuous"]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    E^(QuantityVariable["i", "Name" -> "continuous interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["n", 
        "Name" -> "interest periods", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])*
     QuantityVariable["PV", "Name" -> "present value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[
     "PresentValueFutureValueContinuousDates"]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    E^(QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["T", 
        "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Years"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}])*QuantityVariable["PV", "Name" -> "present value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["Pressure"]] :> 
   QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["F", "Name" -> "force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["A", 
      "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
       {"LengthUnit", 2}], HoldPattern[MathematicaFormula["Prevalence"]] :> 
   QuantityVariable["prev", "Name" -> "prevalence", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["fn", "Name" -> "false negatives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["tp", 
       "Name" -> "true positives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["fn", "Name" -> "false negatives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["fp", 
       "Name" -> "false positives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["tn", "Name" -> "true negatives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["tp", 
       "Name" -> "true positives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["PrincipalStress"]] :> 
   {Tan[2*QuantityVariable[Subscript["\[Theta]", "p"], 
        "Name" -> "principal angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]] == 
     (2*QuantityVariable[Subscript["\[Tau]", "x\[InvisibleComma]y"], 
        "Name" -> "shear stress", "PhysicalQuantity" -> "Stress", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
      (QuantityVariable[Subscript["\[Sigma]", "x"], 
        "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
         "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}] - QuantityVariable[Subscript["\[Sigma]", "y"], 
        "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
         "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]), QuantityVariable[Subscript["\[Sigma]", "1"], 
      "Name" -> "maximum normal stress", "PhysicalQuantity" -> "Stress", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable[Subscript["\[Sigma]", "x"], 
         "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}] + QuantityVariable[Subscript["\[Sigma]", "y"], 
         "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/2 + 
      Sqrt[(QuantityVariable[Subscript["\[Sigma]", "x"], 
            "Name" -> "normal stress in the x direction", 
            "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
             {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}] - QuantityVariable[
            Subscript["\[Sigma]", "y"], "Name" -> 
             "normal stress in the y direction", "PhysicalQuantity" -> 
             "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
            "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
              {"TimeUnit", -2}}])^2/4 + QuantityVariable[Subscript["\[Tau]", 
           "x\[InvisibleComma]y"], "Name" -> "shear stress", 
          "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}]^2], 
    QuantityVariable[Subscript["\[Sigma]", "2"], 
      "Name" -> "minimum normal stress", "PhysicalQuantity" -> "Stress", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable[Subscript["\[Sigma]", "x"], 
         "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}] + QuantityVariable[Subscript["\[Sigma]", "y"], 
         "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/2 - 
      Sqrt[(QuantityVariable[Subscript["\[Sigma]", "x"], 
            "Name" -> "normal stress in the x direction", 
            "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
             {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}] - QuantityVariable[
            Subscript["\[Sigma]", "y"], "Name" -> 
             "normal stress in the y direction", "PhysicalQuantity" -> 
             "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
            "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
              {"TimeUnit", -2}}])^2/4 + QuantityVariable[Subscript["\[Tau]", 
           "x\[InvisibleComma]y"], "Name" -> "shear stress", 
          "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}]^2], 
    QuantityVariable[Subscript["\[Tau]", "max"], 
      "Name" -> "maximum shear stress", "PhysicalQuantity" -> "Stress", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable[Subscript["\[Sigma]", "1"], 
        "Name" -> "maximum normal stress", "PhysicalQuantity" -> "Stress", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] - 
       QuantityVariable[Subscript["\[Sigma]", "2"], 
        "Name" -> "minimum normal stress", "PhysicalQuantity" -> "Stress", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/2, 
    Tan[2*QuantityVariable[Subscript["\[Theta]", "s1"], 
        "Name" -> "maximum shear angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]] == 
     -(QuantityVariable[Subscript["\[Sigma]", "x"], 
         "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}] - QuantityVariable[Subscript["\[Sigma]", "y"], 
         "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/(2*QuantityVariable[Subscript["\[Tau]", 
         "x\[InvisibleComma]y"], "Name" -> "shear stress", 
        "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}])}, 
  HoldPattern[MathematicaFormula["PrismRefraction"]] :> 
   {QuantityVariable["\[Delta]", "Name" -> "angle of deviation", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}] == 
     -QuantityVariable["\[Alpha]", "Name" -> "apex angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}] + 
      QuantityVariable[Subscript["\[Theta]", "i"], 
       "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
        {"AngleUnit", 1}] + QuantityVariable[Subscript["\[Theta]", "t"], 
       "Name" -> "angle of transmission", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
        {"AngleUnit", 1}], Sin[QuantityVariable[Subscript["\[Theta]", "t"], 
       "Name" -> "angle of transmission", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
        {"AngleUnit", 1}]] == 
     -(Cos[QuantityVariable["\[Alpha]", "Name" -> "apex angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
        Sin[QuantityVariable[Subscript["\[Theta]", "i"], 
          "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
          "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]]) + Sin[QuantityVariable["\[Alpha]", 
         "Name" -> "apex angle", "PhysicalQuantity" -> "Angle", 
         "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
          {"AngleUnit", 1}]]*
       Sqrt[QuantityVariable["n", "Name" -> "refractive index", 
           "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2 - 
         Sin[QuantityVariable[Subscript["\[Theta]", "i"], 
            "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
            "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
             {"AngleUnit", 1}]]^2]}, 
  HoldPattern[MathematicaFormula["ProbabilityOfExceedance"]] :> 
   {QuantityVariable[Subscript["N", "a"], 
      "Name" -> "average annual occurrences", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm[1/"Years"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["N", "Name" -> "number of times exceeded", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]/QuantityVariable[
       Subscript["T", "o"], "Name" -> "observed time period", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}], 
    QuantityVariable["P", "Name" -> "probability of exceedance", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     1 - E^(-(QuantityVariable[Subscript["N", "a"], 
          "Name" -> "average annual occurrences", "PhysicalQuantity" -> 
           "Frequency", "CanonicalUnit" -> {HoldForm[1/"Years"]}, 
          "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
          Subscript["T", "p"], "Name" -> "prediction time period", 
          "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
           {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}])), 
    QuantityVariable[Subscript["T", "x"], 
      "Name" -> "mean recurrence interval", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Years"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}] == QuantityVariable[Subscript["N", "a"], 
       "Name" -> "average annual occurrences", "PhysicalQuantity" -> 
        "Frequency", "CanonicalUnit" -> {HoldForm[1/"Years"]}, 
       "UnitDimensions" -> {"TimeUnit", -1}]^(-1)}, 
  HoldPattern[MathematicaFormula["Projectile"]] :> 
   {QuantityVariable["h", "Name" -> "maximum height", 
      "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     Quantity[1/2, "StandardAccelerationOfGravity"^(-1)]*
      QuantityVariable["v", "Name" -> "initial speed", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
      Sin[QuantityVariable["\[Alpha]", "Name" -> 
          "release angle relative to horizontal", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]]^2, 
    QuantityVariable["x", "Name" -> "horizontal distance traveled", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     Quantity[None, "StandardAccelerationOfGravity"^(-1)]*
      QuantityVariable["v", "Name" -> "initial speed", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
      Sin[2*QuantityVariable["\[Alpha]", "Name" -> 
          "release angle relative to horizontal", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]], 
    QuantityVariable["T", "Name" -> "travel time", "PhysicalQuantity" -> 
       "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}] == 
     Quantity[2, "StandardAccelerationOfGravity"^(-1)]*
      QuantityVariable["v", "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      Sin[QuantityVariable["\[Alpha]", "Name" -> 
         "release angle relative to horizontal", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]}, 
  HoldPattern[MathematicaFormula["ProjectileSlantRange"]] :> 
   QuantityVariable[Subscript["R", "s"], "Name" -> "slant range", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Cos[QuantityVariable["\[Alpha]", "Name" -> 
         "release angle relative to horizontal", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]^2*
     Quantity[2, "StandardAccelerationOfGravity"^(-1)]*
     QuantityVariable["v", "Name" -> "initial speed", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
     (Tan[QuantityVariable["\[Alpha]", "Name" -> 
         "release angle relative to horizontal", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
        "UnitDimensions" -> {"AngleUnit", 1}]] - 
      Tan[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]])*
     Sqrt[1 + Tan[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]]^2], 
  HoldPattern[MathematicaFormula["PulleySystemMechanicalAdvantage"]] :> 
   QuantityVariable["MA", "Name" -> "mechanical advantage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    2*QuantityVariable["n", "Name" -> "number of movable pulleys", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["PythagoreanTheorem"]] :> 
   QuantityVariable["a", "Name" -> "first side length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]^2 + QuantityVariable["b", 
       "Name" -> "second side length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2 == 
    QuantityVariable["c", "Name" -> "hypotenuse", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["QuadraticEquation"]] :> 
   QuantityVariable["c", "Name" -> "constant coefficient", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] + 
     QuantityVariable["b", "Name" -> "linear coefficient", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["x", 
       "Name" -> "indeterminate variable", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     QuantityVariable["a", "Name" -> "quadratic coefficient", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["x", "Name" -> "indeterminate variable", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^2 == 0, 
  HoldPattern[MathematicaFormula["QuarterDiskAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (-4/(9*Pi) + Pi/16)*QuantityVariable["R", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4, 
  HoldPattern[MathematicaFormula["RadioHorizonDistance"]] :> 
   QuantityVariable["d", "Name" -> "horizon distance", 
     "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[None, "EarthEquatorialRadius"]*
     (1 + Quantity[4/3, "EarthEquatorialRadius"^(-1)]*QuantityVariable["h", 
        "Name" -> "altitude of top of radio transmitter", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])*
     Sqrt[1 - (1 + Quantity[4/3, "EarthEquatorialRadius"^(-1)]*
          QuantityVariable["h", "Name" -> 
            "altitude of top of radio transmitter", "PhysicalQuantity" -> 
            "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}])^(-2)], 
  HoldPattern[MathematicaFormula["RainbowAltitude"]] :> 
   {QuantityVariable["\[Theta]", "Name" -> "altitude of rainbow", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}] == 
     QuantityVariable["\[Delta]", "Name" -> "angle of deviation", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}] - 
      QuantityVariable["\[Phi]", "Name" -> "altitude of sun", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}], 
    QuantityVariable["\[Delta]", "Name" -> "angle of deviation", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}] == 
     -2*QuantityVariable[Subscript["\[Theta]", "i"], 
        "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}] + 4*QuantityVariable[Subscript["\[Theta]", "r"], 
        "Name" -> "angle of refraction", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}], Sin[QuantityVariable[Subscript["\[Theta]", "i"], 
       "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
        {"AngleUnit", 1}]] == QuantityVariable[Subscript["n", "w"], 
       "Name" -> "index of refraction", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      Sin[QuantityVariable[Subscript["\[Theta]", "r"], 
        "Name" -> "angle of refraction", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]], 
    Cos[QuantityVariable[Subscript["\[Theta]", "i"], 
        "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]]^2 == 
     (-1 + QuantityVariable[Subscript["n", "w"], "Name" -> 
          "index of refraction", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
        2)/3}, HoldPattern[MathematicaFormula["RangeToAircraft"]] :> 
   QuantityVariable[Subscript["R", "s"], "Name" -> "slant range", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[-1, "EarthEquatorialRadius"]*Sin[QuantityVariable["\[Theta]", 
        "Name" -> "look angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]] + Sqrt[Quantity[2, "EarthEquatorialRadius"]*
        QuantityVariable["h", "Name" -> "altitude", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}] + 
       QuantityVariable["h", "Name" -> "altitude", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       Quantity[None, "EarthEquatorialRadius"^2]*
        Sin[QuantityVariable["\[Theta]", "Name" -> "look angle", 
           "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
            {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]^2], 
  HoldPattern[MathematicaFormula["RankineCycle"]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - (QuantityVariable[Subscript["p", "l"], "Name" -> "low pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable[
        Subscript["p", "h"], "Name" -> "high pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}])^
      (1 - QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]^(-1)), 
  HoldPattern[MathematicaFormula["Rapidity"]] :> 
   QuantityVariable["\[Theta]", "Name" -> "rapidity", 
     "PhysicalQuantity" -> "Rapidity", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    ArcTanh[Quantity[None, "SpeedOfLight"^(-1)]*QuantityVariable["v", 
       "Name" -> "velocity", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]], 
  HoldPattern[MathematicaFormula["RayleighFlow"]] :> 
   {QuantityVariable["P"/Subscript["P", "*"], 
      "Name" -> "ratio of pressure and choked pressure", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
        "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
         {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      (1 + QuantityVariable["Ma", "Name" -> "Mach number", 
          "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2*QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["\[Rho]"/SubStar["\[Rho]"], 
      "Name" -> "ratio of density and choked density", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (1 + QuantityVariable["Ma", "Name" -> "Mach number", 
          "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2*QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])/
      (QuantityVariable["Ma", "Name" -> "Mach number", "PhysicalQuantity" -> 
          "MachNumber", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2*(1 + QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])), 
    QuantityVariable["T"/SubStar["T"], "Name" -> 
       "ratio of temperature and choked temperature", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (QuantityVariable["Ma", "Name" -> "Mach number", "PhysicalQuantity" -> 
          "MachNumber", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2*(1 + QuantityVariable["\[Gamma]", 
          "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
           "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^2)/
      (1 + QuantityVariable["Ma", "Name" -> "Mach number", 
          "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2*QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable["V"/SubStar["V"], "Name" -> 
       "ratio of velocity and choked velocity", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable["Ma", "Name" -> "Mach number", 
         "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^2*
       (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]))/
      (1 + QuantityVariable["Ma", "Name" -> "Mach number", 
          "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2*QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable[Subscript["P", 0]/Subscript["P", "0*"], 
      "Name" -> "ratio of stagnation and choked stagnation pressure", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (2^(QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
          "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
           {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
         (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]))*
       ((1 + 0.5*QuantityVariable["Ma", "Name" -> "Mach number", 
             "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
           (-1 + QuantityVariable["\[Gamma]", "Name" -> 
              "heat capacity ratio", "PhysicalQuantity" -> 
              "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
             "UnitDimensions" -> "Dimensionless"]))/
         (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]))^
        (QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
          "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
           {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
         (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
           "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]))*
       (1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
         "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]))/
      (1 + QuantityVariable["Ma", "Name" -> "Mach number", 
          "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2*QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])}, 
  HoldPattern[MathematicaFormula["RealRateOfReturn"]] :> 
   1 + QuantityVariable[Subscript["r", "real"], 
      "Name" -> "real rate of return", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (1 + QuantityVariable[Subscript["r", "nom"], 
       "Name" -> "nominal rate of return", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (1 + QuantityVariable[Subscript["r", "inf"], "Name" -> "inflation rate", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["RectangleArea"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["W", 
      "Name" -> "width", "PhysicalQuantity" -> "Width", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["RectangleAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (QuantityVariable["B", "Name" -> "base", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["H", "Name" -> "height", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3)/12, 
  HoldPattern[MathematicaFormula["RedlichKwongEquation"]] :> 
   QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[None, "MolarGasConstant"]*
       QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}])/
      (-QuantityVariable["b", "Name" -> "Redlich\[Hyphen]Kwong constant b", 
         "PhysicalQuantity" -> "RedlichKwongConstantB", "CanonicalUnit" -> 
          {HoldForm["Liters"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"LengthUnit", 3}}] + QuantityVariable["V", 
        "Name" -> "molar volume", "PhysicalQuantity" -> "MolarVolume", 
        "CanonicalUnit" -> {HoldForm["Liters"/"Moles"]}, 
        "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 3}}]) - 
     QuantityVariable["a", "Name" -> "Redlich\[Hyphen]Kwong constant a", 
       "PhysicalQuantity" -> "RedlichKwongConstantA", 
       "CanonicalUnit" -> {HoldForm[(Sqrt["Kelvins"]*"Meters"^6*"Pascals")/
           "Moles"^2]}, "UnitDimensions" -> {{"AmountUnit", -2}, 
         {"LengthUnit", 5}, {"MassUnit", 1}, {"TemperatureUnit", 1/2}, 
         {"TimeUnit", -2}}]/(Sqrt[QuantityVariable["T", 
         "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]]*QuantityVariable["V", 
        "Name" -> "molar volume", "PhysicalQuantity" -> "MolarVolume", 
        "CanonicalUnit" -> {HoldForm["Liters"/"Moles"]}, 
        "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 3}}]*
       (QuantityVariable["b", "Name" -> "Redlich\[Hyphen]Kwong constant b", 
         "PhysicalQuantity" -> "RedlichKwongConstantB", "CanonicalUnit" -> 
          {HoldForm["Liters"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"LengthUnit", 3}}] + QuantityVariable["V", 
         "Name" -> "molar volume", "PhysicalQuantity" -> "MolarVolume", 
         "CanonicalUnit" -> {HoldForm["Liters"/"Moles"]}, 
         "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 3}}])), 
  HoldPattern[MathematicaFormula["RedshiftRelativistic"]] :> 
   1 + QuantityVariable["z", "Name" -> "redshift", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == Sqrt[(Quantity[None, "SpeedOfLight"] + 
       QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (Quantity[None, "SpeedOfLight"] - QuantityVariable["v", 
        "Name" -> "velocity", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
  HoldPattern[MathematicaFormula["ReducedMass"]] :> 
   QuantityVariable[Subscript["m", 12], "Name" -> "reduced mass", 
     "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
      {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] == 
    (QuantityVariable[Subscript["m", "1"], "Name" -> "mass of first object", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable[Subscript["m", "2"], "Name" -> 
        "mass of second object", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/(QuantityVariable[Subscript["m", "1"], 
       "Name" -> "mass of first object", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}] + QuantityVariable[Subscript["m", "2"], 
       "Name" -> "mass of second object", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]), 
  HoldPattern[MathematicaFormula["RefractiveIndex"]] :> 
   QuantityVariable["n", "Name" -> "refractive index", 
     "PhysicalQuantity" -> "RefractiveIndex", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == Quantity[None, "SpeedOfLight"]/
     QuantityVariable["v", "Name" -> "characteristic speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["RegularNGonArea"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (Cot[Pi/QuantityVariable["n", "Name" -> "number of sides", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]]*
      QuantityVariable["a", "Name" -> "first side length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^2*QuantityVariable["n", 
       "Name" -> "number of sides", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     4, HoldPattern[MathematicaFormula["RelativeGrahamValue"]] :> 
   QuantityVariable["RGV", "Name" -> "relative Graham value", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[SuperStar["V"], "Name" -> "intrinsic value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]/
     QuantityVariable["P", "Name" -> "current price", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["RenalFailureIndex"]] :> 
   {QuantityVariable["RFI", "Name" -> "renal failure index", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (Quantity[None, "Liters"/"Millimoles"]*QuantityVariable["Cr", 
        "Name" -> "serum creatinine", "PhysicalQuantity" -> "MassDensity", 
        "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
        "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]*
       QuantityVariable[Subscript["U", "Na"], "Name" -> "urine sodium", 
        "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
         {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
         {{"AmountUnit", 1}, {"LengthUnit", -3}}])/QuantityVariable[
       Subscript["U", "Cr"], "Name" -> "urine creatinine", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}], 
    QuantityVariable[Subscript["FE", "Na"], 
      "Name" -> "fractional excretion of sodium", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == 
     (QuantityVariable["Cr", "Name" -> "serum creatinine", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}]*QuantityVariable[
        Subscript["U", "Na"], "Name" -> "urine sodium", 
        "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
         {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
         {{"AmountUnit", 1}, {"LengthUnit", -3}}])/
      (QuantityVariable[Subscript["S", "Na"], "Name" -> "serum sodium", 
        "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
         {HoldForm["Millimoles"/"Liters"]}, "UnitDimensions" -> 
         {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
        Subscript["U", "Cr"], "Name" -> "urine creatinine", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}])}, 
  HoldPattern[MathematicaFormula["Resistance"]] :> 
   QuantityVariable["R", "Name" -> "electric resistance", 
     "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
      {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    (QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
       "Name" -> "electric resistivity", "PhysicalQuantity" -> 
        "ElectricResistivity", "CanonicalUnit" -> 
        {HoldForm["Meters"*"Ohms"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 3}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}])/QuantityVariable["A", "Name" -> "area", 
      "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
       {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}], 
  HoldPattern[MathematicaFormula["ResistanceParallel"]] :> 
   QuantityVariable["R", "Name" -> "equivalent resistance", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]^(-1) == 
    QuantityVariable[Subscript["R", 1], "Name" -> "resistance 1", 
       "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
        {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
         {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]^(-1) + 
     QuantityVariable[Subscript["R", 2], "Name" -> "resistance 2", 
       "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
        {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
         {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]^(-1), 
  HoldPattern[MathematicaFormula["ResistanceSeries"]] :> 
   QuantityVariable["R", "Name" -> "equivalent resistance", 
     "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
      {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable[Subscript["R", 1], "Name" -> "resistance 1", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] + 
     QuantityVariable[Subscript["R", 2], "Name" -> "resistance 2", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["Resistivity"]] :> 
   QuantityVariable["\[Rho]", "Name" -> "electric resistivity", 
     "PhysicalQuantity" -> "ElectricResistivity", "CanonicalUnit" -> 
      {HoldForm["Meters"*"Ohms"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", -2}, {"LengthUnit", 3}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == QuantityVariable["\[Sigma]", 
      "Name" -> "electric conductivity", "PhysicalQuantity" -> 
       "ElectricConductivity", "CanonicalUnit" -> 
       {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
        {"TimeUnit", 3}}]^(-1), 
  HoldPattern[MathematicaFormula["RespiratoryQuotient"]] :> 
   QuantityVariable["RQ", "Name" -> "respiratory quotient", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript["iPO", 2], "Name" -> 
        "partial pressure of inspired oxygen", "PhysicalQuantity" -> 
        "Pressure", "CanonicalUnit" -> {HoldForm["MillimetersOfMercury"]}, 
       "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}] - QuantityVariable[Subscript["PAO", 2], 
       "Name" -> "partial pressure of alveolar oxygen", 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["MillimetersOfMercury"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     QuantityVariable[Subscript["PaCO", 2], 
      "Name" -> "partial pressure of arterial carbon dioxide", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["MillimetersOfMercury"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["RichardsonNumber"]] :> 
   QuantityVariable["Ri", "Name" -> "Richardson number", 
     "PhysicalQuantity" -> "RichardsonNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["g", "Name" -> "gravitational acceleration", 
       "PhysicalQuantity" -> "GravitationalAcceleration", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["h", "Name" -> "characteristic height", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["u", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula["RichterScaleMagnitudeDefinition"]] :> 
   QuantityVariable[Subscript["M", "L"], "Name" -> "Richter scale magnitude", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -2.09 + Log[Quantity[1/2080, "Nanometers"^(-1)]*QuantityVariable["A", 
         "Name" -> "maximum trace amplitude", "PhysicalQuantity" -> 
          "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]]/Log[10] + 
     0.4820668749126095*Log[Quantity[None, "Kilometers"^(-1)]*
        QuantityVariable[Subscript["R", "hyp"], "Name" -> 
          "distance from station to hypocenter", "PhysicalQuantity" -> 
          "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]] + 
     Quantity[0.00189, "Kilometers"^(-1)]*QuantityVariable[
       Subscript["R", "hyp"], "Name" -> 
        "distance from station to hypocenter", "PhysicalQuantity" -> 
        "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["RichterScaleMagnitudeToEnergy"]] :> 
   QuantityVariable["E", "Name" -> "equivalent energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    10^(4.8 + 1.5*QuantityVariable[Subscript["M", "L"], 
         "Name" -> "Richter scale magnitude", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*Quantity[None, "Joules"], 
  HoldPattern[MathematicaFormula["RigidBodyAngularMomentum"]] :> 
   QuantityVariable["L", "Name" -> "angular momentum", 
     "PhysicalQuantity" -> "AngularMomentum", "CanonicalUnit" -> 
      {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["I", "Name" -> "moment of inertia", 
      "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}]*QuantityVariable["\[Omega]", 
      "Name" -> "angular velocity", "PhysicalQuantity" -> "AngularVelocity", 
      "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
      "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["RocketEquation"]] :> 
   QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Log[QuantityVariable[Subscript["m", "i"], "Name" -> "initial mass", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]/
        QuantityVariable[Subscript["m", "f"], "Name" -> "final mass", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]]*
      QuantityVariable[Subscript["v", "e"], "Name" -> 
        "effective exhaust velocity", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
     QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["Rolling"]] :> 
   {QuantityVariable[Subscript["E", "k"], "Name" -> "kinetic energy", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
          "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
           {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/2 + 
      (QuantityVariable["I", "Name" -> "moment of inertia", 
         "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
          {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}}]*
        QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
          "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/2, 
    QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Omega]", 
       "Name" -> "angular frequency", "PhysicalQuantity" -> 
        "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula["RollingFrictionCoefficient"]] :> 
   QuantityVariable[Subscript["F", "f"], "Name" -> "friction force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable[Subscript["F", "n"], 
      "Name" -> "normal force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable[Subscript["\[Mu]", "r"], 
      "Name" -> "rolling friction coefficient", "PhysicalQuantity" -> 
       "RollingFrictionCoefficient", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["RossbyNumber"]] :> 
   QuantityVariable["R\[VeryThinSpace]o", "Name" -> "Rossby number", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Csc[QuantityVariable["\[Theta]", "Name" -> "latitude", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (2*QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["RotationalKineticEnergy"]] :> 
   QuantityVariable["K", "Name" -> "rotational kinetic energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (QuantityVariable["I", "Name" -> "moment of inertia", 
       "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
        {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}}]*
      QuantityVariable["\[Omega]", "Name" -> "angular velocity", 
        "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/2, 
  HoldPattern[MathematicaFormula["RotationalPower"]] :> 
   QuantityVariable["P", "Name" -> "rotational power", 
     "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == QuantityVariable["\[Tau]", "Name" -> "torque", 
      "PhysicalQuantity" -> "Torque", "CanonicalUnit" -> 
       {HoldForm["Meters"*"Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["\[Omega]", "Name" -> "angular velocity", 
      "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["RuleOfSeventy"]] :> 
   QuantityVariable[Subscript["T", "d"], 
     "Name" -> "investment doubling time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Years"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}] == Quantity[4900, "Percent"*"Years"]/
     QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["RunningInTheRain"]] :> 
   {QuantityVariable["t", "Name" -> "time spent in the rain", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}] == 
     QuantityVariable["d", "Name" -> "distance to travel", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
      QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "x"], 
      "Name" -> "rain speed in x direction", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     -(Cos[QuantityVariable["\[Theta]", "Name" -> 
          "angle of rain to the direction of motion", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]]*
       Cos[QuantityVariable["\[Phi]", "Name" -> 
          "angle of rain to side of person", "PhysicalQuantity" -> "Angle", 
         "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
          {"AngleUnit", 1}]]*QuantityVariable[Subscript["v", "r"], 
        "Name" -> "rain speed", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
    QuantityVariable[Subscript["v", "y"], 
      "Name" -> "rain speed in y direction", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     -(Cos[QuantityVariable["\[Theta]", "Name" -> 
          "angle of rain to the direction of motion", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable[
        Subscript["v", "r"], "Name" -> "rain speed", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
       Sin[QuantityVariable["\[Phi]", "Name" -> 
          "angle of rain to side of person", "PhysicalQuantity" -> "Angle", 
         "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
          {"AngleUnit", 1}]]), QuantityVariable[Subscript["v", "z"], 
      "Name" -> "rain speed in z direction", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     -(QuantityVariable[Subscript["v", "r"], "Name" -> "rain speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
       Sin[QuantityVariable["\[Theta]", "Name" -> 
          "angle of rain to the direction of motion", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]]), 
    QuantityVariable["\[Rho]", "Name" -> "rain density", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable["i", "Name" -> "rain rate", "PhysicalQuantity" -> 
        "RainfallRate", "CanonicalUnit" -> {HoldForm["Millimeters"/"Hours"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]/
      Abs[QuantityVariable[Subscript["v", "r"], "Name" -> "rain speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]], 
    QuantityVariable[Subscript["w", "x"], 
      "Name" -> "wetness for front and back", "PhysicalQuantity" -> "Volume", 
      "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
       {"LengthUnit", 3}] == 
     (Abs[-QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> 
            "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
           "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
         QuantityVariable[Subscript["v", "x"], "Name" -> 
           "rain speed in x direction", "PhysicalQuantity" -> "Speed", 
          "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]]*
       QuantityVariable["d", "Name" -> "distance to travel", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> 
         "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["W", 
        "Name" -> "width shoulder to shoulder", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
        "Name" -> "rain density", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["w", "y"], "Name" -> "wetness for sides", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
     (Abs[QuantityVariable[Subscript["v", "y"], "Name" -> 
          "rain speed in y direction", "PhysicalQuantity" -> "Speed", 
         "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]]*
       QuantityVariable["d", "Name" -> "distance to travel", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["D", "Name" -> "width front to back", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> 
         "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
        "Name" -> "rain density", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["w", "z"], "Name" -> "wetness for top", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
     (Abs[QuantityVariable[Subscript["v", "z"], "Name" -> 
          "rain speed in z direction", "PhysicalQuantity" -> "Speed", 
         "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]]*
       QuantityVariable["d", "Name" -> "distance to travel", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["D", "Name" -> "width front to back", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["W", "Name" -> "width shoulder to shoulder", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["\[Rho]", "Name" -> "rain density", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/QuantityVariable["v", 
       "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["w", "T"], "Name" -> "total wetness", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
     QuantityVariable[Subscript["w", "x"], "Name" -> 
        "wetness for front and back", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
        {"LengthUnit", 3}] + QuantityVariable[Subscript["w", "y"], 
       "Name" -> "wetness for sides", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
        {"LengthUnit", 3}] + QuantityVariable[Subscript["w", "z"], 
       "Name" -> "wetness for top", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
        {"LengthUnit", 3}]}, 
  HoldPattern[MathematicaFormula["RydbergFormula"]] :> 
   QuantityVariable["\[Lambda]", "Name" -> "photon wavelength", 
      "PhysicalQuantity" -> "LightWavelength", "CanonicalUnit" -> 
       {HoldForm["Nanometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
     (-1) == Abs[QuantityVariable[Subscript["n", "f"], 
         "Name" -> "principal quantum number of final state", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^(-2) - 
       QuantityVariable[Subscript["n", "i"], "Name" -> 
          "principal quantum number of initial state", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^(-2)]*Quantity[None, "RydbergConstant"]*
     QuantityVariable["Z", "Name" -> "atomic number", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]^2, 
  HoldPattern[MathematicaFormula["SampleSizeForPopulationMean"]] :> 
   QuantityVariable["n", "Name" -> "sample size", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (2*InverseErf[QuantityVariable["c", "Name" -> "confidence level", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]]^2*
      QuantityVariable["\[Sigma]", "Name" -> "population standard deviation", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^2)/
     QuantityVariable["M", "Name" -> "margin of error", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^2, 
  HoldPattern[MathematicaFormula["SandCastleStability"]] :> 
   QuantityVariable["h", "Name" -> "maximum height", 
     "PhysicalQuantity" -> "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    ((3*BesselJZero[-1/3, 1])^(2/3)*
      ((Quantity[None, "StandardAccelerationOfGravity"^(-1)]*
         QuantityVariable["E", "Name" -> "elastic modulus", 
          "PhysicalQuantity" -> "ElasticModulus", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}]*
         QuantityVariable["r", "Name" -> "base radius", "PhysicalQuantity" -> 
            "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^2)/QuantityVariable["d", 
         "Name" -> "density", "PhysicalQuantity" -> "MassDensity", 
         "CanonicalUnit" -> {HoldForm["Grams"/"Milliliters"]}, 
         "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])^(1/3))/
     (2*2^(1/3)), HoldPattern[MathematicaFormula["ScribnerLogRule"]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["BoardFeet"]}, "UnitDimensions" -> 
      {"LengthUnit", 3}] == Quantity[None, "BoardFeet"]*
     (Quantity[-0.269, "Feet"^(-1)]*QuantityVariable["L", 
        "Name" -> "length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}] + Quantity[-0.124, "Feet"^(-1)]*
       QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["L", 
        "Name" -> "length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}] + Quantity[7.1136, "Feet"^(-3)]*
       QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
          "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["L", 
        "Name" -> "length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["SecondOrderArrheniusEquation"]] :> 
   QuantityVariable["k", "Name" -> "second order rate constant", 
     "PhysicalQuantity" -> "SecondOrderRateConstant", 
     "CanonicalUnit" -> {HoldForm["Liters"/("Moles"*"Seconds")]}, 
     "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 3}, 
       {"TimeUnit", -1}}] == 
    E^((Quantity[-1, "MolarGasConstant"^(-1)]*QuantityVariable[
         Subscript["E", "a"], "Name" -> "activation energy", 
         "PhysicalQuantity" -> "ActivationEnergy", "CanonicalUnit" -> 
          {HoldForm["Joules"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/QuantityVariable["T", "Name" -> "temperature", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}])*
     QuantityVariable["A", "Name" -> "pre\[Hyphen]exponential factor", 
      "PhysicalQuantity" -> "SecondOrderArrheniusFactor", 
      "CanonicalUnit" -> {HoldForm["Meters"^3/("Moles"*"Seconds")]}, 
      "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 3}, 
        {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["SeismicMomentMagnitudeToEnergy"]] :> 
   {QuantityVariable["E", "Name" -> "equivalent energy", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     10^(4.8 + 1.5*QuantityVariable[Subscript["M", "w"], 
          "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*Quantity[None, "Joules"], 
    QuantityVariable[Subscript["M", 0], "Name" -> "seismic moment", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     10^(9.1 + 1.5*QuantityVariable[Subscript["M", "w"], 
          "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*Quantity[None, "Joules"]}, 
  HoldPattern[MathematicaFormula["Sensitivity"]] :> 
   QuantityVariable["sens", "Name" -> "sensitivity", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["tp", "Name" -> "true positives", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/
     (QuantityVariable["fn", "Name" -> "false negatives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["tp", 
       "Name" -> "true positives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["SeriesResistorCapacitorCircuit"]] :> 
   QuantityVariable["\[Tau]", "Name" -> "time constant", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    QuantityVariable["C", "Name" -> "electric capacitance", 
      "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
       {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
        {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}]*
     QuantityVariable["R", "Name" -> "electric resistance", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula[
     "SeriesResistorInductorCapacitorCircuit"]] :> 
   {QuantityVariable["PF", "Name" -> "power factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable["R", "Name" -> "electric resistance", 
       "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
        {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
         {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]/
      Sqrt[(-1/(2*Pi*QuantityVariable["C", "Name" -> "electric capacitance", 
             "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
              {HoldForm["Farads"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", 
                -1}, {"TimeUnit", 4}}]*QuantityVariable["f", 
             "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
             "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
              {"TimeUnit", -1}]) + 2*Pi*QuantityVariable["f", 
            "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
            "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
             {"TimeUnit", -1}]*QuantityVariable["L", "Name" -> 
             "magnetic inductance", "PhysicalQuantity" -> 
             "MagneticInductance", "CanonicalUnit" -> {HoldForm["Henries"]}, 
            "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
              {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}])^2 + 
        QuantityVariable["R", "Name" -> "electric resistance", 
          "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
           {HoldForm["Ohms"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}]^2], 
    Tan[QuantityVariable["\[Phi]", "Name" -> 
        "voltage\[Hyphen]current phase difference", "PhysicalQuantity" -> 
        "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
       "UnitDimensions" -> {"AngleUnit", 1}]] == 
     (-1/(2*Pi*QuantityVariable["C", "Name" -> "electric capacitance", 
          "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
           {HoldForm["Farads"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
            {"TimeUnit", 4}}]*QuantityVariable["f", "Name" -> "frequency", 
          "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
           {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]) + 
       2*Pi*QuantityVariable["f", "Name" -> "frequency", 
         "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
          {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
        QuantityVariable["L", "Name" -> "magnetic inductance", 
         "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
          {HoldForm["Henries"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])/QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}], 
    QuantityVariable["Q", "Name" -> "quality factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     Sqrt[QuantityVariable["L", "Name" -> "magnetic inductance", 
         "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
          {HoldForm["Henries"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}]/QuantityVariable["C", 
         "Name" -> "electric capacitance", "PhysicalQuantity" -> 
          "ElectricCapacitance", "CanonicalUnit" -> {HoldForm["Farads"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, 
           {"MassUnit", -1}, {"TimeUnit", 4}}]]/QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}], 
    QuantityVariable[Subscript["\[Omega]", "0"], 
      "Name" -> "resonance angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     1/Sqrt[QuantityVariable["C", "Name" -> "electric capacitance", 
         "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
          {HoldForm["Farads"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
           {"TimeUnit", 4}}]*QuantityVariable["L", 
         "Name" -> "magnetic inductance", "PhysicalQuantity" -> 
          "MagneticInductance", "CanonicalUnit" -> {HoldForm["Henries"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]]}, 
  HoldPattern[MathematicaFormula["SeriesResistorInductorCircuit"]] :> 
   QuantityVariable["\[Tau]", "Name" -> "time constant", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    QuantityVariable["L", "Name" -> "magnetic inductance", 
      "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
       {HoldForm["Henries"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}]/QuantityVariable["R", 
      "Name" -> "electric resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula["SerumOsmolarity"]] :> 
   QuantityVariable[Subscript["S", "osm"], "Name" -> "serum osmolarity", 
     "PhysicalQuantity" -> "Osmolarity", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["milliosmoles"]/"Liters"]}, 
     "UnitDimensions" -> {"LengthUnit", -3}] == 
    Quantity[None, IndependentUnit["milliosmoles"]/"Liters"]*
     (Quantity[0.35714285714285715, "Deciliters"/"Milligrams"]*
       QuantityVariable["BUN", "Name" -> "blood urea nitrogen", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Milligrams"/"Deciliters"]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
      Quantity[1/18, "Deciliters"/"Milligrams"]*QuantityVariable["GLU", 
        "Name" -> "serum glucose", "PhysicalQuantity" -> "MassDensity", 
        "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
        "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
      Quantity[2, "Liters"/"Millimoles"]*
       (QuantityVariable[Subscript["S", "K"], "Name" -> "serum potassium", 
         "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
          {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
          {{"AmountUnit", 1}, {"LengthUnit", -3}}] + QuantityVariable[
         Subscript["S", "Na"], "Name" -> "serum sodium", 
         "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
          {HoldForm["Millimoles"/"Liters"]}, "UnitDimensions" -> 
          {{"AmountUnit", 1}, {"LengthUnit", -3}}])), 
  HoldPattern[MathematicaFormula["SimpleInterest"]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 + QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["n", 
        "Name" -> "interest periods", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])*
     QuantityVariable["PV", "Name" -> "present value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["SingleLayerCircularCoilSelfInductance"]] :> 
   QuantityVariable["L", "Name" -> "self\[Hyphen]inductance", 
     "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
      {HoldForm["Henries"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[1/3, "MagneticConstant"]*
      QuantityVariable["N", "Name" -> "coil turns", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]^2*QuantityVariable["r", "Name" -> "coil radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      ((-8*QuantityVariable["r", "Name" -> "coil radius", 
          "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
        QuantityVariable["l", "Name" -> "coil length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}] + 
       (QuantityVariable["l", "Name" -> "coil length", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^2*
         Sqrt[1 + (4*QuantityVariable["r", "Name" -> "coil radius", 
               "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
              2)/QuantityVariable["l", "Name" -> "coil length", 
              "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {
                HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
             2]*(EllipticK[(4*QuantityVariable["r", "Name" -> "coil radius", 
               "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
              2)/(QuantityVariable["l", "Name" -> "coil length", 
               "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
              2*(1 + (4*QuantityVariable["r", "Name" -> "coil radius", 
                  "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
                   {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                    1}]^2)/QuantityVariable["l", "Name" -> "coil length", 
                 "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                  {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                   1}]^2))] + EllipticE[(4*QuantityVariable["r", 
                "Name" -> "coil radius", "PhysicalQuantity" -> "Radius", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2)/(QuantityVariable["l", "Name" -> 
                 "coil length", "PhysicalQuantity" -> "Length", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2*(1 + (4*QuantityVariable["r", 
                   "Name" -> "coil radius", "PhysicalQuantity" -> "Radius", 
                   "CanonicalUnit" -> {HoldForm["Meters"]}, 
                   "UnitDimensions" -> {"LengthUnit", 1}]^2)/
                QuantityVariable["l", "Name" -> "coil length", 
                  "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                   {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                    1}]^2))]*(-1 + (4*QuantityVariable["r", "Name" -> 
                 "coil radius", "PhysicalQuantity" -> "Radius", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2)/QuantityVariable["l", "Name" -> 
                "coil length", "PhysicalQuantity" -> "Length", 
               "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                {"LengthUnit", 1}]^2)))/QuantityVariable["r", 
          "Name" -> "coil radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}]^2))/QuantityVariable["l", 
      "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[
     "SingleLayerCircularCoilSmallRadiusSelfInductance"]] :> 
   QuantityVariable["L", "Name" -> "self\[Hyphen]inductance", 
     "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
      {HoldForm["Henries"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[Pi, "MagneticConstant"]*
      QuantityVariable["N", "Name" -> "coil turns", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]^2*QuantityVariable["r", "Name" -> "coil radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/
     QuantityVariable["l", "Name" -> "coil length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[
     "SingleLayerRectangularCoilSelfInductance"]] :> 
   QuantityVariable["L", "Name" -> "self\[Hyphen]inductance", 
     "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
      {HoldForm["Henries"]}, "UnitDimensions" -> 
      {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[1/(3*Pi), "MagneticConstant"]*
      (-QuantityVariable["a", "Name" -> "coil cross section edge length 1", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3 - 
       QuantityVariable["b", "Name" -> "coil cross section edge length 2", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3 + 
       3*Pi*QuantityVariable["a", "Name" -> 
          "coil cross section edge length 1", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]*QuantityVariable["b", 
         "Name" -> "coil cross section edge length 2", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["l", 
         "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}] - 
       3*(ArcSinh[QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["a", 
             "Name" -> "coil cross section edge length 1", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]]*
          QuantityVariable["a", "Name" -> "coil cross section edge length 1", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
          QuantityVariable["b", "Name" -> "coil cross section edge length 2", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
         ArcSinh[QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/
            Sqrt[QuantityVariable["a", "Name" -> 
                 "coil cross section edge length 1", "PhysicalQuantity" -> 
                 "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
                "UnitDimensions" -> {"LengthUnit", 1}]^2 + QuantityVariable[
                "l", "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2]]*QuantityVariable["a", 
            "Name" -> "coil cross section edge length 1", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
          QuantityVariable["b", "Name" -> "coil cross section edge length 2", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
         ArcSinh[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["b", 
             "Name" -> "coil cross section edge length 2", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]]*
          QuantityVariable["a", "Name" -> "coil cross section edge length 1", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["b", "Name" -> "coil cross section edge length 2", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 - 
         ArcSinh[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/
            Sqrt[QuantityVariable["b", "Name" -> 
                 "coil cross section edge length 2", "PhysicalQuantity" -> 
                 "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
                "UnitDimensions" -> {"LengthUnit", 1}]^2 + QuantityVariable[
                "l", "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2]]*QuantityVariable["a", 
           "Name" -> "coil cross section edge length 1", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["b", "Name" -> "coil cross section edge length 2", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
         2*ArcTan[(QuantityVariable["a", "Name" -> 
               "coil cross section edge length 1", "PhysicalQuantity" -> 
               "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
              "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["b", 
              "Name" -> "coil cross section edge length 2", 
              "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {
                HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
            (QuantityVariable["l", "Name" -> "coil length", 
              "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {
                HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
             Sqrt[QuantityVariable["a", "Name" -> 
                  "coil cross section edge length 1", "PhysicalQuantity" -> 
                  "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
                 "UnitDimensions" -> {"LengthUnit", 1}]^2 + QuantityVariable[
                 "b", "Name" -> "coil cross section edge length 2", 
                 "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                  {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                   1}]^2 + QuantityVariable["l", "Name" -> "coil length", 
                 "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                  {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                   1}]^2])]*QuantityVariable["a", "Name" -> 
            "coil cross section edge length 1", "PhysicalQuantity" -> 
            "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["b", 
           "Name" -> "coil cross section edge length 2", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["l", "Name" -> "coil length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
         ArcSinh[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["l", 
             "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
             "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
              {"LengthUnit", 1}]]*QuantityVariable["a", 
           "Name" -> "coil cross section edge length 1", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["l", "Name" -> "coil length", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
         ArcSinh[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/
            Sqrt[QuantityVariable["b", "Name" -> 
                 "coil cross section edge length 2", "PhysicalQuantity" -> 
                 "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
                "UnitDimensions" -> {"LengthUnit", 1}]^2 + QuantityVariable[
                "l", "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2]]*QuantityVariable["a", 
           "Name" -> "coil cross section edge length 1", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["l", "Name" -> "coil length", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 - 
         ArcSinh[QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["l", 
             "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
             "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
              {"LengthUnit", 1}]]*QuantityVariable["b", 
           "Name" -> "coil cross section edge length 2", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["l", "Name" -> "coil length", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
         ArcSinh[QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]/
            Sqrt[QuantityVariable["a", "Name" -> 
                 "coil cross section edge length 1", "PhysicalQuantity" -> 
                 "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
                "UnitDimensions" -> {"LengthUnit", 1}]^2 + QuantityVariable[
                "l", "Name" -> "coil length", "PhysicalQuantity" -> "Length", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}]^2]]*QuantityVariable["b", 
           "Name" -> "coil cross section edge length 2", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["l", "Name" -> "coil length", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
           2) + QuantityVariable["a", "Name" -> 
           "coil cross section edge length 1", "PhysicalQuantity" -> 
           "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^2*
        (Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2] + 
         Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2] - Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2]) + QuantityVariable["b", "Name" -> 
           "coil cross section edge length 2", "PhysicalQuantity" -> 
           "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^2*
        (Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2] + 
         Sqrt[QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2] - Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2]) + 2*QuantityVariable["l", "Name" -> "coil length", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
        (QuantityVariable["l", "Name" -> "coil length", "PhysicalQuantity" -> 
           "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}] - 
         Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2] - Sqrt[QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2] + Sqrt[QuantityVariable["a", "Name" -> 
              "coil cross section edge length 1", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["b", "Name" -> 
              "coil cross section edge length 2", "PhysicalQuantity" -> 
              "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
             "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
           QuantityVariable["l", "Name" -> "coil length", 
             "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
            2]))*QuantityVariable["N", "Name" -> "coil turns", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^2)/
     QuantityVariable["l", "Name" -> "coil length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["SodiumDeficit"]] :> 
   QuantityVariable["NaD", "Name" -> "sodium deficit", 
     "PhysicalQuantity" -> "Amount", "CanonicalUnit" -> 
      {HoldForm["Millimoles"]}, "UnitDimensions" -> {"AmountUnit", 1}] == 
    Quantity[0.6, "Liters"/"Kilograms"]*QuantityVariable["W", 
      "Name" -> "body weight", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]*(-QuantityVariable[Subscript["Na", "c"], 
        "Name" -> "serum sodium", "PhysicalQuantity" -> "Molarity", 
        "CanonicalUnit" -> {HoldForm["Millimoles"/"Liters"]}, 
        "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}] + 
      QuantityVariable[Subscript["Na", "i"], "Name" -> "ideal serum sodium", 
       "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
        {HoldForm["Millimoles"/"Liters"]}, "UnitDimensions" -> 
        {{"AmountUnit", 1}, {"LengthUnit", -3}}]), 
  HoldPattern[MathematicaFormula["SolidEllipsoidMomentOfInertia"]] :> 
   QuantityVariable[Subscript["I", "z"], "Name" -> "moment of inertia", 
     "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    ((QuantityVariable["a", "Name" -> "semi\[Hyphen]axis in x direction", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["b", "Name" -> "semi\[Hyphen]axis in y direction", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/5, 
  HoldPattern[MathematicaFormula["Specificity"]] :> 
   QuantityVariable["spec", "Name" -> "specificity", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["tn", "Name" -> "true negatives", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/
     (QuantityVariable["fp", "Name" -> "false positives", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["tn", 
       "Name" -> "true negatives", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula["SpectralLineNaturalBroadening"]] :> 
   QuantityVariable["\[Delta]\[VeryThinSpace]\[Omega]", 
     "Name" -> "frequency full width at half maximum", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    1/(2*QuantityVariable["\[Tau]", "Name" -> "excited state lifetime", 
       "PhysicalQuantity" -> "Lifetime", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]), 
  HoldPattern[MathematicaFormula["SphereMomentOfInertia"]] :> 
   QuantityVariable["I", "Name" -> "moment of inertia", 
     "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    (2*QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/5, 
  HoldPattern[MathematicaFormula["SphericalLawOfSines"]] :> 
   Csc[QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
        {"AngleUnit", 1}]]*Sin[QuantityVariable["a", 
       "Name" -> "first side angular length", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
       "UnitDimensions" -> {"AngleUnit", 1}]] == 
    Csc[QuantityVariable["\[Beta]", "Name" -> "angle opposite second side", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
        {"AngleUnit", 1}]]*Sin[QuantityVariable["b", 
       "Name" -> "second side angular length", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
       "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula["SphericalLawOfTangents"]] :> 
   Cot[(QuantityVariable["a", "Name" -> "first side angular length", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}] + QuantityVariable["b", 
         "Name" -> "second side angular length", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}])/2]*
     Tan[(QuantityVariable["a", "Name" -> "first side angular length", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}] - QuantityVariable["b", 
         "Name" -> "second side angular length", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}])/2] == 
    Cot[(QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}] + QuantityVariable["\[Beta]", 
         "Name" -> "angle opposite second side", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}])/2]*
     Tan[(QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}] - QuantityVariable["\[Beta]", 
         "Name" -> "angle opposite second side", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}])/2], 
  HoldPattern[MathematicaFormula["SpheroidVolume"]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    (4*Pi*QuantityVariable["a", "Name" -> "first semiaxis", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^2*QuantityVariable["c", 
       "Name" -> "third semiaxis", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}])/3, 
  HoldPattern[MathematicaFormula["SpringConstant"]] :> 
   QuantityVariable["k", "Name" -> "spring constant", 
     "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
      {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
      {{"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["d", "Name" -> "spring wire diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4*
      QuantityVariable["E", "Name" -> "Young's modulus", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (16*(-QuantityVariable["d", "Name" -> "spring wire diameter", 
          "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
        QuantityVariable["D", "Name" -> "spring outer diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])^3*
      QuantityVariable["n", "Name" -> "number of active windings", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (1 + QuantityVariable["\[Nu]", "Name" -> "Poisson ratio", 
        "PhysicalQuantity" -> "PoissonRatio", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])), 
  HoldPattern[MathematicaFormula["SpringMaximumForce"]] :> 
   QuantityVariable[Subscript["F", "max"], "Name" -> "maximum spring force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (QuantityVariable["d", "Name" -> "spring wire diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4*
      QuantityVariable["E", "Name" -> "Young's modulus", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      (QuantityVariable["L", "Name" -> "free length of spring", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
       QuantityVariable["d", "Name" -> "spring wire diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable["n", "Name" -> "number of active windings", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]))/
     (16*(-QuantityVariable["d", "Name" -> "spring wire diameter", 
          "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
        QuantityVariable["D", "Name" -> "spring outer diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])^3*
      QuantityVariable["n", "Name" -> "number of active windings", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (1 + QuantityVariable["\[Nu]", "Name" -> "Poisson ratio", 
        "PhysicalQuantity" -> "PoissonRatio", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])), 
  HoldPattern[MathematicaFormula["SpringMaximumShearStress"]] :> 
   QuantityVariable["\[Tau]", "Name" -> "maximum shear stress in spring", 
     "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["d", "Name" -> "spring wire diameter", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["D", "Name" -> "spring outer diameter", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      ((0.615*QuantityVariable["d", "Name" -> "spring wire diameter", 
          "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
        QuantityVariable["D", "Name" -> "spring outer diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
       (-1 + (4*QuantityVariable["D", "Name" -> "spring outer diameter", 
            "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
          QuantityVariable["d", "Name" -> "spring wire diameter", 
           "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
        (-4 + (4*QuantityVariable["D", "Name" -> "spring outer diameter", 
            "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
          QuantityVariable["d", "Name" -> "spring wire diameter", 
           "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]))*
      QuantityVariable["E", "Name" -> "Young's modulus", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      (QuantityVariable["L", "Name" -> "free length of spring", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
       QuantityVariable["d", "Name" -> "spring wire diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable["n", "Name" -> "number of active windings", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]))/
     (2*Pi*(-QuantityVariable["d", "Name" -> "spring wire diameter", 
          "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
        QuantityVariable["D", "Name" -> "spring outer diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])^3*
      QuantityVariable["n", "Name" -> "number of active windings", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (1 + QuantityVariable["\[Nu]", "Name" -> "Poisson ratio", 
        "PhysicalQuantity" -> "PoissonRatio", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])), 
  HoldPattern[MathematicaFormula["StantonNumber"]] :> 
   QuantityVariable["St", "Name" -> "Stanton number for heat transfer", 
     "PhysicalQuantity" -> "StantonNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["K", "Name" -> "heat transfer coefficient", 
      "PhysicalQuantity" -> "HeatTransferCoefficient", 
      "CanonicalUnit" -> {HoldForm["Watts"/("KelvinsDifference"*
           "Meters"^2)]}, "UnitDimensions" -> {{"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]/
     (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["v", 
       "Name" -> "characteristic speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula["StefanBoltzmannLaw"]] :> 
   QuantityVariable["M", "Name" -> "radiant exitance", 
     "PhysicalQuantity" -> "RadiantExitance", "CanonicalUnit" -> 
      {HoldForm["Watts"/"Meters"^2]}, "UnitDimensions" -> 
      {{"MassUnit", 1}, {"TimeUnit", -3}}] == 
    Quantity[None, "StefanBoltzmannConstant"]*
     QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]^4*
     QuantityVariable["\[Epsilon]", "Name" -> "emissivity", 
      "PhysicalQuantity" -> "Emissivity", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["StockContractsOptimalNumber"]] :> 
   QuantityVariable[SuperStar["N"], "Name" -> 
      "optimal futures contracts number", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["P", "Name" -> "portfolio value", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
      QuantityVariable["\[Beta]", "Name" -> "beta coefficient", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/QuantityVariable["A", 
      "Name" -> "underlying futures index value", "PhysicalQuantity" -> 
       "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula["StokesFlow"]] :> 
   QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    6*Pi*QuantityVariable["a", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Eta]", 
      "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
       "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]*
     QuantityVariable[Subscript["u", 0], "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["StrehlRatio"]] :> 
   QuantityVariable["S", "Name" -> "Strehl ratio", "PhysicalQuantity" -> 
      "StrehlRatio", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    E^((-4*Pi^2*QuantityVariable["\[Sigma]", "Name" -> 
          "root\[Hyphen]mean\[Hyphen]square deviation of the wavefront", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/
      QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
        "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
         {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]^
       2), HoldPattern[MathematicaFormula["StringWavePropagation"]] :> 
   QuantityVariable["v", "Name" -> "wave propagation speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[QuantityVariable["T", "Name" -> "string tension", 
       "PhysicalQuantity" -> "Tension", "CanonicalUnit" -> 
        {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["\[Mu]", 
       "Name" -> "linear mass density", "PhysicalQuantity" -> 
        "LinearMassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula["StrouhalNumber"]] :> 
   QuantityVariable["Sr", "Name" -> "Strouhal number", 
     "PhysicalQuantity" -> "StrouhalNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Nu]", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}])/
     QuantityVariable["v", "Name" -> "characteristic speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["SubjectMagnification"]] :> 
   QuantityVariable["M", "Name" -> "subject magnification factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/
     (-QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}] + QuantityVariable["s", 
       "Name" -> "subject distance", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["SuratmanNumber"]] :> 
   QuantityVariable["Su", "Name" -> "Suratman number", 
     "PhysicalQuantity" -> "SuratmanNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
       "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula["SutherlandFormula"]] :> 
   QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
     "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
      {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
    ((QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}]/QuantityVariable[
         Subscript["T", 0], "Name" -> "reference temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}])^
       (3/2)*(QuantityVariable["C", "Name" -> "Sutherland's constant", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] + 
       QuantityVariable[Subscript["T", 0], "Name" -> "reference temperature", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}])*
      QuantityVariable[Subscript["\[Mu]", 0], 
       "Name" -> "reference viscosity", "PhysicalQuantity" -> 
        "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["C", "Name" -> "Sutherland's constant", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] + 
      QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula["SwellingInterfaceNumber"]] :> 
   QuantityVariable["Sw", "Name" -> "swelling interface number", 
     "PhysicalQuantity" -> "SwellingInterfaceNumber", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["v", "Name" -> "penetration speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
       "\[Delta]"["t"], "Name" -> "swollen phase thickness", 
       "PhysicalQuantity" -> "Thickness", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["D", "Name" -> "diffusion coefficient", 
      "PhysicalQuantity" -> "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["SynchronousSpeed"]] :> 
   QuantityVariable[Subscript["\[Omega]", "S"], "Name" -> "motor speed", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Revolutions"/"Minutes"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    (4*Pi*QuantityVariable["f", "Name" -> "supply frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}])/
     QuantityVariable["P", "Name" -> "number of poles", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula["TelescopeLightGatheringPower"]] :> 
   QuantityVariable[Subscript["LGP", 1]/Subscript["LGP", 2], 
     "Name" -> "light\[Hyphen]gathering power ratio", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["D", 1], "Name" -> "objective diameter 1", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2/
     QuantityVariable[Subscript["D", 2], "Name" -> "objective diameter 2", 
       "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["TelescopeMagnifyingPower"]] :> 
   QuantityVariable["M", "Name" -> "subject magnification factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["f", "o"], "Name" -> "objective focal length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable[Subscript["f", "e"], "Name" -> "eyepiece focal length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["ThermalDeformation"]] :> 
   QuantityVariable["\[Delta]", "Name" -> "deformation", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["\[Alpha]", 
      "Name" -> "linear coefficient of thermal expansion", 
      "PhysicalQuantity" -> "LinearThermalExpansionCoefficient", 
      "CanonicalUnit" -> {HoldForm[1/"KelvinsDifference"]}, 
      "UnitDimensions" -> {"TemperatureDifferenceUnit", -1}]*
     (-QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}] + 
      QuantityVariable[Subscript["T", 2], "Name" -> 
        "equilibrium temperature", "PhysicalQuantity" -> "Temperature", 
       "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
        {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula["ThermalSpeed"]] :> 
   QuantityVariable[Subscript["v", "rms"], 
     "Name" -> "root mean square velocity", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[3]*Sqrt[(Quantity[None, "BoltzmannConstant"]*QuantityVariable["T",
         "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}])/QuantityVariable["m", "Name" -> "mass", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]], 
  HoldPattern[MathematicaFormula["ThermodynamicEnergy"]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "BoltzmannConstant"]*QuantityVariable["T", 
      "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
      "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
       {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["ThinFilmInterferenceConstructive"]] :> 
   2*QuantityVariable["t", "Name" -> "thickness", "PhysicalQuantity" -> 
       "Thickness", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
    ((1/2 + QuantityVariable["m", "Name" -> "order", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])*QuantityVariable["\[Lambda]", 
       "Name" -> "wavelength for constructive interference", 
       "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["n", 1], "Name" -> 
        "index of refraction of outside medium", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/QuantityVariable[Subscript["n", 2], 
      "Name" -> "index of refraction of thin film", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula["ThinFilmInterferenceDestructive"]] :> 
   2*QuantityVariable["t", "Name" -> "thickness", "PhysicalQuantity" -> 
       "Thickness", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
    (QuantityVariable["m", "Name" -> "order", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["\[Lambda]", 
       "Name" -> "wavelength for destructive interference", 
       "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["n", 1], "Name" -> 
        "index of refraction of outside medium", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/QuantityVariable[Subscript["n", 2], 
      "Name" -> "index of refraction of thin film", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula["ThinLensEquation"]] :> 
   QuantityVariable["i", "Name" -> "distance between image and lens", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
     QuantityVariable["o", "Name" -> "distance between object and lens", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
    QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]^(-1), 
  HoldPattern[MathematicaFormula["ThinRodMomentOfInertia"]] :> 
   {QuantityVariable[Subscript["I", "\[DoubleVerticalBar]"], 
      "Name" -> "parallel moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 0, 
    QuantityVariable[Subscript["I", "\[UpTee]"], 
      "Name" -> "perpendicular moment of inertia", "PhysicalQuantity" -> 
       "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
     (QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}])/12}, 
  HoldPattern[MathematicaFormula["ThrowingAngle"]] :> 
   {QuantityVariable["\[Alpha]", "Name" -> 
       "release angle relative to horizontal", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcSin[1/(Sqrt[2]*Sqrt[
         1 + (Quantity[None, "StandardAccelerationOfGravity"]*
            QuantityVariable["h", "Name" -> "height of release", 
             "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
           QuantityVariable["v", "Name" -> "initial speed", 
             "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
              {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
              {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2])], 
    QuantityVariable["x", "Name" -> "horizontal distance traveled", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     Cos[QuantityVariable["\[Alpha]", "Name" -> 
         "release angle relative to horizontal", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*Quantity[None, 
       "StandardAccelerationOfGravity"^(-1)]*
      QuantityVariable["v", "Name" -> "initial speed", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*
      (Sin[QuantityVariable["\[Alpha]", "Name" -> 
          "release angle relative to horizontal", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]] + 
       Sqrt[(Quantity[2, "StandardAccelerationOfGravity"]*QuantityVariable[
            "h", "Name" -> "height of release", "PhysicalQuantity" -> 
             "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
            "UnitDimensions" -> {"LengthUnit", 1}])/
          QuantityVariable["v", "Name" -> "initial speed", 
            "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
             {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
             {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2 + 
         Sin[QuantityVariable["\[Alpha]", "Name" -> 
             "release angle relative to horizontal", "PhysicalQuantity" -> 
             "Angle", "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
            "UnitDimensions" -> {"AngleUnit", 1}]]^2])}, 
  HoldPattern[MathematicaFormula["TimeDilationGravitational"]] :> 
   QuantityVariable["t", "Name" -> "time seen by stationary observer", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    QuantityVariable[Subscript["t", "o"], "Name" -> "time in rest frame", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]/
     Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["r", 
         "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula["TimeDilationRelativistic"]] :> 
   QuantityVariable["t", "Name" -> "time seen by stationary observer", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    QuantityVariable[Subscript["t", "o"], "Name" -> "time in rest frame", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]/
     Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula["TorricellisTheorem"]] :> 
   QuantityVariable[Subscript["v", "i"], 
     "Name" -> "speed of efflux from the hole", "PhysicalQuantity" -> 
      "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[2]*Sqrt[Quantity[None, "StandardAccelerationOfGravity"]*
       (QuantityVariable["h", "Name" -> "height of fluid in the vessel", 
         "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
        QuantityVariable[Subscript["h", "i"], "Name" -> 
          "height of efflux point from the base", "PhysicalQuantity" -> 
          "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula["Torsion"]] :> 
   QuantityVariable["\[Phi]", "Name" -> "twist angle", 
     "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
     "UnitDimensions" -> {"AngleUnit", 1}] == 
    (QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["T", 
       "Name" -> "torque", "PhysicalQuantity" -> "Torque", 
       "CanonicalUnit" -> {HoldForm["Meters"*"Newtons"]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}])/(QuantityVariable["G", 
       "Name" -> "torsion modulus", "PhysicalQuantity" -> "Stress", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["J", "Name" -> "second moment of area", 
       "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
        {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}]), 
  HoldPattern[MathematicaFormula["TorusVolume"]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    2*Pi^2*QuantityVariable[Subscript["R", 1], "Name" -> "radius 1", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable[Subscript["R", 2], 
       "Name" -> "radius 2", "PhysicalQuantity" -> "Radius", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["TotalInternalReflection"]] :> 
   {QuantityVariable[Subscript["c", "1"], 
      "Name" -> "speed of light within material", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Quantity[None, "SpeedOfLight"]/QuantityVariable[Subscript["n", "1"], 
       "Name" -> "refractive index within material", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"], QuantityVariable[Subscript["\[Theta]", "c"], 
      "Name" -> "critical angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcSin[QuantityVariable[Subscript["n", "2"], 
        "Name" -> "refractive index outside material", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/QuantityVariable[Subscript["n", "1"], 
        "Name" -> "refractive index within material", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]]}, 
  HoldPattern[MathematicaFormula["TranstubularPotassiumGradient"]] :> 
   QuantityVariable["TTKG", "Name" -> "transtubular potassium gradient", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript["S", "osm"], "Name" -> "serum osmolality", 
       "PhysicalQuantity" -> "Osmolality", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["milliosmoles"]/"Kilograms"]}, 
       "UnitDimensions" -> {"MassUnit", -1}]*QuantityVariable[
       Subscript["U", "K"], "Name" -> "urine potassium", 
       "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
        {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
        {{"AmountUnit", 1}, {"LengthUnit", -3}}])/
     (QuantityVariable[Subscript["S", "K"], "Name" -> "serum potassium", 
       "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
        {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
        {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
       Subscript["U", "osm"], "Name" -> "urine osmolality", 
       "PhysicalQuantity" -> "Osmolality", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["milliosmoles"]/"Kilograms"]}, 
       "UnitDimensions" -> {"MassUnit", -1}]), 
  HoldPattern[MathematicaFormula["TrapezoidArea"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
        "Height", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*
      (QuantityVariable[Subscript["b", 1], "Name" -> "base 1", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}] + QuantityVariable[Subscript["b", 2], 
        "Name" -> "base 2", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]))/2, 
  HoldPattern[MathematicaFormula["TrapezoidAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> 
         "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^3*
      (QuantityVariable["B", "Name" -> "base", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       4*QuantityVariable["B", "Name" -> "base", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable[
         Subscript["b", 2], "Name" -> "base 2", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}] + 
       QuantityVariable[Subscript["b", 2], "Name" -> "base 2", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2))/
     (36*(QuantityVariable["B", "Name" -> "base", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}] + QuantityVariable[
        Subscript["b", 2], "Name" -> "base 2", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}])), 
  HoldPattern[MathematicaFormula["TriangleAreaBH"]] :> 
   QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (QuantityVariable["b", "Name" -> "base", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["h", 
       "Name" -> "height", "PhysicalQuantity" -> "Height", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}])/2, 
  HoldPattern[MathematicaFormula["TriangleAreaMomentOfInertia"]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (QuantityVariable["B", "Name" -> "base", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["H", "Name" -> "height", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3)/36, 
  HoldPattern[MathematicaFormula["TriangleAreaSSS"]] :> 
   {QuantityVariable["s", "Name" -> "semiperimeter", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "first side length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}] + QuantityVariable["b", 
        "Name" -> "second side length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}] + QuantityVariable["c", 
        "Name" -> "third side length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}])/2, 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 2}] == 
     Sqrt[QuantityVariable["s", "Name" -> "semiperimeter", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}]*(-QuantityVariable["a", 
          "Name" -> "first side length", "PhysicalQuantity" -> "Length", 
          "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
          "UnitDimensions" -> {"LengthUnit", 1}] + QuantityVariable["s", 
         "Name" -> "semiperimeter", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}])*
       (-QuantityVariable["b", "Name" -> "second side length", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
           {"LengthUnit", 1}] + QuantityVariable["s", 
         "Name" -> "semiperimeter", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}])*
       (-QuantityVariable["c", "Name" -> "third side length", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
           {"LengthUnit", 1}] + QuantityVariable["s", 
         "Name" -> "semiperimeter", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}])]}, 
  HoldPattern[MathematicaFormula["TriangularPlateMomentOfInertia"]] :> 
   QuantityVariable[Subscript["I", "z"], "Name" -> "moment of inertia", 
     "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
      {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}}] == 
    ((QuantityVariable["a", "Name" -> "first side length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["b", "Name" -> "second side length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["c", "Name" -> "third side length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/36, 
  HoldPattern[MathematicaFormula["TurkeyCookingTime"]] :> 
   {QuantityVariable["t", "Name" -> "cooking time", "PhysicalQuantity" -> 
       "Time", "CanonicalUnit" -> {HoldForm["Hours"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}] == 
     QuantityVariable["T", "Name" -> "cooking environment", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (Quantity[1/20, "Pounds"^(-1)]*QuantityVariable["W", 
         "Name" -> "turkey weight", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}])^(2/3), 
    QuantityVariable[Subscript["t", "stuffing"], 
      "Name" -> "cooking time with stuffing", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Hours"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}] == Quantity[30, "Minutes"] + 
      QuantityVariable["T", "Name" -> "cooking environment", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*(Quantity[1/20, "Pounds"^(-1)]*
         QuantityVariable["W", "Name" -> "turkey weight", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}])^
        (2/3)}, HoldPattern[MathematicaFormula["TurkeyFryingTime"]] :> 
   QuantityVariable["t", "Name" -> "frying time", "PhysicalQuantity" -> 
      "Time", "CanonicalUnit" -> {HoldForm["Minutes"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    Quantity[3.5, "Minutes"/"Pounds"]*QuantityVariable["W", 
      "Name" -> "turkey weight", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula["TwoInfinitelyLongParallelWires"]] :> 
   QuantityVariable["\[CapitalDelta]\[InvisibleSpace]F", 
     "Name" -> "force on a segment", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[1/(2*Pi), "MagneticConstant"]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]L", "Name" -> "length of a segment", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["I", 1], "Name" -> "electrical current 1", 
       "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
        {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
         1}]*QuantityVariable[Subscript["I", 2], 
       "Name" -> "electrical current 2", "PhysicalQuantity" -> 
        "ElectricCurrent", "CanonicalUnit" -> {HoldForm["Amperes"]}, 
       "UnitDimensions" -> {"ElectricCurrentUnit", 1}])/
     QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["TwoUnionProbability"]] :> 
   QuantityVariable["P(A\[Union]B)", "Name" -> 
      Row[{"probability of ", Style["A", Italic], "\[Union]", 
        Style["B", Italic]}], "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["P(A)", "Name" -> Row[{"probability of ", 
         Style["A", Italic]}], "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] - 
     QuantityVariable["P(A\[Intersection]B)", 
      "Name" -> Row[{"probability of ", Style["A", Italic], 
         "\[Intersection]", Style["B", Italic]}], "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] + QuantityVariable["P(B)", 
      "Name" -> Row[{"probability of ", Style["B", Italic]}], 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[
     "UniformDensitySphereGravitationalBindingEnergy"]] :> 
   QuantityVariable["U", "Name" -> "gravitational binding energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[3/5, "GravitationalConstant"]*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]^2)/QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["VanDerWaalsEquation"]] :> 
   (QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
        "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
       "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}] + QuantityVariable["a", 
        "Name" -> "van der Waals constant a", "PhysicalQuantity" -> 
         "VanDerWaalsConstantA", "CanonicalUnit" -> 
         {HoldForm[("Meters"^6*"Pascals")/"Moles"^2]}, "UnitDimensions" -> 
         {{"AmountUnit", -2}, {"LengthUnit", 5}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["V", "Name" -> "molar volume", 
         "PhysicalQuantity" -> "MolarVolume", "CanonicalUnit" -> 
          {HoldForm["Liters"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"LengthUnit", 3}}]^2)*
     (-QuantityVariable["b", "Name" -> "van der Waals constant b", 
        "PhysicalQuantity" -> "VanDerWaalsConstantB", "CanonicalUnit" -> 
         {HoldForm["Liters"/"Moles"]}, "UnitDimensions" -> 
         {{"AmountUnit", -1}, {"LengthUnit", 3}}] + QuantityVariable["V", 
       "Name" -> "molar volume", "PhysicalQuantity" -> "MolarVolume", 
       "CanonicalUnit" -> {HoldForm["Liters"/"Moles"]}, 
       "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 3}}]) == 
    Quantity[None, "MolarGasConstant"]*QuantityVariable["T", 
      "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
      "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
       {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula["VectorProjection"]] :> 
   QuantityVariable["x", "Name" -> "projected distance", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Cos[QuantityVariable["\[Theta]", "Name" -> "plane angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
     QuantityVariable["L", "Name" -> "vector magnitude", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["VelocityAdditionRelativistic"]] :> 
   QuantityVariable["V", "Name" -> 
      "velocity in stationary observer reference frame", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["SpeedOfLight"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    (QuantityVariable["u", "Name" -> 
        "velocity of moving observer with respect to stationary observer", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["SpeedOfLight"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Superscript["v", "\[Prime]"], "Name" -> 
        "velocity in the moving observer reference frame", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["SpeedOfLight"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (1 + Quantity[None, "SpeedOfLight"^(-2)]*QuantityVariable["u", 
        "Name" -> 
         "velocity of moving observer with respect to stationary observer", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["SpeedOfLight"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Superscript["v", "\[Prime]"], "Name" -> 
         "velocity in the moving observer reference frame", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["SpeedOfLight"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula["VelocityComponents"]] :> 
   {QuantityVariable[Subscript["v", "x"], 
      "Name" -> "x\[Hyphen]component of the velocity", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Cos[QuantityVariable["\[Theta]", "Name" -> "angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
      QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "y"], 
      "Name" -> "y\[Hyphen]component of the velocity", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      Sin[QuantityVariable["\[Theta]", "Name" -> "angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]}, 
  HoldPattern[MathematicaFormula["VickersHardness"]] :> 
   QuantityVariable["HV", "Name" -> "Vickers hardness", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["KilogramsForce"/"Millimeters"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (2*Cos[22*Degree]*QuantityVariable["F", 
       "Name" -> "applied force", "PhysicalQuantity" -> "Force", 
       "CanonicalUnit" -> {HoldForm["KilogramsForce"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}])/QuantityVariable["d", 
       "Name" -> "indentation diagonal average length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Millimeters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula["Viscosity"]] :> 
   QuantityVariable["\[Nu]", "Name" -> "kinematic viscosity", 
     "PhysicalQuantity" -> "KinematicViscosity", "CanonicalUnit" -> 
      {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]/
     QuantityVariable["\[Rho]", "Name" -> "fluid density", 
      "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
       {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
       {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula["WaterHammerFast"]] :> 
   QuantityVariable["\[CapitalDelta]\[InvisibleSpace]P", 
     "Name" -> "pressure difference", "PhysicalQuantity" -> "Pressure", 
     "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["\[Rho]", "Name" -> "fluid density", 
      "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
       {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
       {{"LengthUnit", -3}, {"MassUnit", 1}}]*QuantityVariable[
      Row[{"\[Delta]", Style["v", Italic]}], 
      "Name" -> "change in fluid velocity", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
     QuantityVariable[Subscript["v", "s"], "Name" -> "speed of sound", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula["WaterHammerSlow"]] :> 
   QuantityVariable["\[CapitalDelta]\[InvisibleSpace]P", 
     "Name" -> "pressure difference", "PhysicalQuantity" -> "Pressure", 
     "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["P", "Name" -> "inlet pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] + 
     (Quantity[0.07, ("PoundsForce"*"Seconds"^2)/("Feet"^2*"Inches"^2)]*
       QuantityVariable["L", "Name" -> "upstream pipe length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["v", "Name" -> "flow velocity of fluid", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}])/QuantityVariable["t", 
       "Name" -> "valve closing time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula["WaterWavePhaseSpeed"]] :> 
   {QuantityVariable["v", "Name" -> "wave propagation speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[(QuantityVariable["g", "Name" -> "gravitational acceleration", 
         "PhysicalQuantity" -> "GravitationalAcceleration", 
         "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        Tanh[QuantityVariable["d", "Name" -> "depth of water", 
           "PhysicalQuantity" -> "Depth", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
            "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", -1}]])/QuantityVariable["k", 
        "Name" -> "wavenumber", "PhysicalQuantity" -> "Wavenumber", 
        "CanonicalUnit" -> {HoldForm[1/"Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", -1}]], QuantityVariable["k", "Name" -> "wavenumber", 
      "PhysicalQuantity" -> "Wavenumber", "CanonicalUnit" -> 
       {HoldForm[1/"Meters"]}, "UnitDimensions" -> {"LengthUnit", -1}] == 
     (2*Pi)/QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
       "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
        {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]}, 
  HoldPattern[MathematicaFormula["Wavenumber"]] :> 
   {QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
       "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", -1}] == 
     (2*Pi)/QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
       "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
        {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
       "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", -1}] == 
     2*Pi*QuantityVariable[OverTilde["\[Nu]"], 
       "Name" -> "spectroscopic wavenumber", "PhysicalQuantity" -> 
        "SpectroscopicWavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", -1}]}, 
  HoldPattern[MathematicaFormula["WeberNumber"]] :> 
   QuantityVariable[Subscript["We", 1], "Name" -> "(first) Weber number", 
     "PhysicalQuantity" -> "WeberNumber1", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
      "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula["WeightedAverageCostOfCapital"]] :> 
   QuantityVariable["WACC", "Name" -> "weighted average cost of capital", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["D", "Name" -> "total debt", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 - QuantityVariable["T", "Name" -> "tax rate", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable[Subscript["r", "d"], 
        "Name" -> "cost of debt", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      (QuantityVariable["D", "Name" -> "total debt", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}] + QuantityVariable["E", 
        "Name" -> "total equity", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]) + 
     (QuantityVariable["E", "Name" -> "total equity", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*QuantityVariable[
        Subscript["r", "e"], "Name" -> "cost of equity", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/
      (QuantityVariable["D", "Name" -> "total debt", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}] + QuantityVariable["E", 
        "Name" -> "total equity", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]), 
  HoldPattern[MathematicaFormula["WheelAndAxleMechanicalAdvantage"]] :> 
   QuantityVariable["MA", "Name" -> "mechanical advantage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["r", "w"], "Name" -> "wheel radius", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable[Subscript["r", "a"], "Name" -> "axle radius", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula["WindTurbine"]] :> 
   QuantityVariable["P", "Name" -> "turbine power", 
     "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == (QuantityVariable["A", "Name" -> "turbine area", 
       "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
        {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}]*
      QuantityVariable["V", "Name" -> "wind velocity", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^3*
      QuantityVariable["\[Mu]", "Name" -> "turbine efficiency", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Rho]", 
       "Name" -> "air density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/2, 
  HoldPattern[MathematicaFormula["WordSpeed"]] :> 
   QuantityVariable["w", "Name" -> "English words", 
     "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["T", "Name" -> "time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]*QuantityVariable["wpt", 
      "Name" -> "word rate", "PhysicalQuantity" -> "WordRate", 
      "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]/"Minutes"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula["YoungsModulus"]] :> 
   QuantityVariable["E", "Name" -> "Young's modulus of material", 
     "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
       "Name" -> "load", "PhysicalQuantity" -> "Force", 
       "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable["\[Delta]", 
       "Name" -> "deformation", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula["ZeissFormula"]] :> 
   QuantityVariable[Subscript["d", "CoC"], 
     "Name" -> "maximum acceptable diameter of circle of confusion", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["d", "Name" -> "diagonal length of image sensor format", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/1730, 
  HoldPattern[MathematicaFormula["ZernikeOpticalAberration"]] :> 
   QuantityVariable[Subsuperscript["Z", "n", "m"], "Name" -> "Zernike term", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (((1 + (-1)^QuantityVariable["m", "Name" -> "azimuthal frequency index", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])*
        Cos[QuantityVariable["m", "Name" -> "azimuthal frequency index", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Phi]", 
           "Name" -> "azimuthal angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]])/2 + 
      ((1 + (-1)^(1 + QuantityVariable["m", "Name" -> 
             "azimuthal frequency index", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]))*Sin[QuantityVariable["m", 
           "Name" -> "azimuthal frequency index", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]*QuantityVariable["\[Phi]", 
           "Name" -> "azimuthal angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]])/2)*ZernikeR[QuantityVariable["n", 
       "Name" -> "radial order", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
      QuantityVariable["m", "Name" -> "azimuthal frequency index", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], QuantityVariable["r", 
       "Name" -> "radius", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]], 
  HoldPattern[MathematicaFormula[{"AngleOfView", "Height"}]] :> 
   QuantityVariable[Subscript["\[Alpha]", "v"], 
     "Name" -> "vertical angle of view", "PhysicalQuantity" -> "Angle", 
     "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
      {"AngleUnit", 1}] == 
    2*ArcTan[QuantityVariable["h", "Name" -> "height of image format", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       (2*QuantityVariable["f", "Name" -> "focal length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula[{"AngleOfView", "Width"}]] :> 
   QuantityVariable[Subscript["\[Alpha]", "h"], 
     "Name" -> "horizontal angle of view", "PhysicalQuantity" -> "Angle", 
     "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
      {"AngleUnit", 1}] == 
    2*ArcTan[QuantityVariable["w", "Name" -> "width of image format", 
        "PhysicalQuantity" -> "Width", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       (2*QuantityVariable["f", "Name" -> "focal length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula[{"Annuity", "FutureValue"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + (1 + QuantityVariable["i", "Name" -> "interest rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"Annuity", "PresentValue"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 - (1 + QuantityVariable["i", "Name" -> "interest rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (-QuantityVariable["n", "Name" -> "number of periods", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "FutureValue"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 + QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*
      (-1 + (1 + QuantityVariable["i", "Name" -> "interest rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "PresentValue"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 + QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*
      (1 - (1 + QuantityVariable["i", "Name" -> "interest rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (-QuantityVariable["n", "Name" -> "number of periods", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"AverageAngularVelocity", "Angles"}]] :> 
   QuantityVariable[Overscript["\[Omega]", "_"], 
     "Name" -> "average angular velocity", "PhysicalQuantity" -> 
      "AngularVelocity", "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    (QuantityVariable[Subscript["\[Theta]", "f"], "Name" -> "final angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}] - 
      QuantityVariable[Subscript["\[Theta]", "i"], "Name" -> "initial angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}])/
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"AverageAngularVelocity", 
      "AngularDisplacement"}]] :> 
   QuantityVariable[Overscript["\[Omega]", "_"], 
     "Name" -> "average angular velocity", "PhysicalQuantity" -> 
      "AngularVelocity", "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["\[Theta]", "Name" -> "angular displacement", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]/
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"AverageAngularVelocity", 
      "Velocities"}]] :> 
   (QuantityVariable[Subscript["\[Omega]", "f"], 
       "Name" -> "final angular velocity", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Subscript["\[Omega]", "i"], "Name" -> "initial angular velocity", 
       "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}])/2 == 
    QuantityVariable["\[Theta]", "Name" -> "angular displacement", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]/
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"AverageSpeed", "Positions"}]] :> 
   QuantityVariable[Overscript["v", "_"], "Name" -> "average speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    (QuantityVariable[Subscript["x", "f"], "Name" -> "final position", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
      QuantityVariable[Subscript["x", "i"], "Name" -> "initial position", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"AverageSpeed", "Speeds"}]] :> 
   (QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Subscript["v", "i"], "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/2 == 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["t", 
      "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"AverageSpeed", "TotalDistance"}]] :> 
   QuantityVariable[Overscript["v", "_"], "Name" -> "average speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["t", 
      "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BarometricFormula", "MassDensity"}]] :> 
   QuantityVariable["\[Rho]", "Name" -> "mass density", 
     "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
      {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
      {{"LengthUnit", -3}, {"MassUnit", 1}}] == 
    E^((Quantity[-1, "StandardAccelerationOfGravity"/"MolarGasConstant"]*
        QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
          "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["M", 
         "Name" -> "molar mass", "PhysicalQuantity" -> "MolarMass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
         "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}])/
       QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}])*
     QuantityVariable[Subscript["\[Rho]", 0], 
      "Name" -> "reference mass density", "PhysicalQuantity" -> 
       "MassDensity", "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"BarometricFormula", "Pressure"}]] :> 
   QuantityVariable["p", "Name" -> "pressure", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    E^((Quantity[-1, "StandardAccelerationOfGravity"/"MolarGasConstant"]*
        QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
          "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["M", 
         "Name" -> "molar mass", "PhysicalQuantity" -> "MolarMass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
         "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}])/
       QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}])*
     QuantityVariable[Subscript["p", 0], "Name" -> "reference pressure", 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"BaseballBattingAverageOnBallsInPlay", 
      "SacrificeFlies"}]] :> QuantityVariable["BABIP", 
     "Name" -> "batting average on balls in play", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] - QuantityVariable["HR", 
       "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["HR", "Name" -> "home runs", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] - QuantityVariable["K", 
       "Name" -> "strikeouts", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["SF", "Name" -> "sacrifice flies", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballBattingAverageOnBallsInPlay", 
      "Standard"}]] :> QuantityVariable["BABIP", 
     "Name" -> "batting average on balls in play", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] - QuantityVariable["HR", 
       "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["HR", "Name" -> "home runs", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballBattingAverageOnBallsInPlay", 
      "Strikeouts"}]] :> QuantityVariable["BABIP", 
     "Name" -> "batting average on balls in play", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] - QuantityVariable["HR", 
       "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["HR", "Name" -> "home runs", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballEarnedRunAverage", "Outs"}]] :> 
   QuantityVariable["ERA", "Name" -> "earned run average", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (9*QuantityVariable["ER", "Name" -> "earned runs allowed", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["IP", "Name" -> "innings pitched", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["OUTS", "Name" -> "outs recorded", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]/3), 
  HoldPattern[MathematicaFormula[{"BaseballEarnedRunAverage", 
      "Standard"}]] :> QuantityVariable["ERA", 
     "Name" -> "earned run average", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (9*QuantityVariable["ER", "Name" -> "earned runs allowed", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/QuantityVariable["IP", 
      "Name" -> "innings pitched", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballFieldingIndependentPitching", 
      "ExpectedHomeruns"}]] :> QuantityVariable["xFIP", 
     "Name" -> "expected fielding independent pitching", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    3.1 + (3*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 1.3519999999999999*QuantityVariable["FB", 
         "Name" -> "fly balls", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - 2*QuantityVariable["K", "Name" -> "strikeouts", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])/QuantityVariable["IP", 
       "Name" -> "innings pitched", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballFieldingIndependentPitching", 
      "Homeruns"}]] :> QuantityVariable["FIP", 
     "Name" -> "fielding independent pitching", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    3.1 + (3*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 13*QuantityVariable["HR", "Name" -> "home runs", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - 
       2*QuantityVariable["K", "Name" -> "strikeouts", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])/QuantityVariable["IP", 
       "Name" -> "innings pitched", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballOnBasePercentage", 
      "HitByPitch"}]] :> QuantityVariable["OBP", 
     "Name" -> "on-base percentage", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["HBP", 
       "Name" -> "hit by pitch", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["BB", "Name" -> "walks", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["HBP", 
       "Name" -> "hit by pitch", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballOnBasePercentage", 
      "SacrificeFlies"}]] :> QuantityVariable["OBP", 
     "Name" -> "on-base percentage", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["BB", "Name" -> "walks", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["SF", 
       "Name" -> "sacrifice flies", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballOnBasePercentage", 
      "Standard"}]] :> QuantityVariable["OBP", 
     "Name" -> "on-base percentage", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["BB", "Name" -> "walks", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballRunsCreated", "Standard"}]] :> 
   QuantityVariable["RC", "Name" -> "runs created", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    ((QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable["TB", 
       "Name" -> "total bases", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["BB", "Name" -> "walks", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballSecondaryAverage", 
      "CaughtStealing"}]] :> QuantityVariable["SA", 
     "Name" -> "secondary average", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["CS", 
       "Name" -> "caught stealing", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] - 
      QuantityVariable["H", "Name" -> "hits", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["TB", "Name" -> "total bases", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/QuantityVariable["AB", 
      "Name" -> "at bats", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballSecondaryAverage", 
      "Standard"}]] :> QuantityVariable["SA", "Name" -> "secondary average", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["TB", 
       "Name" -> "total bases", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballSecondaryAverage", 
      "StolenBases"}]] :> QuantityVariable["SA", 
     "Name" -> "secondary average", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["SB", 
       "Name" -> "stolen bases", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["TB", "Name" -> "total bases", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/QuantityVariable["AB", "Name" -> "at bats", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballWalksPlusHitsPerInning", 
      "Outs"}]] :> QuantityVariable["WHIP", 
     "Name" -> "walks plus hits per inning pitched", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["IP", "Name" -> "innings pitched", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["OUTS", "Name" -> "outs recorded", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]/3), 
  HoldPattern[MathematicaFormula[{"BaseballWalksPlusHitsPerInning", 
      "Standard"}]] :> QuantityVariable["WHIP", 
     "Name" -> "walks plus hits per inning pitched", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/QuantityVariable["IP", 
      "Name" -> "innings pitched", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballWeightedOnBaseAverage", 
      "HitByPitch"}]] :> QuantityVariable["wOBA", 
     "Name" -> "weighted on base average", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (0.884*QuantityVariable["1B", "Name" -> "singles", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 1.257*QuantityVariable["2B", "Name" -> "doubles", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      1.593*QuantityVariable["3B", "Name" -> "triples", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      0.72*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 0.722*QuantityVariable["HBP", 
        "Name" -> "hit by pitch", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 2.058*QuantityVariable["HR", 
        "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["PA", "Name" -> "plate appearances", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballWeightedOnBaseAverage", 
      "ReachedBaseOnError"}]] :> QuantityVariable["wOBA", 
     "Name" -> "weighted on base average", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (0.884*QuantityVariable["1B", "Name" -> "singles", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 1.257*QuantityVariable["2B", "Name" -> "doubles", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      1.593*QuantityVariable["3B", "Name" -> "triples", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      0.72*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 2.058*QuantityVariable["HR", 
        "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 0.92*QuantityVariable["RBOE", 
        "Name" -> "reached base on error", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["PA", "Name" -> "plate appearances", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballWeightedOnBaseAverage", 
      "Standard"}]] :> QuantityVariable["wOBA", 
     "Name" -> "weighted on base average", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (0.884*QuantityVariable["1B", "Name" -> "singles", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 1.257*QuantityVariable["2B", "Name" -> "doubles", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      1.593*QuantityVariable["3B", "Name" -> "triples", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      0.72*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 2.058*QuantityVariable["HR", 
        "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["PA", "Name" -> "plate appearances", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BeerLambertLaw", "DecadicAbsorbance"}]] :> 
   QuantityVariable[Subscript["A", "10"], "Name" -> "decadic absorbance", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["c", "Name" -> "concentration", 
      "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
       {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable["l", 
      "Name" -> "path length", "PhysicalQuantity" -> "PathLength", 
      "CanonicalUnit" -> {HoldForm["Centimeters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["\[Epsilon]", 
      "Name" -> "molar absorptivity", "PhysicalQuantity" -> 
       "MolarAbsorptionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Liters"/("Centimeters"*"Moles")]}, 
      "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 2}}], 
  HoldPattern[MathematicaFormula[{"BeerLambertLaw", 
      "NapierianAbsorbance"}]] :> QuantityVariable[Subscript["A", "e"], 
     "Name" -> "Napierian absorbance", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["l", "Name" -> "path length", "PhysicalQuantity" -> 
       "PathLength", "CanonicalUnit" -> {HoldForm["Centimeters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["N", 
      "Name" -> "particle density", "PhysicalQuantity" -> "MoleculeDensity", 
      "CanonicalUnit" -> {HoldForm[IndependentUnit["molecules"]/"Liters"]}, 
      "UnitDimensions" -> {"LengthUnit", -3}]*QuantityVariable["\[Sigma]", 
      "Name" -> "absorption cross\[Hyphen]section", "PhysicalQuantity" -> 
       "Area", "CanonicalUnit" -> {HoldForm["Centimeters"^2]}, 
      "UnitDimensions" -> {"LengthUnit", 2}], 
  HoldPattern[MathematicaFormula[{"BenchStepping", "StepCount"}]] :> 
   QuantityVariable["sc", "Name" -> "step count", "PhysicalQuantity" -> 
      "Step", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["sr", "Name" -> "step rate", "PhysicalQuantity" -> 
       "StepRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BenchStepping", "StepHeight"}]] :> 
   QuantityVariable["sc", "Name" -> "step count", "PhysicalQuantity" -> 
      "Step", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["sr", "Name" -> "step rate", "PhysicalQuantity" -> 
       "StepRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BenchStepping", "StepRate"}]] :> 
   QuantityVariable["sc", "Name" -> "step count", "PhysicalQuantity" -> 
      "Step", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["sr", "Name" -> "step rate", "PhysicalQuantity" -> 
       "StepRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BenjaminGrahamFormula", 
      "CurrentYieldAAACorporateBonds"}]] :> 
   QuantityVariable[SuperStar["V"], "Name" -> "intrinsic value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (0.044*QuantityVariable["EPS", "Name" -> "earnings per share", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
      (8.5 + 200*QuantityVariable["g", "Name" -> 
          "long term earnings growth estimate", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/QuantityVariable["Y", 
      "Name" -> "current yield AAA corporate bonds", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BenjaminGrahamFormula", "Standard"}]] :> 
   QuantityVariable[SuperStar["V"], "Name" -> "intrinsic value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["EPS", "Name" -> "earnings per share", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
     (8.5 + 200*QuantityVariable["g", "Name" -> 
         "long term earnings growth estimate", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"Bicycling", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Bicycling", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"BlackbodyLuminosity", "Diameter"}]] :> 
   QuantityVariable["L", "Name" -> "luminosity", "PhysicalQuantity" -> 
      "Luminosity", "CanonicalUnit" -> {HoldForm["SolarLuminosity"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == Quantity[Pi, "StefanBoltzmannConstant"]*
     QuantityVariable["D", "Name" -> "diameter", "PhysicalQuantity" -> 
        "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2*
     QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]^4, 
  HoldPattern[MathematicaFormula[{"BlackbodyLuminosity", "Radius"}]] :> 
   QuantityVariable["L", "Name" -> "luminosity", "PhysicalQuantity" -> 
      "Luminosity", "CanonicalUnit" -> {HoldForm["SolarLuminosity"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -3}}] == Quantity[4*Pi, "StefanBoltzmannConstant"]*
     QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2*
     QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]^4, 
  HoldPattern[MathematicaFormula[{"BlackHoleEntropy", "AngularMomentum"}]] :> 
   QuantityVariable["S", "Name" -> "entropy", "PhysicalQuantity" -> 
      "Entropy", "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
    Quantity[Pi, ("BoltzmannConstant"*"SpeedOfLight"^3)/
       ("GravitationalConstant"*"ReducedPlanckConstant")]*
     ((Quantity[None, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
          "Name" -> "angular momentum", "PhysicalQuantity" -> 
           "AngularMomentum", "CanonicalUnit" -> 
           {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]^2 + 
      (Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
           "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
          "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
              "Name" -> "angular momentum", "PhysicalQuantity" -> 
               "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                  "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2])^2), 
  HoldPattern[MathematicaFormula[{"BlackHoleEntropy", "Charge"}]] :> 
   QuantityVariable["S", "Name" -> "entropy", "PhysicalQuantity" -> 
      "Entropy", "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
    Quantity[Pi, ("BoltzmannConstant"*"SpeedOfLight"^3)/
       ("GravitationalConstant"*"ReducedPlanckConstant")]*
     (Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
        QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}] + 
       Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
          QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
             "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
            "UnitDimensions" -> {"MassUnit", 1}]^2 + 
         Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
             "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
             "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
            "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
             {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])^2, 
  HoldPattern[MathematicaFormula[{"BlackHoleEntropy", "Standard"}]] :> 
   QuantityVariable["S", "Name" -> "entropy", "PhysicalQuantity" -> 
      "Entropy", "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
    Quantity[4*Pi, ("BoltzmannConstant"*"GravitationalConstant")/
       ("ReducedPlanckConstant"*"SpeedOfLight")]*
     QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonArea", 
      "AngularMomentum"}]] :> QuantityVariable["A", 
     "Name" -> "event horizon area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == 
    4*Pi*((Quantity[None, "SpeedOfLight"^(-2)]*
        QuantityVariable["J", "Name" -> "angular momentum", 
          "PhysicalQuantity" -> "AngularMomentum", "CanonicalUnit" -> 
           {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]^2 + 
      (Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
           "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
          "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
              "Name" -> "angular momentum", "PhysicalQuantity" -> 
               "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                  "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2])^2), 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonArea", "Charge"}]] :> 
   QuantityVariable["A", "Name" -> "event horizon area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    4*Pi*((Quantity[None, "SpeedOfLight"^(-2)]*
        QuantityVariable["J", "Name" -> "angular momentum", 
          "PhysicalQuantity" -> "AngularMomentum", "CanonicalUnit" -> 
           {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]^2 + 
      (Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
           "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
          "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
              "Name" -> "angular momentum", "PhysicalQuantity" -> 
               "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                  "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
              "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
              "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
             "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])^2), 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonArea", 
      "Standard"}]] :> QuantityVariable["A", "Name" -> "event horizon area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    Quantity[16*Pi, "GravitationalConstant"^2/"SpeedOfLight"^4]*
     QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonRadius", 
      "AngularMomentum"}]] :> QuantityVariable["r", 
     "Name" -> "event horizon radius", "PhysicalQuantity" -> "Radius", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
      QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}] + Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*
         QuantityVariable["J", "Name" -> "angular momentum", 
           "PhysicalQuantity" -> "AngularMomentum", "CanonicalUnit" -> 
            {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
            {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
        QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]^2 + Quantity[1, "GravitationalConstant"^2/
          "SpeedOfLight"^4]*QuantityVariable["M", "Name" -> "mass", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^2], 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonRadius", 
      "Charge"}]] :> QuantityVariable["r", "Name" -> "event horizon radius", 
     "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
      QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}] + 
     Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
        QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]^2 + Quantity[-1/(4*Pi), "GravitationalConstant"/
          ("ElectricConstant"*"SpeedOfLight"^4)]*
        QuantityVariable["Q", "Name" -> "electric charge", 
          "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
           {HoldForm["Coulombs"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2], 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonRadius", 
      "Standard"}]] :> QuantityVariable["r", 
     "Name" -> "event horizon radius", "PhysicalQuantity" -> "Radius", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == Quantity[2, "GravitationalConstant"/
       "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BlackHoleSurfaceGravity", 
      "AngularMomentum"}]] :> QuantityVariable["k", 
     "Name" -> "surface gravity", "PhysicalQuantity" -> 
      "GravitationalAcceleration", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "SpeedOfLight"^2]*
      Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
            "Name" -> "angular momentum", "PhysicalQuantity" -> 
             "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
              {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
            "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
            "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
           "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])/
     (Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
          "SpeedOfLight"^4)]*QuantityVariable["Q", 
         "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
         "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2 + 
      Quantity[2, "GravitationalConstant"/"SpeedOfLight"^2]*
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*(Quantity[1, "GravitationalConstant"/
           "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
              "Name" -> "angular momentum", "PhysicalQuantity" -> 
               "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                  "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
              "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
              "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
             "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])), 
  HoldPattern[MathematicaFormula[{"BlackHoleSurfaceGravity", "Charge"}]] :> 
   QuantityVariable["k", "Name" -> "surface gravity", 
     "PhysicalQuantity" -> "GravitationalAcceleration", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "SpeedOfLight"^2]*
      Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
            "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
            "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
           "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])/
     (Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
          "SpeedOfLight"^4)]*QuantityVariable["Q", 
         "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
         "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2 + 
      Quantity[2, "GravitationalConstant"/"SpeedOfLight"^2]*
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*(Quantity[1, "GravitationalConstant"/
           "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
              "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
              "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
             "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])), 
  HoldPattern[MathematicaFormula[{"BlackHoleSurfaceGravity", "Standard"}]] :> 
   QuantityVariable["k", "Name" -> "surface gravity", 
     "PhysicalQuantity" -> "GravitationalAcceleration", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[1/4, "SpeedOfLight"^4/"GravitationalConstant"]/
     QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BlackHoleTemperature", 
      "AngularMomentum"}]] :> QuantityVariable["T", "Name" -> "temperature", 
     "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
      {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (Quantity[1/(2*Pi), ("ReducedPlanckConstant"*"SpeedOfLight")/
        "BoltzmannConstant"]*Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*
          QuantityVariable["J", "Name" -> "angular momentum", 
            "PhysicalQuantity" -> "AngularMomentum", "CanonicalUnit" -> 
             {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
             {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
            "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
            "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
           "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])/
     (Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
          "SpeedOfLight"^4)]*QuantityVariable["Q", 
         "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
         "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2 + 
      Quantity[2, "GravitationalConstant"/"SpeedOfLight"^2]*
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*(Quantity[1, "GravitationalConstant"/
           "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
              "Name" -> "angular momentum", "PhysicalQuantity" -> 
               "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                  "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
              "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
              "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
             "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])), 
  HoldPattern[MathematicaFormula[{"BlackHoleTemperature", "Charge"}]] :> 
   QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
      "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
     "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (Quantity[1/(2*Pi), ("ReducedPlanckConstant"*"SpeedOfLight")/
        "BoltzmannConstant"]*
      Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
            "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
            "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
           "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
            {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])/
     (Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
          "SpeedOfLight"^4)]*QuantityVariable["Q", 
         "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
         "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2 + 
      Quantity[2, "GravitationalConstant"/"SpeedOfLight"^2]*
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*(Quantity[1, "GravitationalConstant"/
           "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
              "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
              "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
             "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])), 
  HoldPattern[MathematicaFormula[{"BlackHoleTemperature", "Standard"}]] :> 
   QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
      "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
     "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    Quantity[1/(8*Pi), ("ReducedPlanckConstant"*"SpeedOfLight"^3)/
       ("BoltzmannConstant"*"GravitationalConstant")]/
     QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BloodGlucose", "MeanPlasmaGlucose"}]] :> 
   QuantityVariable[Subscript["Hb", "A1c"], 
     "Name" -> "glycosylated hemoglobin", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    Quantity[0.03484320557491289, "Percent"]*
     (46.7`3. + Quantity[None, "Deciliters"/"Milligrams"]*
       QuantityVariable["MPG", "Name" -> "mean plasma glucose", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Milligrams"/"Deciliters"]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"BloodGlucose", 
      "MeanPlasmaGlucoseMolarity"}]] :> 
   QuantityVariable[Subscript["Hb", "A1c"], 
     "Name" -> "glycosylated hemoglobin", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    Quantity[0.6289308176100628930817610062893081761`3., "Percent"]*
     (2.59 + Quantity[None, "Liters"/"Millimoles"]*QuantityVariable["MPGM", 
        "Name" -> Row[{"mean plasma glucose ", Row[{"(", "molarity", ")"}]}, 
          "\[InvisibleSpace]"], "PhysicalQuantity" -> "Molarity", 
        "CanonicalUnit" -> {HoldForm["Millimoles"/"Liters"]}, 
        "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]), 
  HoldPattern[MathematicaFormula[{"BodensteinNumber", 
      "ThermalConductivity"}]] :> 
   QuantityVariable["Bo", "Name" -> "Bodenstein number", 
     "PhysicalQuantity" -> "BodensteinNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["k", "Name" -> "thermal conductivity", 
      "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]/
     (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
       "Name" -> "characteristic length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["v", 
       "Name" -> "characteristic speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"BodensteinNumber", 
      "ThermalDiffusivity"}]] :> 
   QuantityVariable["Bo", "Name" -> "Bodenstein number", 
     "PhysicalQuantity" -> "BodensteinNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Alpha]", "Name" -> "thermal diffusivity", 
      "PhysicalQuantity" -> "ThermalDiffusivity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}]/
     (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"BoilingPointElevation", 
      "SolventProperties"}]] :> 
   QuantityVariable[Subscript["\[CapitalDelta]\[InvisibleSpace]T", "b"], 
     "Name" -> "boiling point elevation", "PhysicalQuantity" -> 
      "TemperatureDifference", "CanonicalUnit" -> 
      {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
      {"TemperatureDifferenceUnit", 1}] == 
    (Quantity[None, "MolarGasConstant"]*QuantityVariable["m", 
       "Name" -> "solution molality", "PhysicalQuantity" -> "Molality", 
       "CanonicalUnit" -> {HoldForm["Moles"/"Kilograms"]}, 
       "UnitDimensions" -> {{"AmountUnit", 1}, {"MassUnit", -1}}]*
      QuantityVariable["M", "Name" -> "solvent molar mass", 
       "PhysicalQuantity" -> "MolarMass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Moles"]}, "UnitDimensions" -> 
        {{"AmountUnit", -1}, {"MassUnit", 1}}]*
      QuantityVariable[Subscript["T", "b"], "Name" -> 
         "solvent boiling point", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]^2)/QuantityVariable[
      Subscript["\[CapitalDelta]\[InvisibleSpace]H", "vap"], 
      "Name" -> "solvent molar enthalpy of vaporization", 
      "PhysicalQuantity" -> "MolarEnergy", "CanonicalUnit" -> 
       {HoldForm["Kilojoules"/"Moles"]}, "UnitDimensions" -> 
       {{"AmountUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"BoilingPointElevation", "Standard"}]] :> 
   QuantityVariable[Subscript["\[CapitalDelta]\[InvisibleSpace]T", "b"], 
     "Name" -> "boiling point elevation", "PhysicalQuantity" -> 
      "TemperatureDifference", "CanonicalUnit" -> 
      {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
      {"TemperatureDifferenceUnit", 1}] == 
    QuantityVariable["m", "Name" -> "solution molality", 
      "PhysicalQuantity" -> "Molality", "CanonicalUnit" -> 
       {HoldForm["Moles"/"Kilograms"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"MassUnit", -1}}]*QuantityVariable[
      Subscript["K", "b"], "Name" -> "ebullioscopic constant", 
      "PhysicalQuantity" -> "MolalBoilingPointElevationConstant", 
      "CanonicalUnit" -> {HoldForm[("KelvinsDifference"*"Kilograms")/
          "Moles"]}, "UnitDimensions" -> {{"AmountUnit", -1}, 
        {"MassUnit", 1}, {"TemperatureDifferenceUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"BondDuration", "MacaulayDuration"}]] :> 
   QuantityVariable["D", "Name" -> "duration", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]*QuantityVariable["f", "Name" -> "coupon frequency", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
    (-QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2 + QuantityVariable["n", 
        "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]*QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]) - QuantityVariable["f", 
        "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["r", "c"], "Name" -> "annual coupon rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["f", "Name" -> "coupon frequency", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable[Subscript["r", "c"], 
        "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Alpha]", 
        "Name" -> "fraction of year until next coupon", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 
        (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> "number of whole coupon periods", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
          Subscript["r", "c"], "Name" -> "annual coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
     (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
       (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])*QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"BondDuration", "ModifiedDuration"}]] :> 
   (QuantityVariable["f", "Name" -> "coupon frequency", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])*
     QuantityVariable[Subscript["D", "m"], "Name" -> "modified duration", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
    (-QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2 + QuantityVariable["n", 
        "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]*QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]) - QuantityVariable["f", 
        "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["r", "c"], "Name" -> "annual coupon rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["f", "Name" -> "coupon frequency", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable[Subscript["r", "c"], 
        "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Alpha]", 
        "Name" -> "fraction of year until next coupon", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 
        (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> "number of whole coupon periods", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
          Subscript["r", "c"], "Name" -> "annual coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
     (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
       (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])*QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"BoseCondensationTemperature", 
      "NumberDensity"}]] :> QuantityVariable[Subscript["T", "c"], 
     "Name" -> "Bose condensation temperature", "PhysicalQuantity" -> 
      "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
     "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (Quantity[(2*Pi)/Zeta[3/2]^(2/3), "ReducedPlanckConstant"^2/
        "BoltzmannConstant"]*(QuantityVariable["n", 
         "Name" -> "boson number density", "PhysicalQuantity" -> 
          "InverseVolume", "CanonicalUnit" -> {HoldForm[1/"Meters"^3]}, 
         "UnitDimensions" -> {"LengthUnit", -3}]/
        (1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))^(2/3))/
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BoseCondensationTemperature", 
      "Pressure"}]] :> QuantityVariable[Subscript["T", "c"], 
     "Name" -> "Bose condensation temperature", "PhysicalQuantity" -> 
      "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
     "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (Quantity[(2*Pi)/Zeta[3/2]^(2/3), "ReducedPlanckConstant"^2/
        "BoltzmannConstant"]*((Quantity[1, "BoltzmannConstant"^(-1)]*
         QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
           "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
          "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
            {"TimeUnit", -2}}])/((1 + 2*QuantityVariable["s", 
            "Name" -> "particle spin", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])*QuantityVariable[Subscript["T", "c"], 
          "Name" -> "Bose condensation temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}]))^(2/3))/
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BoseCondensationTemperature", 
      "Volume"}]] :> QuantityVariable[Subscript["T", "c"], 
     "Name" -> "Bose condensation temperature", "PhysicalQuantity" -> 
      "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
     "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (Quantity[(2*Pi)/Zeta[3/2]^(2/3), "ReducedPlanckConstant"^2/
        "BoltzmannConstant"]*(QuantityVariable["N", 
         "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
        ((1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])*QuantityVariable["V", 
          "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
          "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
           {"LengthUnit", 3}]))^(2/3))/QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BoussinesqApproximationParameter", 
      "ApproximatedAccelerationOfGravity"}]] :> 
   QuantityVariable["Bs", "Name" -> "Boussinesq approximation parameter", 
     "PhysicalQuantity" -> "BoussinesqApproximationParameter", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    Quantity[None, "StandardAccelerationOfGravity"^(-1)]*
     QuantityVariable[Subscript["g", "2"], 
      "Name" -> "approximated gravitational acceleration", 
      "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"BoussinesqApproximationParameter", 
      "FluidDensities"}]] :> QuantityVariable["Bs", 
     "Name" -> "Boussinesq approximation parameter", 
     "PhysicalQuantity" -> "BoussinesqApproximationParameter", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (-QuantityVariable[Subscript["\[Rho]", "1"], 
        "Name" -> "warm water density", "PhysicalQuantity" -> "MassDensity", 
        "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
        "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
      QuantityVariable[Subscript["\[Rho]", "2"], 
       "Name" -> "cold water density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Rho]", "Name" -> "reference fluid density", 
      "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
       {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
       {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"BraggsLaw", "Energy"}]] :> 
   {QuantityVariable["n", "Name" -> "order", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["\[Lambda]", 
       "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
       "CanonicalUnit" -> {HoldForm["Nanometers"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}] == 2*QuantityVariable["d", 
       "Name" -> "plane spacing", "PhysicalQuantity" -> "Distance", 
       "CanonicalUnit" -> {HoldForm["Nanometers"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*Sin[QuantityVariable["\[Theta]", 
        "Name" -> "Bragg angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
        "UnitDimensions" -> {"AngleUnit", 1}]], 
    QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Nanometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     Quantity[1, "PlanckConstant"*"SpeedOfLight"]/QuantityVariable["E", 
       "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
       "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula[{"BraggsLaw", "Standard"}]] :> 
   QuantityVariable["n", "Name" -> "order", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Nanometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    2*QuantityVariable["d", "Name" -> "plane spacing", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Nanometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     Sin[QuantityVariable["\[Theta]", "Name" -> "Bragg angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"BrownellKatzNumber", "BondNumber"}]] :> 
   QuantityVariable["BK", "Name" -> "Brownell Katz number", 
     "PhysicalQuantity" -> "BrownellKatzNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["Bo", "Name" -> "Bond number", "PhysicalQuantity" -> 
       "BondNumber", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
      Subscript["Ca", 1], "Name" -> "first capillary number", 
      "PhysicalQuantity" -> "CapillaryNumber1", "CanonicalUnit" -> 
       {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BrownellKatzNumber", "Viscosity"}]] :> 
   QuantityVariable["BK", "Name" -> "Brownell Katz number", 
     "PhysicalQuantity" -> "BrownellKatzNumber", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["w", "Name" -> "flow velocity", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["\[Eta]", 
       "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
        "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "fluid density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Gamma]", "Name" -> "surface tension", 
       "PhysicalQuantity" -> "SurfaceTension", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}]^2, 
  HoldPattern[MathematicaFormula[{"CapacitiveReactance", 
      "AngularFrequency"}]] :> QuantityVariable[Subscript["X", "C"], 
     "Name" -> "capacitive reactance", "PhysicalQuantity" -> 
      "ElectricReactance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
       {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    1/(QuantityVariable["C", "Name" -> "electric capacitance", 
       "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
        {HoldForm["Farads"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]*QuantityVariable["\[Omega]", 
       "Name" -> "angular frequency", "PhysicalQuantity" -> 
        "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"CapacitiveReactance", 
      "CircuitFrequency"}]] :> QuantityVariable[Subscript["X", "C"], 
     "Name" -> "capacitive reactance", "PhysicalQuantity" -> 
      "ElectricReactance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
       {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    1/(2*Pi*QuantityVariable["C", "Name" -> "electric capacitance", 
       "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
        {HoldForm["Farads"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]), 
  HoldPattern[MathematicaFormula[{"CarnotCycle", "HeatEngine"}]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - QuantityVariable[Subscript["T", "c"], 
       "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]/QuantityVariable[
       Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CarnotCycle", "HeatPump"}]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["T", "h"], 
      "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}]/
     (-QuantityVariable[Subscript["T", "c"], "Name" -> 
         "cold reservoir temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}] + QuantityVariable[Subscript["T", "h"], 
       "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"CarnotCycle", "Refrigerator"}]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["T", "c"], 
      "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}]/
     (-QuantityVariable[Subscript["T", "c"], "Name" -> 
         "cold reservoir temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}] + QuantityVariable[Subscript["T", "h"], 
       "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"CasimirEffect", "Force"}]] :> 
   QuantityVariable[Subscript["F", "C"], "Name" -> "Casimir force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Dynes"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (Quantity[Pi^2/240, "ReducedPlanckConstant"*"SpeedOfLight"]*
      QuantityVariable["A", "Name" -> "plate area", "PhysicalQuantity" -> 
        "Area", "CanonicalUnit" -> {HoldForm["Centimeters"^2]}, 
       "UnitDimensions" -> {"LengthUnit", 2}])/
     QuantityVariable["a", "Name" -> "plate separation", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4, 
  HoldPattern[MathematicaFormula[{"CasimirEffect", "Pressure"}]] :> 
   QuantityVariable[Subscript["F", "C"]/"A", "Name" -> "Casimir pressure", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["Dynes"/"Centimeters"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[Pi^2/240, "ReducedPlanckConstant"*"SpeedOfLight"]/
     QuantityVariable["a", "Name" -> "plate separation", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4, 
  HoldPattern[MathematicaFormula[{"CentripetalAcceleration", 
      "AngularVelocity"}]] :> QuantityVariable["a", 
     "Name" -> "centripetal acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["\[Omega]", 
       "Name" -> "angular velocity", "PhysicalQuantity" -> "AngularVelocity", 
       "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
       "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"CentripetalAcceleration", 
      "RotationSpeed"}]] :> QuantityVariable["a", 
     "Name" -> "centripetal acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["v", "Name" -> "rotation speed", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2/
     QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CentripetalForce", "AngularVelocity"}]] :> 
   QuantityVariable["F", "Name" -> "centripetal force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == Quantity[None, "Radians"^(-2)]*
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["\[Omega]", "Name" -> "angular velocity", 
       "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"CentripetalForce", "RotationSpeed"}]] :> 
   QuantityVariable["F", "Name" -> "centripetal force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (QuantityVariable["m", "Name" -> "mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable["v", "Name" -> "rotation speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/QuantityVariable["r", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CircularCurrentLoop", "Distance"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[1/2, "MagneticConstant"]*QuantityVariable["I", 
       "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
       "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
        {"ElectricCurrentUnit", 1}]*QuantityVariable["R", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/
     (QuantityVariable["d", "Name" -> "distance from the circle", 
         "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
          "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2)^(3/2), 
  HoldPattern[MathematicaFormula[{"CircularCurrentLoop", "Loops"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[1/2, "MagneticConstant"]*QuantityVariable["I", 
       "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
       "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
        {"ElectricCurrentUnit", 1}]*QuantityVariable["N", 
       "Name" -> "coil turns", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CircularCurrentLoop", "Standard"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[1/2, "MagneticConstant"]*QuantityVariable["I", 
       "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
       "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
        {"ElectricCurrentUnit", 1}])/QuantityVariable["R", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CircularOrbitInMagneticField", 
      "Momentum"}]] :> QuantityVariable["r", "Name" -> "radius", 
     "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
       "Momentum", "CanonicalUnit" -> 
       {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TimeUnit", -1}}]/(QuantityVariable["B", 
       "Name" -> "magnetic induction", "PhysicalQuantity" -> 
        "MagneticInduction", "CanonicalUnit" -> {HoldForm["Teslas"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}]*QuantityVariable["q", 
       "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
       "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"CircularOrbitInMagneticField", 
      "Speed"}]] :> QuantityVariable["r", "Name" -> "radius", 
     "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["B", "Name" -> "magnetic induction", 
       "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
        {HoldForm["Teslas"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["q", "Name" -> "electric charge", 
       "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
        {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"CircularOrbitSpeed", "Altitude"}]] :> 
   QuantityVariable[Subscript["v", "c"], "Name" -> "circular velocity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(Quantity[None, "GravitationalConstant"]*QuantityVariable["m", 
        "Name" -> "mass of orbit center", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}])/(QuantityVariable["h", "Name" -> "altitude", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
       QuantityVariable[Subscript["r", "cb"], "Name" -> 
         "radius of central body", "PhysicalQuantity" -> "Radius", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula[{"CircularOrbitSpeed", "OrbitRadius"}]] :> 
   QuantityVariable[Subscript["v", "c"], "Name" -> "circular velocity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(Quantity[None, "GravitationalConstant"]*QuantityVariable["m", 
        "Name" -> "mass of orbit center", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}])/QuantityVariable["r", "Name" -> "orbital radius", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"ColebrookWhiteEquation", 
      "DarcyWeisbachFrictionFactor"}]] :> 
   1/Sqrt[QuantityVariable["\[Lambda]", "Name" -> 
        "Darcy\[Hyphen]Weisbach friction factor", "PhysicalQuantity" -> 
        "DarcyWeisbachFrictionFactor", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]] == 
    (-2*Log[0.27027027027027023*QuantityVariable["K", 
          "Name" -> "relative pipe roughness", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + 2.51/(QuantityVariable["Re", 
           "Name" -> "Reynolds number", "PhysicalQuantity" -> 
            "ReynoldsNumber", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]*Sqrt[QuantityVariable[
            "\[Lambda]", "Name" -> "Darcy\[Hyphen]Weisbach friction factor", 
            "PhysicalQuantity" -> "DarcyWeisbachFrictionFactor", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]])])/Log[10], 
  HoldPattern[MathematicaFormula[{"ColebrookWhiteEquation", 
      "PipeRoughnessHeight"}]] :> 
   QuantityVariable["K", "Name" -> "relative pipe roughness", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Epsilon]", "Name" -> "pipe roughness height", 
      "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["D", "Name" -> "hydraulic diameter", 
      "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ComptonShift", "Wavelengths"}]] :> 
   -QuantityVariable["\[Lambda]", "Name" -> "incident wavelength", 
       "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
     QuantityVariable[Superscript["\[Lambda]", "\[Prime]"], 
      "Name" -> "scattered wavelength", "PhysicalQuantity" -> 
       "LightWavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
    ((1 - Cos[QuantityVariable["\[Theta]", "Name" -> "scattering angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
          {"AngleUnit", 1}]])*Quantity[1, "PlanckConstant"/"SpeedOfLight"])/
     QuantityVariable["m", "Name" -> "mass of particle", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ComptonShift", "WavelengthShift"}]] :> 
   QuantityVariable["\[CapitalDelta]\[InvisibleSpace]\[Lambda]", 
     "Name" -> "wavelength shift", "PhysicalQuantity" -> "Wavelength", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    ((1 - Cos[QuantityVariable["\[Theta]", "Name" -> "scattering angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
          {"AngleUnit", 1}]])*Quantity[None, "PlanckConstant"/
        "SpeedOfLight"])/QuantityVariable["m", "Name" -> "mass of particle", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CoriolisEffect", "Force"}]] :> 
   {QuantityVariable[Subscript["a", "C"], "Name" -> "Coriolis acceleration", 
      "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     2*QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Omega]", "Name" -> 
        "angular velocity of the reference frame", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["F", "C"], "Name" -> "Coriolis force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable[Subscript["a", "C"], 
       "Name" -> "Coriolis acceleration", "PhysicalQuantity" -> 
        "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula[{"CoriolisEffect", "Standard"}]] :> 
   QuantityVariable[Subscript["a", "C"], "Name" -> "Coriolis acceleration", 
     "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    2*QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
     QuantityVariable["\[Omega]", "Name" -> 
       "angular velocity of the reference frame", "PhysicalQuantity" -> 
       "AngularVelocity", "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
      "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"CorrectiveLensFarsighted", 
      "LensDiopter"}]] :> 
   -QuantityVariable[Subscript["d", "min"], "Name" -> 
         "shortest distance at which a farsighted person can read without \
glasses", "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
     QuantityVariable[Subscript["d", "n"], "Name" -> 
        "comfortable reading distance in normal vision", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
    Quantity[None, "Meters"^(-1)]*QuantityVariable["C", 
      "Name" -> "lens power", "PhysicalQuantity" -> "OpticalPower", 
      "CanonicalUnit" -> {HoldForm["Diopters"]}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"CorrectiveLensFarsighted", 
      "OSDLensDiopter"}]] :> 
   -QuantityVariable[Subscript["d", "min"], "Name" -> 
         "shortest distance at which a farsighted person can read without \
glasses", "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
     QuantityVariable[Subscript["d", "n"], "Name" -> 
        "comfortable reading distance in normal vision", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
    Quantity[None, "Meters"^(-1)]*QuantityVariable["C", 
      "Name" -> "spherical component of lens prescription", 
      "PhysicalQuantity" -> "OpticalPower", "CanonicalUnit" -> 
       {HoldForm["Diopters"]}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"CorrectiveLensShortsighted", 
      "LensDiopter"}]] :> 
   -QuantityVariable[Subscript["d", "max"], "Name" -> 
        "far point for nearsighted vision", "PhysicalQuantity" -> "Distance", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]^(-1) == Quantity[None, "Meters"^(-1)]*
     QuantityVariable["C", "Name" -> "lens power", "PhysicalQuantity" -> 
       "OpticalPower", "CanonicalUnit" -> {HoldForm["Diopters"]}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"CorrectiveLensShortsighted", 
      "OSDLensDiopter"}]] :> 
   -QuantityVariable[Subscript["d", "max"], "Name" -> 
        "far point for nearsighted vision", "PhysicalQuantity" -> "Distance", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]^(-1) == Quantity[None, "Meters"^(-1)]*
     QuantityVariable["C", "Name" -> 
       "spherical component of lens prescription", "PhysicalQuantity" -> 
       "OpticalPower", "CanonicalUnit" -> {HoldForm["Diopters"]}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"CriticalEulerBucklingForce", 
      "ColumnLength"}]] :> QuantityVariable[Subscript["F", "cr"], 
     "Name" -> "critical load", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Pi^2*QuantityVariable["E", "Name" -> "Young's modulus", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["J", 
       "Name" -> "second moment of area", "PhysicalQuantity" -> 
        "SecondMomentOfArea", "CanonicalUnit" -> {HoldForm["Meters"^4]}, 
       "UnitDimensions" -> {"LengthUnit", 4}])/
     QuantityVariable["L", "Name" -> "length of column", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"CriticalEulerBucklingForce", 
      "EffectiveColumnLength"}]] :> QuantityVariable[Subscript["F", "cr"], 
     "Name" -> "critical load", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Pi^2*QuantityVariable["E", "Name" -> "Young's modulus", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["J", 
       "Name" -> "second moment of area", "PhysicalQuantity" -> 
        "SecondMomentOfArea", "CanonicalUnit" -> {HoldForm["Meters"^4]}, 
       "UnitDimensions" -> {"LengthUnit", 4}])/
     QuantityVariable[Subscript["L", "eff"], 
       "Name" -> "column effective length", "PhysicalQuantity" -> "Height", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"CriticalEulerBucklingForce", 
      "EffectiveColumnLengthFactor"}]] :> 
   QuantityVariable[Subscript["F", "cr"], "Name" -> "critical load", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (Pi^2*QuantityVariable["E", "Name" -> "Young's modulus", 
       "PhysicalQuantity" -> "YoungsModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["J", 
       "Name" -> "second moment of area", "PhysicalQuantity" -> 
        "SecondMomentOfArea", "CanonicalUnit" -> {HoldForm["Meters"^4]}, 
       "UnitDimensions" -> {"LengthUnit", 4}])/
     (QuantityVariable["K", "Name" -> "column effective length factor", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^2*
      QuantityVariable["L", "Name" -> "length of column", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula[{"CrossCountrySkiing", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CrossCountrySkiing", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"CuboidVolumeDepth", "Area"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 2}]*QuantityVariable["H", 
      "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CuboidVolumeDepth", "LengthDepth"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable["D", "Name" -> "depth", "PhysicalQuantity" -> "Depth", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["H", 
      "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["L", 
      "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CuboidVolumeWidth", "Area"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 2}]*QuantityVariable["H", 
      "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CuboidVolumeWidth", "LengthWidth"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["L", 
      "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["W", 
      "Name" -> "width", "PhysicalQuantity" -> "Width", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"CylinderMechanicalStress", 
      "Diameter"}]] :> QuantityVariable["\[Sigma]", 
     "Name" -> "mechanical stress", "PhysicalQuantity" -> "Stress", 
     "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
      {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (4*QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> 
        "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}])/(Pi*QuantityVariable["d", "Name" -> "diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula[{"CylinderMechanicalStress", "Radius"}]] :> 
   QuantityVariable["\[Sigma]", "Name" -> "mechanical stress", 
     "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     (Pi*QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
         "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula[{"DarcysLaw", "HydraulicGradient"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
       {"LengthUnit", 2}]*QuantityVariable["i", 
      "Name" -> "hydraulic gradient", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["K", "Name" -> "hydraulic conductivity", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Centimeters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DarcysLaw", "PressureDifference"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    -((QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
        "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
         {"LengthUnit", 2}]*QuantityVariable[
        "\[CapitalDelta]\[InvisibleSpace]P", "Name" -> "pressure difference", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["\[Kappa]", 
        "Name" -> "intrinsic permeability of medium", "PhysicalQuantity" -> 
         "HydraulicPermeability", "CanonicalUnit" -> {HoldForm["Darcys"]}, 
        "UnitDimensions" -> {"LengthUnit", 2}])/
      (QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Eta]", 
        "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
         "DynamicViscosity", "CanonicalUnit" -> 
         {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])), 
  HoldPattern[MathematicaFormula[{"DataSpeed", "DataRate"}]] :> 
   QuantityVariable["I", "Name" -> "data", "PhysicalQuantity" -> 
      "Information", "CanonicalUnit" -> {HoldForm["Bits"]}, 
     "UnitDimensions" -> {"InformationUnit", 1}] == 
    QuantityVariable["R", "Name" -> "data rate", "PhysicalQuantity" -> 
       "InformationRate", "CanonicalUnit" -> {HoldForm["Bits"/"Seconds"]}, 
      "UnitDimensions" -> {{"InformationUnit", 1}, {"TimeUnit", -1}}]*
     QuantityVariable["T", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DataSpeed", "DownstreamRate"}]] :> 
   QuantityVariable["I", "Name" -> "data", "PhysicalQuantity" -> 
      "Information", "CanonicalUnit" -> {HoldForm["Bits"]}, 
     "UnitDimensions" -> {"InformationUnit", 1}] == 
    QuantityVariable["T", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["uR", "Name" -> "upstream bitrate", 
      "PhysicalQuantity" -> "InformationRate", "CanonicalUnit" -> 
       {HoldForm["Bits"/"Seconds"]}, "UnitDimensions" -> 
       {{"InformationUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DataSpeed", "UpstreamRate"}]] :> 
   QuantityVariable["I", "Name" -> "data", "PhysicalQuantity" -> 
      "Information", "CanonicalUnit" -> {HoldForm["Bits"]}, 
     "UnitDimensions" -> {"InformationUnit", 1}] == 
    QuantityVariable["dR", "Name" -> "downstream bitrate", 
      "PhysicalQuantity" -> "InformationRate", "CanonicalUnit" -> 
       {HoldForm["Bits"/"Seconds"]}, "UnitDimensions" -> 
       {{"InformationUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["T", 
      "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DeborahNumber", "MixingTime"}]] :> 
   QuantityVariable["De", "Name" -> "Deborah number", 
     "PhysicalQuantity" -> "DeborahNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["\[Tau]", "mix"], "Name" -> "mixing time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]/QuantityVariable[
      Subscript["\[Tau]", "pol"], "Name" -> "polymerization time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DeborahNumber", "MolecularTimescale"}]] :> 
   QuantityVariable["De", "Name" -> "Deborah number", 
     "PhysicalQuantity" -> "DeborahNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["\[Tau]", "m"], "Name" -> "molecular time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
       {HoldForm["Nanoseconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]/
     QuantityVariable[Subscript["t", "p"], "Name" -> "observation timescale", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DeborahNumber", 
      "RelaxationTimescale"}]] :> 
   QuantityVariable["De", "Name" -> "Deborah number", 
     "PhysicalQuantity" -> "DeborahNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["t", "c"], "Name" -> "relaxation timescale", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]/QuantityVariable[
      Subscript["t", "p"], "Name" -> "observation timescale", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DefrostingTime", "Air"}]] :> 
   QuantityVariable[Subscript["t", "R"], 
     "Name" -> "thawing time in a refrigerator", "PhysicalQuantity" -> 
      "Time", "CanonicalUnit" -> {HoldForm["Days"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == Quantity[1/5, "Days"/"Pounds"]*
     QuantityVariable["W", "Name" -> "weight of meat", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DefrostingTime", "Water"}]] :> 
   QuantityVariable[Subscript["t", "CW"], 
     "Name" -> "thawing time in a cold water bath", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Hours"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == Quantity[30, "Minutes"/"Pounds"]*
     QuantityVariable["W", "Name" -> "weight of meat", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DeLavalNozzle", "HeatCapacities"}]] :> 
   QuantityVariable[Subscript["v", "e"], "Name" -> "exhaust gas velocity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[2]*Sqrt[(Quantity[None, "MolarGasConstant"]*QuantityVariable["T", 
         "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]*QuantityVariable[Subscript["C", "p"], 
         "Name" -> "isobaric heat capacity", "PhysicalQuantity" -> 
          "HeatCapacity", "CanonicalUnit" -> 
          {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
            -1}, {"TimeUnit", -2}}]*
        (1 - (QuantityVariable[Subscript["P", "e"], "Name" -> 
             "exhaust gas pressure", "PhysicalQuantity" -> "Pressure", 
            "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
             {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
           QuantityVariable["P", "Name" -> "inlet gas pressure", 
            "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
             {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}])^
          ((QuantityVariable[Subscript["C", "p"], "Name" -> 
              "isobaric heat capacity", "PhysicalQuantity" -> "HeatCapacity", 
             "CanonicalUnit" -> {HoldForm["Joules"/"KelvinsDifference"]}, 
             "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, {
                "TemperatureDifferenceUnit", -1}, {"TimeUnit", -2}}] - 
            QuantityVariable[Subscript["C", "V"], "Name" -> 
              "isochoric heat capacity", "PhysicalQuantity" -> 
              "HeatCapacity", "CanonicalUnit" -> {HoldForm["Joules"/
                 "KelvinsDifference"]}, "UnitDimensions" -> {{"LengthUnit", 
                2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", -1}, {
                "TimeUnit", -2}}])/QuantityVariable[Subscript["C", "p"], 
            "Name" -> "isobaric heat capacity", "PhysicalQuantity" -> 
             "HeatCapacity", "CanonicalUnit" -> {HoldForm["Joules"/
                "KelvinsDifference"]}, "UnitDimensions" -> 
             {{"LengthUnit", 2}, {"MassUnit", 1}, 
              {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -2}}])))/
       (QuantityVariable["m", "Name" -> "molar mass", "PhysicalQuantity" -> 
          "MolarMass", "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
         "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]*
        (QuantityVariable[Subscript["C", "p"], "Name" -> 
           "isobaric heat capacity", "PhysicalQuantity" -> "HeatCapacity", 
          "CanonicalUnit" -> {HoldForm["Joules"/"KelvinsDifference"]}, 
          "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -2}}] - 
         QuantityVariable[Subscript["C", "V"], "Name" -> 
           "isochoric heat capacity", "PhysicalQuantity" -> "HeatCapacity", 
          "CanonicalUnit" -> {HoldForm["Joules"/"KelvinsDifference"]}, 
          "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -2}}]))], 
  HoldPattern[MathematicaFormula[{"DeLavalNozzle", "HeatCapacityRatio"}]] :> 
   QuantityVariable[Subscript["v", "e"], "Name" -> "exhaust gas velocity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[2]*Sqrt[(Quantity[None, "MolarGasConstant"]*QuantityVariable["T", 
         "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
         "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]*QuantityVariable["\[Gamma]", 
         "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
          "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (1 - (QuantityVariable[Subscript["P", "e"], "Name" -> 
             "exhaust gas pressure", "PhysicalQuantity" -> "Pressure", 
            "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
             {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
           QuantityVariable["P", "Name" -> "inlet gas pressure", 
            "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
             {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}])^
          ((-1 + QuantityVariable["\[Gamma]", "Name" -> 
              "heat capacity ratio", "PhysicalQuantity" -> 
              "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
             "UnitDimensions" -> "Dimensionless"])/QuantityVariable[
            "\[Gamma]", "Name" -> "heat capacity ratio", 
            "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
             {"Unities"}, "UnitDimensions" -> "Dimensionless"])))/
       (QuantityVariable["m", "Name" -> "molar mass", "PhysicalQuantity" -> 
          "MolarMass", "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
         "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]*
        (-1 + QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
          "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
           {"Unities"}, "UnitDimensions" -> "Dimensionless"]))], 
  HoldPattern[MathematicaFormula[{"DiabetesDoseAdjustmentTravel", 
      "TimeZonesCrossedEast"}]] :> 
   QuantityVariable["adi", "Name" -> Row[{"adjusted insulin dose ", 
        Row[{"(", "day of travel", ")"}]}], "PhysicalQuantity" -> "Insulin", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit[
         "international units of insulin"]], "Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["di", "Name" -> "total daily dose of insulin", 
       "PhysicalQuantity" -> "Insulin", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["international units of insulin"]], 
         "Unities"}, "UnitDimensions" -> "Dimensionless"]*
      (24 - QuantityVariable["te", "Name" -> Row[{"time zones crossed ", 
           Row[{"(", "traveling east", ")"}]}], "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]))/24, 
  HoldPattern[MathematicaFormula[{"DiabetesDoseAdjustmentTravel", 
      "TimeZonesCrossedWest"}]] :> 
   QuantityVariable["adi", "Name" -> Row[{"adjusted insulin dose ", 
        Row[{"(", "day of travel", ")"}]}], "PhysicalQuantity" -> "Insulin", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit[
         "international units of insulin"]], "Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["di", "Name" -> "total daily dose of insulin", 
       "PhysicalQuantity" -> "Insulin", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["international units of insulin"]], 
         "Unities"}, "UnitDimensions" -> "Dimensionless"]*
      (24 + QuantityVariable["tw", "Name" -> Row[{"time zones crossed ", 
           Row[{"(", "traveling west", ")"}]}], "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]))/24, 
  HoldPattern[MathematicaFormula[{"DiffractionGrating", 
      "GratingIncidenceAngle"}]] :> 
   QuantityVariable["d", "Name" -> "slit separation distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     (Sin[QuantityVariable["\[Alpha]", "Name" -> "incidence angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]] + 
      Sin[QuantityVariable[Subscript["\[Theta]", "m"], 
        "Name" -> "diffraction angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]) == 
    QuantityVariable["m", "Name" -> "diffraction order", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Lambda]", 
      "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DiffractionGrating", "Standard"}]] :> 
   QuantityVariable["d", "Name" -> "slit separation distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     Sin[QuantityVariable[Subscript["\[Theta]", "m"], 
       "Name" -> "diffraction angle", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
       "UnitDimensions" -> {"AngleUnit", 1}]] == 
    QuantityVariable["m", "Name" -> "diffraction order", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Lambda]", 
      "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DilutionEquation", "Solution"}]] :> 
   QuantityVariable[Subscript["C", "i"], "Name" -> "initial concentration", 
      "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
       {HoldForm["Molar"]}, "UnitDimensions" -> {{"AmountUnit", 1}, 
        {"LengthUnit", -3}}]*QuantityVariable[Subscript["V", "i"], 
      "Name" -> "initial volume", "PhysicalQuantity" -> "Volume", 
      "CanonicalUnit" -> {HoldForm["Milliliters"]}, "UnitDimensions" -> 
       {"LengthUnit", 3}] == QuantityVariable[Subscript["C", "f"], 
      "Name" -> "final concentration", "PhysicalQuantity" -> "Molarity", 
      "CanonicalUnit" -> {HoldForm["Molar"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
      Subscript["V", "f"], "Name" -> "final volume (total)", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}], 
  HoldPattern[MathematicaFormula[{"DiscountedSecurity", 
      "DayCountConvention"}]] :> 
   QuantityVariable["P", "Name" -> "settlement price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 - QuantityVariable["d", "Name" -> "rate of discount", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
        Subscript["t", "SM"], "Name" -> "years from settlement to maturity", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
      Subscript["V", "r"], "Name" -> "redemption value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DiscountedSecurity", "Standard"}]] :> 
   QuantityVariable["P", "Name" -> "settlement price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 - QuantityVariable["d", "Name" -> "rate of discount", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
        Subscript["t", "SM"], "Name" -> "years from settlement to maturity", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
      Subscript["V", "r"], "Name" -> "redemption value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DiskAreaMomentOfInertia", "Diameter"}]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^4)/64, 
  HoldPattern[MathematicaFormula[{"DiskAreaMomentOfInertia", "Radius"}]] :> 
   QuantityVariable["J", "Name" -> "second moment of area", 
     "PhysicalQuantity" -> "SecondMomentOfArea", "CanonicalUnit" -> 
      {HoldForm["Meters"^4]}, "UnitDimensions" -> {"LengthUnit", 4}] == 
    (Pi*QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
         "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^4)/4, 
  HoldPattern[MathematicaFormula[{"DiskSelfCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    8*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Epsilon]", 
      "Name" -> "permittivity of insulator", "PhysicalQuantity" -> 
       "ElectricPermittivity", "CanonicalUnit" -> 
       {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
        {"TimeUnit", 4}}], 
  HoldPattern[MathematicaFormula[{"DiskSelfCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[8, "ElectricConstant"]*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable[Subscript["\[Epsilon]", "r"], 
      "Name" -> "relative permittivity", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"DiskSelfCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[8, "ElectricConstant"]*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTime", "Acceleration"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
        "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}]^2)/2, 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTime", "ConstantSpeed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTime", 
      "InitialPosition"}]] :> QuantityVariable[Subscript["x", "f"], 
     "Name" -> "final position", "PhysicalQuantity" -> "Length", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
      QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
     QuantityVariable[Subscript["x", "i"], "Name" -> "initial position", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTimeCircularForm", 
      "AngularAcceleration"}]] :> QuantityVariable["\[Theta]", 
     "Name" -> "angular displacement", "PhysicalQuantity" -> "Angle", 
     "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
      {"AngleUnit", 1}] == 
    (QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}]^2*QuantityVariable["\[Alpha]", 
       "Name" -> "angular acceleration", "PhysicalQuantity" -> 
        "AngularAcceleration", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -2}}])/2, 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTimeCircularForm", 
      "ConstantSpeed"}]] :> QuantityVariable["\[Theta]", 
     "Name" -> "angular displacement", "PhysicalQuantity" -> "Angle", 
     "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
      {"AngleUnit", 1}] == QuantityVariable["t", "Name" -> "time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]*QuantityVariable["\[Omega]", 
      "Name" -> "angular velocity", "PhysicalQuantity" -> "AngularVelocity", 
      "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
      "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTimeCircularForm", 
      "InitialAngle"}]] :> QuantityVariable[Subscript["\[Theta]", "f"], 
     "Name" -> "final angle", "PhysicalQuantity" -> "Angle", 
     "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
      {"AngleUnit", 1}] == QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
      QuantityVariable["\[Omega]", "Name" -> "angular velocity", 
       "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
      Subscript["\[Theta]", "i"], "Name" -> "initial angle", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DopplerBroadening", "Frequency"}]] :> 
   {QuantityVariable[Subscript["\[Sigma]", "f"], 
      "Name" -> "standard deviation", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == 
     Sqrt[(Quantity[None, "BoltzmannConstant"/"SpeedOfLight"^2]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of a particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]]*QuantityVariable[Subscript["f", "s"], 
       "Name" -> "frequency at the source", "PhysicalQuantity" -> 
        "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
       "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable[Row[{"\[CapitalDelta]", Subscript["f", "FWHM"]}], 
      "Name" -> "frequency full width at half maximum", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     2*Sqrt[2*Log[2]]*Sqrt[(Quantity[None, "BoltzmannConstant"/
           "SpeedOfLight"^2]*QuantityVariable["T", "Name" -> "temperature", 
          "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
           {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
            1}])/QuantityVariable["m", "Name" -> "mass of a particle", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]]*
      QuantityVariable[Subscript["f", "s"], "Name" -> 
        "frequency at the source", "PhysicalQuantity" -> "Frequency", 
       "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
        {"TimeUnit", -1}]}, 
  HoldPattern[MathematicaFormula[{"DopplerBroadening", "Wavelength"}]] :> 
   {QuantityVariable[Subscript["\[Sigma]", "\[Lambda]"], 
      "Name" -> "standard deviation", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     Sqrt[(Quantity[None, "BoltzmannConstant"/"SpeedOfLight"^2]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of a particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]]*QuantityVariable[Subscript["\[Lambda]", "s"], 
       "Name" -> "wavelength at the source", "PhysicalQuantity" -> 
        "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable[Row[{"\[CapitalDelta]", Subscript["\[Lambda]", 
         "FWHM"]}], "Name" -> "wavelength full width at half maximum", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     2*Sqrt[2*Log[2]]*Sqrt[(Quantity[None, "BoltzmannConstant"/
           "SpeedOfLight"^2]*QuantityVariable["T", "Name" -> "temperature", 
          "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
           {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
            1}])/QuantityVariable["m", "Name" -> "mass of a particle", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]]*
      QuantityVariable[Subscript["\[Lambda]", "s"], 
       "Name" -> "wavelength at the source", "PhysicalQuantity" -> 
        "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Frequency"}]] :> 
   QuantityVariable[Subscript["f", "o"], "Name" -> "frequency observed", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]/
     QuantityVariable[Subscript["f", "s"], 
      "Name" -> "frequency at the source", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == QuantityVariable["c", "Name" -> "sound speed", 
      "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Ratio"}]] :> 
   QuantityVariable[Subscript["f", "o"]/Subscript["f", "s"], 
     "Name" -> "frequency reduction factor", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["c", "Name" -> "sound speed", 
      "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShiftRelativistic", 
      "Frequency"}]] :> QuantityVariable[Subscript["f", "o"], 
      "Name" -> "frequency observed", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}]/QuantityVariable[Subscript["f", "s"], 
      "Name" -> "frequency at the source", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == Sqrt[(Quantity[None, "SpeedOfLight"] - 
       QuantityVariable[Subscript["v", "s"], "Name" -> 
         "speed of the source away from the observer", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (Quantity[None, "SpeedOfLight"] + QuantityVariable[Subscript["v", "s"], 
        "Name" -> "speed of the source away from the observer", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
  HoldPattern[MathematicaFormula[{"DopplerShiftRelativistic", "Ratio"}]] :> 
   QuantityVariable[Subscript["f", "o"]/Subscript["f", "s"], 
     "Name" -> "frequency reduction factor", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == Sqrt[(Quantity[None, "SpeedOfLight"] - 
       QuantityVariable[Subscript["v", "s"], "Name" -> 
         "speed of the source away from the observer", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (Quantity[None, "SpeedOfLight"] + QuantityVariable[Subscript["v", "s"], 
        "Name" -> "speed of the source away from the observer", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
  HoldPattern[MathematicaFormula[{"DopplerShiftRelativistic", 
      "Wavelength"}]] :> QuantityVariable[Subscript["\[Lambda]", "s"], 
      "Name" -> "wavelength at the source", "PhysicalQuantity" -> 
       "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable[
      Subscript["\[Lambda]", "o"], "Name" -> "wavelength observed", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Sqrt[(Quantity[None, "SpeedOfLight"] - QuantityVariable[
        Subscript["v", "s"], "Name" -> 
         "speed of the source away from the observer", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (Quantity[None, "SpeedOfLight"] + QuantityVariable[Subscript["v", "s"], 
        "Name" -> "speed of the source away from the observer", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}])], 
  HoldPattern[MathematicaFormula[{"ElasticCollision2D", "Angle"}]] :> 
   {QuantityVariable[Subscript["v", 1, "f"], "Name" -> "final speed 1", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (Sqrt[QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
           "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
            {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^2 - 
         2*Cos[2*QuantityVariable["\[Theta]", "Name" -> 
              "angle between center line and incident velocity", 
             "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
              {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
          QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
           "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
            {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
          QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
           "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
            {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
         QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
           "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
            {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^2]*
       QuantityVariable[Subscript["v", 1, "i"], "Name" -> "initial speed 1", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
    QuantityVariable[Subscript["v", 2, "f"], "Name" -> "final speed 2", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (2*Cos[QuantityVariable["\[Theta]", "Name" -> 
          "angle between center line and incident velocity", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
       QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable[Subscript["v", 1, "i"], "Name" -> "initial speed 1", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
    QuantityVariable[Subscript["\[Theta]", 1, "f"], 
      "Name" -> "final angle 1", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
       {"AngleUnit", 1}] == ArcTan[Quantity[None, "Kilograms"^(-1)]*
       (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] - 
        Cos[2*QuantityVariable["\[Theta]", "Name" -> 
             "angle between center line and incident velocity", 
            "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
             {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
         QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
      Quantity[None, "Kilograms"^(-1)]*QuantityVariable[Subscript["m", 2], 
        "Name" -> "mass 2", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*Sin[2*QuantityVariable["\[Theta]", 
          "Name" -> "angle between center line and incident velocity", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]], 
    QuantityVariable[Subscript["\[Theta]", 2, "f"], 
      "Name" -> "final angle 2", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
       {"AngleUnit", 1}] == QuantityVariable["\[Theta]", 
      "Name" -> "angle between center line and incident velocity", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"ElasticCollision2D", "Radius"}]] :> 
   {QuantityVariable[Subscript["v", 1, "f"], "Name" -> "final speed 1", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (Sqrt[QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
           "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
            {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^2 - 
         2*Cos[2*ArcSin[QuantityVariable["b", "Name" -> "impact parameter", 
               "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
              (QuantityVariable[Subscript["r", 1], "Name" -> "radius 1", 
                "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
                 {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                  1}] + QuantityVariable[Subscript["r", 2], "Name" -> 
                 "radius 2", "PhysicalQuantity" -> "Radius", 
                "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                 {"LengthUnit", 1}])]]*QuantityVariable[Subscript["m", 1], 
           "Name" -> "mass 1", "PhysicalQuantity" -> "Mass", 
           "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
            {"MassUnit", 1}]*QuantityVariable[Subscript["m", 2], 
           "Name" -> "mass 2", "PhysicalQuantity" -> "Mass", 
           "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
            {"MassUnit", 1}] + QuantityVariable[Subscript["m", 2], 
           "Name" -> "mass 2", "PhysicalQuantity" -> "Mass", 
           "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
            {"MassUnit", 1}]^2]*QuantityVariable[Subscript["v", 1, "i"], 
        "Name" -> "initial speed 1", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
    QuantityVariable[Subscript["v", 2, "f"], "Name" -> "final speed 2", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     (2*QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       Sqrt[1 - QuantityVariable["b", "Name" -> "impact parameter", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2/
          (QuantityVariable[Subscript["r", 1], "Name" -> "radius 1", 
             "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
            QuantityVariable[Subscript["r", 2], "Name" -> "radius 2", 
             "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])^
           2]*QuantityVariable[Subscript["v", 1, "i"], 
        "Name" -> "initial speed 1", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
    QuantityVariable[Subscript["\[Theta]", 1, "f"], 
      "Name" -> "final angle 1", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
       {"AngleUnit", 1}] == ArcTan[Quantity[None, "Kilograms"^(-1)]*
       (QuantityVariable[Subscript["m", 1], "Name" -> "mass 1", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] - 
        Cos[2*ArcSin[QuantityVariable["b", "Name" -> "impact parameter", 
              "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {
                HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
             (QuantityVariable[Subscript["r", 1], "Name" -> "radius 1", 
               "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
                {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
                 1}] + QuantityVariable[Subscript["r", 2], "Name" -> 
                "radius 2", "PhysicalQuantity" -> "Radius", 
               "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
                {"LengthUnit", 1}])]]*QuantityVariable[Subscript["m", 2], 
          "Name" -> "mass 2", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]), Quantity[None, "Kilograms"^(-1)]*
       QuantityVariable[Subscript["m", 2], "Name" -> "mass 2", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       Sin[2*ArcSin[QuantityVariable["b", "Name" -> "impact parameter", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
           (QuantityVariable[Subscript["r", 1], "Name" -> "radius 1", 
             "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
            QuantityVariable[Subscript["r", 2], "Name" -> "radius 2", 
             "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
              {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 
               1}])]]], QuantityVariable[Subscript["\[Theta]", 2, "f"], 
      "Name" -> "final angle 2", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
       {"AngleUnit", 1}] == ArcSin[QuantityVariable["b", 
        "Name" -> "impact parameter", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]/(QuantityVariable[Subscript["r", 1], 
         "Name" -> "radius 1", "PhysicalQuantity" -> "Radius", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}] + QuantityVariable[Subscript["r", 2], 
         "Name" -> "radius 2", "PhysicalQuantity" -> "Radius", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}])]}, 
  HoldPattern[MathematicaFormula[{"ElectromagneticSkinDepth", 
      "AngularFrequency"}]] :> QuantityVariable["\[Delta]", 
     "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    (Sqrt[2]*Sqrt[1/(QuantityVariable["\[Epsilon]", "Name" -> "permittivity", 
          "PhysicalQuantity" -> "ElectricPermittivity", "CanonicalUnit" -> 
           {HoldForm["Farads"/"Meters"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
            {"TimeUnit", 4}}]*QuantityVariable["\[Mu]", 
          "Name" -> "permeability", "PhysicalQuantity" -> 
           "MagneticPermeability", "CanonicalUnit" -> 
           {HoldForm["Henries"/"Meters"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 1}, {"MassUnit", 1}, 
            {"TimeUnit", -2}}])])/
     (Sqrt[-1 + Sqrt[1 + QuantityVariable["\[Sigma]", "Name" -> 
              "electric conductivity", "PhysicalQuantity" -> 
              "ElectricConductivity", "CanonicalUnit" -> {HoldForm[
                "Siemens"/"Meters"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", 
                -1}, {"TimeUnit", 3}}]^2/(QuantityVariable["\[Epsilon]", 
              "Name" -> "permittivity", "PhysicalQuantity" -> 
               "ElectricPermittivity", "CanonicalUnit" -> {HoldForm[
                 "Farads"/"Meters"]}, "UnitDimensions" -> {
                {"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", 
                 -1}, {"TimeUnit", 4}}]^2*QuantityVariable["\[Omega]", 
              "Name" -> "angular frequency", "PhysicalQuantity" -> 
               "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                  "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
                {"TimeUnit", -1}}]^2)]]*QuantityVariable["\[Omega]", 
       "Name" -> "angular frequency", "PhysicalQuantity" -> 
        "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"ElectromagneticSkinDepth", 
      "Frequency"}]] :> QuantityVariable["\[Delta]", 
     "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    Sqrt[1/(QuantityVariable["\[Epsilon]", "Name" -> "permittivity", 
         "PhysicalQuantity" -> "ElectricPermittivity", "CanonicalUnit" -> 
          {HoldForm["Farads"/"Meters"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
           {"TimeUnit", 4}}]*QuantityVariable["\[Mu]", 
         "Name" -> "permeability", "PhysicalQuantity" -> 
          "MagneticPermeability", "CanonicalUnit" -> 
          {HoldForm["Henries"/"Meters"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", -2}, {"LengthUnit", 1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])]/(Sqrt[2]*Pi*QuantityVariable["\[Nu]", 
       "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
       "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
        {"TimeUnit", -1}]*
      Sqrt[-1 + Sqrt[1 + QuantityVariable["\[Sigma]", "Name" -> 
              "electric conductivity", "PhysicalQuantity" -> 
              "ElectricConductivity", "CanonicalUnit" -> {HoldForm[
                "Siemens"/"Meters"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", 
                -1}, {"TimeUnit", 3}}]^2/(4*Pi^2*QuantityVariable[
              "\[Epsilon]", "Name" -> "permittivity", "PhysicalQuantity" -> 
               "ElectricPermittivity", "CanonicalUnit" -> {HoldForm[
                 "Farads"/"Meters"]}, "UnitDimensions" -> {
                {"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", 
                 -1}, {"TimeUnit", 4}}]^2*QuantityVariable["\[Nu]", 
              "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
              "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> {
                "TimeUnit", -1}]^2)]]), 
  HoldPattern[MathematicaFormula[{"EllipticalMachine", "Cadence"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[18, "Inches"/IndependentUnit["strides"]]*
     QuantityVariable["c", "Name" -> "cadence", "PhysicalQuantity" -> 
       "StrideRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["strides"]/"Minutes"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable["t", 
      "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EllipticalMachine", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EllipticalMachine", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"EllipticalMachine", "StrideLength"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[None, IndependentUnit["strides"]^(-1)]*
     QuantityVariable["c", "Name" -> "cadence", "PhysicalQuantity" -> 
       "StrideRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["strides"]/"Minutes"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable["sl", 
      "Name" -> "stride length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["t", "Name" -> "time", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EllipticCylinderVolume", "Mass"}]] :> 
   QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
     "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
      {"MassUnit", 1}] == Pi*QuantityVariable["a", 
      "Name" -> "semimajor axis", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["b", "Name" -> "semiminor axis", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
      "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
      "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"EllipticCylinderVolume", "Volume"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
      {"LengthUnit", 3}] == Pi*QuantityVariable["a", 
      "Name" -> "semimajor axis", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["b", "Name" -> "semiminor axis", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EnergyRelativistic", "MovingMass"}]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "SpeedOfLight"^2]*QuantityVariable["m", "Name" -> "mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}])/
     Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula[{"EnergyRelativistic", "RestMass"}]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "SpeedOfLight"^2]*QuantityVariable["m", "Name" -> "mass", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EngineeringStrain", 
      "LengthDifference"}]] :> QuantityVariable["\[Epsilon]", 
     "Name" -> "engineering strain", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Delta]\[VeryThinSpace]l", 
      "Name" -> "length difference", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]/QuantityVariable["L", "Name" -> "original length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EngineeringStrain", "Lengths"}]] :> 
   QuantityVariable["\[Epsilon]", "Name" -> "engineering strain", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "final length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}] - QuantityVariable["L", 
       "Name" -> "original length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}])/QuantityVariable["L", 
      "Name" -> "original length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"EquivalentDoseOfIonizingRadiation", 
      "IonizingRadiationType"}]] :> 
   QuantityVariable["H", "Name" -> "equivalent dose", 
     "PhysicalQuantity" -> "EquivalentDoseOfIonizingRadiation", 
     "CanonicalUnit" -> {HoldForm["Sieverts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"TimeUnit", -2}}] == 
    Quantity[None, "Sieverts"/("Grays"*"PureUnities")]*
     QuantityVariable["D", "Name" -> "absorbed dose", 
      "PhysicalQuantity" -> "AbsorbedDoseOfIonizingRadiation", 
      "CanonicalUnit" -> {HoldForm["Grays"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -2}}]*QuantityVariable[
      Subscript["w", "R"], "Name" -> "radiation weighting factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"EquivalentDoseOfIonizingRadiation", 
      "RadiationWeightingFactor"}]] :> 
   QuantityVariable["H", "Name" -> "equivalent dose", 
     "PhysicalQuantity" -> "EquivalentDoseOfIonizingRadiation", 
     "CanonicalUnit" -> {HoldForm["Sieverts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"TimeUnit", -2}}] == 
    Quantity[None, "Sieverts"/("Grays"*"PureUnities")]*
     QuantityVariable["D", "Name" -> "absorbed dose", 
      "PhysicalQuantity" -> "AbsorbedDoseOfIonizingRadiation", 
      "CanonicalUnit" -> {HoldForm["Grays"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -2}}]*QuantityVariable[
      Subscript["w", "R"], "Name" -> "radiation weighting factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"EulerNumber", "FrictionForce"}]] :> 
   QuantityVariable[Subscript["Eu", 1], "Name" -> "(first) Euler number", 
     "PhysicalQuantity" -> "EulerNumber1", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["F", "f"], "Name" -> "friction force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]/
     (QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["v", "Name" -> "characteristic speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"EulerNumber", "PressureDifference"}]] :> 
   QuantityVariable[Subscript["Eu", 1], "Name" -> "(first) Euler number", 
     "PhysicalQuantity" -> "EulerNumber1", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]P", 
      "Name" -> "pressure difference", "PhysicalQuantity" -> "Pressure", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     (QuantityVariable["v", "Name" -> "characteristic speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"ExponentialDecay", "HalfLife"}]] :> 
   {QuantityVariable["N"/Subscript["N", "0"], 
      "Name" -> "remaining fraction of number of particles", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     E^(-(QuantityVariable["T", "Name" -> "time", "PhysicalQuantity" -> 
          "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
         "UnitDimensions" -> {"TimeUnit", 1}]*QuantityVariable["\[Lambda]", 
         "Name" -> "decay constant", "PhysicalQuantity" -> "Radioactivity", 
         "CanonicalUnit" -> {HoldForm["Becquerels"]}, "UnitDimensions" -> 
          {"TimeUnit", -1}])), QuantityVariable["\[Lambda]", 
      "Name" -> "decay constant", "PhysicalQuantity" -> "Radioactivity", 
      "CanonicalUnit" -> {HoldForm["Becquerels"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == Log[2]/QuantityVariable[Subscript["t", "1/2"], 
       "Name" -> "half\[Hyphen]life", "PhysicalQuantity" -> "HalfLife", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"ExponentialDecay", "Lifetime"}]] :> 
   {QuantityVariable["N"/Subscript["N", "0"], 
      "Name" -> "remaining fraction of number of particles", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     E^(-(QuantityVariable["T", "Name" -> "time", "PhysicalQuantity" -> 
          "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
         "UnitDimensions" -> {"TimeUnit", 1}]*QuantityVariable["\[Lambda]", 
         "Name" -> "decay constant", "PhysicalQuantity" -> "Radioactivity", 
         "CanonicalUnit" -> {HoldForm["Becquerels"]}, "UnitDimensions" -> 
          {"TimeUnit", -1}])), QuantityVariable["\[Lambda]", 
      "Name" -> "decay constant", "PhysicalQuantity" -> "Radioactivity", 
      "CanonicalUnit" -> {HoldForm["Becquerels"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == QuantityVariable["\[Tau]", "Name" -> "lifetime", 
       "PhysicalQuantity" -> "Lifetime", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"FabryPerotInterferometer", 
      "FinesseCoefficient"}]] :> 
   {QuantityVariable[Subscript["T", "e"], 
      "Name" -> "interferometer transmittance", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (1 + QuantityVariable["\[ScriptCapitalF]", 
         "Name" -> "finesse coefficient", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        Sin[(2*Pi*Cos[QuantityVariable["\[Theta]", "Name" -> 
               "angle of incidence", "PhysicalQuantity" -> "Angle", 
              "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
              "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable["l", 
             "Name" -> "plate spacing", "PhysicalQuantity" -> "Distance", 
             "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
              {"LengthUnit", 1}]*QuantityVariable["n", "Name" -> 
              "index of refraction between plates", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])/QuantityVariable["\[Lambda]", 
            "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
            "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
             {"LengthUnit", 1}]]^2)^(-1), 
    QuantityVariable[Subscript["R", "e"], 
      "Name" -> "interferometer reflectance", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == 1 - QuantityVariable[Subscript["T", "e"], 
       "Name" -> "interferometer transmittance", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"FabryPerotInterferometer", 
      "PlateReflectance"}]] :> 
   {QuantityVariable[Subscript["T", "e"], 
      "Name" -> "interferometer transmittance", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == 
     (1 - QuantityVariable["R", "Name" -> "plate reflectance", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])^2/
      (1 - 2*Cos[(4*Pi*Cos[QuantityVariable["\[Theta]", "Name" -> 
              "angle of incidence", "PhysicalQuantity" -> "Angle", 
             "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
             "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable["l", 
            "Name" -> "plate spacing", "PhysicalQuantity" -> "Distance", 
            "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
             {"LengthUnit", 1}]*QuantityVariable["n", "Name" -> 
             "index of refraction between plates", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])/QuantityVariable["\[Lambda]", 
           "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
           "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
            {"LengthUnit", 1}]]*QuantityVariable["R", 
         "Name" -> "plate reflectance", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["R", 
         "Name" -> "plate reflectance", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
        2), QuantityVariable[Subscript["R", "e"], 
      "Name" -> "interferometer reflectance", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == 1 - QuantityVariable[Subscript["T", "e"], 
       "Name" -> "interferometer transmittance", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"FermiDiracDistribution", 
      "ChemicalPotential"}]] :> 
   QuantityVariable[OverBar[Subscript["n", "i"]], 
     "Name" -> "occupation number", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/
     (1 + E^((Quantity[1, "BoltzmannConstant"^(-1)]*
         (-(QuantityVariable["n", "Name" -> "amount", "PhysicalQuantity" -> 
              "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
             "UnitDimensions" -> {"AmountUnit", 1}]*QuantityVariable["\[Mu]", 
             "Name" -> "chemical potential per mole", "PhysicalQuantity" -> 
              "ChemicalPotential", "CanonicalUnit" -> {HoldForm[
                "Joules"/"Moles"]}, "UnitDimensions" -> {{"AmountUnit", -1}, {
                "LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]) + 
          QuantityVariable[Subscript["E", "i"], "Name" -> "state energy", 
           "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
            {HoldForm["Electronvolts"]}, "UnitDimensions" -> 
            {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]))/
        QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}])), 
  HoldPattern[MathematicaFormula[{"FermiDiracDistribution", 
      "ChemicalPotentialEnergy"}]] :> 
   QuantityVariable[OverBar[Subscript["n", "i"]], 
     "Name" -> "occupation number", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/
     (1 + E^((Quantity[1, "BoltzmannConstant"^(-1)]*
         (-QuantityVariable["\[Mu]", "Name" -> "chemical potential energy", 
            "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
             {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}] + QuantityVariable[
           Subscript["E", "i"], "Name" -> "state energy", 
           "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
            {HoldForm["Electronvolts"]}, "UnitDimensions" -> 
            {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]))/
        QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}])), 
  HoldPattern[MathematicaFormula[{"FermiEnergy", "NumberDensity"}]] :> 
   QuantityVariable[Subscript["E", "f"], "Name" -> "fermion energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
      {HoldForm["Electronvolts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[(3^(2/3)*Pi^(4/3))/2^(1/3), "ReducedPlanckConstant"^2]*
      (QuantityVariable["n", "Name" -> "fermion number density", 
         "PhysicalQuantity" -> "InverseVolume", "CanonicalUnit" -> 
          {HoldForm[1/"Meters"^3]}, "UnitDimensions" -> {"LengthUnit", -3}]/
        (1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))^(2/3))/
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"FermiEnergy", "Volume"}]] :> 
   QuantityVariable[Subscript["E", "f"], "Name" -> "fermion energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
      {HoldForm["Electronvolts"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[(3^(2/3)*Pi^(4/3))/2^(1/3), "ReducedPlanckConstant"^2]*
      (QuantityVariable["N", "Name" -> "particle number", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/
        ((1 + 2*QuantityVariable["s", "Name" -> "particle spin", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])*QuantityVariable["V", 
          "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
          "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
           {"LengthUnit", 3}]))^(2/3))/QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"FlowDischargeRate", "Area"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
      "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
       {"LengthUnit", 2}]*QuantityVariable["v", 
      "Name" -> "flow velocity of fluid", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"FlowDischargeRate", "Diameter"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (Pi*QuantityVariable["D", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["v", 
       "Name" -> "flow velocity of fluid", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/4, 
  HoldPattern[MathematicaFormula[{"FlowDischargeRate", "HeightWidth"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    QuantityVariable["H", "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["v", 
      "Name" -> "flow velocity of fluid", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
     QuantityVariable["W", "Name" -> "width", "PhysicalQuantity" -> "Width", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"FlowDischargeRate", "Radius"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    Pi*QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["v", 
      "Name" -> "flow velocity of fluid", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"FourierNumber", 
      "ThermalConductivity"}]] :> 
   QuantityVariable["Fo", "Name" -> "Fourier number for heat transfer", 
     "PhysicalQuantity" -> "FourierNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["k", "Name" -> "thermal conductivity", 
       "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
        {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      QuantityVariable["t", "Name" -> "characteristic time interval", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}])/
     (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
        "Name" -> "characteristic length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^2*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"FourierNumber", "ThermalDiffusivity"}]] :> 
   QuantityVariable["Fo", "Name" -> "Fourier number for heat transfer", 
     "PhysicalQuantity" -> "FourierNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["t", "Name" -> "characteristic time interval", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
      QuantityVariable["\[Alpha]", "Name" -> "thermal diffusivity", 
       "PhysicalQuantity" -> "ThermalDiffusivity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}])/
     QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"FreezingPointDepression", 
      "SolventProperties"}]] :> 
   QuantityVariable[Subscript["\[CapitalDelta]\[InvisibleSpace]T", "f"], 
     "Name" -> "freezing point depression", "PhysicalQuantity" -> 
      "TemperatureDifference", "CanonicalUnit" -> 
      {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
      {"TemperatureDifferenceUnit", 1}] == 
    (Quantity[None, "MolarGasConstant"]*QuantityVariable["m", 
       "Name" -> "solution molality", "PhysicalQuantity" -> "Molality", 
       "CanonicalUnit" -> {HoldForm["Moles"/"Kilograms"]}, 
       "UnitDimensions" -> {{"AmountUnit", 1}, {"MassUnit", -1}}]*
      QuantityVariable["M", "Name" -> "solvent molar mass", 
       "PhysicalQuantity" -> "MolarMass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Moles"]}, "UnitDimensions" -> 
        {{"AmountUnit", -1}, {"MassUnit", 1}}]*
      QuantityVariable[Subscript["T", "f"], "Name" -> 
         "solvent freezing point", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]^2)/QuantityVariable[
      Subscript["\[CapitalDelta]\[InvisibleSpace]H", "fus"], 
      "Name" -> "solvent molar enthalpy of fusion", "PhysicalQuantity" -> 
       "MolarEnergy", "CanonicalUnit" -> {HoldForm["Kilojoules"/"Moles"]}, 
      "UnitDimensions" -> {{"AmountUnit", -1}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"FreezingPointDepression", "Standard"}]] :> 
   QuantityVariable[Subscript["\[CapitalDelta]\[InvisibleSpace]T", "f"], 
     "Name" -> "freezing point depression", "PhysicalQuantity" -> 
      "TemperatureDifference", "CanonicalUnit" -> 
      {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
      {"TemperatureDifferenceUnit", 1}] == 
    QuantityVariable["m", "Name" -> "solution molality", 
      "PhysicalQuantity" -> "Molality", "CanonicalUnit" -> 
       {HoldForm["Moles"/"Kilograms"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"MassUnit", -1}}]*QuantityVariable[
      Subscript["K", "f"], "Name" -> "cryoscopic constant", 
      "PhysicalQuantity" -> "MolalFreezingPointDepressionConstant", 
      "CanonicalUnit" -> {HoldForm[("KelvinsDifference"*"Kilograms")/
          "Moles"]}, "UnitDimensions" -> {{"AmountUnit", -1}, 
        {"MassUnit", 1}, {"TemperatureDifferenceUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"FresnelEquation", "PPolarized"}]] :> 
   {QuantityVariable[Subscript["R", "p"], 
      "Name" -> 
       "reflection coefficient for p\[Hyphen]polarized incident light", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (Cos[QuantityVariable[Subscript["\[Theta]", 1], "Name" -> 
            "angle of incidence", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
           "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable[
          Subscript["n", 2], "Name" -> "index of refraction (second medium)", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - 
        QuantityVariable[Subscript["n", 1], "Name" -> 
           "index of refraction (first medium)", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*Sqrt[1 - (QuantityVariable[Subscript["n", 1], 
               "Name" -> "index of refraction (first medium)", 
               "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
                {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
             Sin[QuantityVariable[Subscript["\[Theta]", 1], "Name" -> 
                 "angle of incidence", "PhysicalQuantity" -> "Angle", 
                "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
                "UnitDimensions" -> {"AngleUnit", 1}]]^2)/
            QuantityVariable[Subscript["n", 2], "Name" -> 
               "index of refraction (second medium)", "PhysicalQuantity" -> 
               "Unitless", "CanonicalUnit" -> {"Unities"}, 
              "UnitDimensions" -> "Dimensionless"]^2])^2/
      (Cos[QuantityVariable[Subscript["\[Theta]", 1], 
           "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
           "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable[
          Subscript["n", 2], "Name" -> "index of refraction (second medium)", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable[Subscript["n", 1], "Name" -> 
           "index of refraction (first medium)", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*Sqrt[1 - (QuantityVariable[Subscript["n", 1], 
               "Name" -> "index of refraction (first medium)", 
               "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
                {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
             Sin[QuantityVariable[Subscript["\[Theta]", 1], "Name" -> 
                 "angle of incidence", "PhysicalQuantity" -> "Angle", 
                "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
                "UnitDimensions" -> {"AngleUnit", 1}]]^2)/
            QuantityVariable[Subscript["n", 2], "Name" -> 
               "index of refraction (second medium)", "PhysicalQuantity" -> 
               "Unitless", "CanonicalUnit" -> {"Unities"}, 
              "UnitDimensions" -> "Dimensionless"]^2])^2, 
    QuantityVariable[Subscript["T", "p"], 
      "Name" -> 
       "transmission coefficient for p\[Hyphen]polarized incident light", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     1 - QuantityVariable[Subscript["R", "p"], 
       "Name" -> 
        "reflection coefficient for p\[Hyphen]polarized incident light", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"FresnelEquation", "SPolarized"}]] :> 
   {QuantityVariable[Subscript["R", "s"], 
      "Name" -> 
       "reflection coefficient for s\[Hyphen]polarized incident light", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (Cos[QuantityVariable[Subscript["\[Theta]", 1], "Name" -> 
            "angle of incidence", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
           "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable[
          Subscript["n", 1], "Name" -> "index of refraction (first medium)", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - 
        QuantityVariable[Subscript["n", 2], "Name" -> 
           "index of refraction (second medium)", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*Sqrt[1 - (QuantityVariable[Subscript["n", 1], 
               "Name" -> "index of refraction (first medium)", 
               "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
                {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
             Sin[QuantityVariable[Subscript["\[Theta]", 1], "Name" -> 
                 "angle of incidence", "PhysicalQuantity" -> "Angle", 
                "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
                "UnitDimensions" -> {"AngleUnit", 1}]]^2)/
            QuantityVariable[Subscript["n", 2], "Name" -> 
               "index of refraction (second medium)", "PhysicalQuantity" -> 
               "Unitless", "CanonicalUnit" -> {"Unities"}, 
              "UnitDimensions" -> "Dimensionless"]^2])^2/
      (Cos[QuantityVariable[Subscript["\[Theta]", 1], 
           "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
           "UnitDimensions" -> {"AngleUnit", 1}]]*QuantityVariable[
          Subscript["n", 1], "Name" -> "index of refraction (first medium)", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable[Subscript["n", 2], "Name" -> 
           "index of refraction (second medium)", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*Sqrt[1 - (QuantityVariable[Subscript["n", 1], 
               "Name" -> "index of refraction (first medium)", 
               "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
                {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2*
             Sin[QuantityVariable[Subscript["\[Theta]", 1], "Name" -> 
                 "angle of incidence", "PhysicalQuantity" -> "Angle", 
                "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
                "UnitDimensions" -> {"AngleUnit", 1}]]^2)/
            QuantityVariable[Subscript["n", 2], "Name" -> 
               "index of refraction (second medium)", "PhysicalQuantity" -> 
               "Unitless", "CanonicalUnit" -> {"Unities"}, 
              "UnitDimensions" -> "Dimensionless"]^2])^2, 
    QuantityVariable[Subscript["T", "s"], 
      "Name" -> 
       "transmission coefficient for s\[Hyphen]polarized incident light", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     1 - QuantityVariable[Subscript["R", "s"], 
       "Name" -> 
        "reflection coefficient for s\[Hyphen]polarized incident light", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"FuelCost", "FuelConsumption"}]] :> 
   QuantityVariable["C", "Name" -> "cost", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == QuantityVariable["D", "Name" -> "distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["FC", "Name" -> "fuel consumption", 
      "PhysicalQuantity" -> "FuelConsumption", "CanonicalUnit" -> 
       {HoldForm["Liters"/(100*"Kilometers")]}, "UnitDimensions" -> 
       {"LengthUnit", 2}]*QuantityVariable["P", "Name" -> "price per volume", 
      "PhysicalQuantity" -> "MoneyPerVolume", "CanonicalUnit" -> 
       {HoldForm["USDollars"/"Gallons"]}, "UnitDimensions" -> 
       {{"LengthUnit", -3}, {"MoneyUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"FuelCost", "FuelEconomy"}]] :> 
   QuantityVariable["C", "Name" -> "cost", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == (QuantityVariable["D", "Name" -> "distance", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["P", "Name" -> "price per volume", 
       "PhysicalQuantity" -> "MoneyPerVolume", "CanonicalUnit" -> 
        {HoldForm["USDollars"/"Gallons"]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MoneyUnit", 1}}])/QuantityVariable["FE", 
      "Name" -> "fuel economy", "PhysicalQuantity" -> "FuelEconomy", 
      "CanonicalUnit" -> {HoldForm["Kilometers"/"Liters"]}, 
      "UnitDimensions" -> {"LengthUnit", -2}], 
  HoldPattern[MathematicaFormula[{"FuelUsed", "Volume"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Gallons"]}, "UnitDimensions" -> 
      {"LengthUnit", 3}] == QuantityVariable["D", "Name" -> "distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["FE", "Name" -> "fuel economy", 
      "PhysicalQuantity" -> "FuelEconomy", "CanonicalUnit" -> 
       {HoldForm["Kilometers"/"Liters"]}, "UnitDimensions" -> 
       {"LengthUnit", -2}], 
  HoldPattern[MathematicaFormula[{"GalileoNumber", 
      "CharacteristicLength"}]] :> 
   QuantityVariable["Ga", "Name" -> "Galileo number", 
     "PhysicalQuantity" -> "GalileoNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3)/
     QuantityVariable["\[Nu]", "Name" -> "kinematic viscosity", 
       "PhysicalQuantity" -> "KinematicViscosity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"GalileoNumber", "ReynoldsNumber"}]] :> 
   QuantityVariable["Ga", "Name" -> "Galileo number", 
     "PhysicalQuantity" -> "GalileoNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["Re", "Name" -> "Reynolds number", 
       "PhysicalQuantity" -> "ReynoldsNumber", "CanonicalUnit" -> 
        {"Unities"}, "UnitDimensions" -> "Dimensionless"]^2/
     QuantityVariable[Subscript["Fr", 1], "Name" -> "first Froude number", 
      "PhysicalQuantity" -> "FroudeNumber1", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"GamblingCalculator", "AmericanOdds"}]] :> 
   QuantityVariable["winnings", "Name" -> "payoff if you win", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"], "Unities"}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == (QuantityVariable["a", "Name" -> "American odds", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["b", 
       "Name" -> "bet", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"], "Unities"}, 
       "UnitDimensions" -> {"MoneyUnit", 1}])/100, 
  HoldPattern[MathematicaFormula[{"GamblingCalculator", "DecimalOdds"}]] :> 
   QuantityVariable["winnings", "Name" -> "payoff if you win", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"], "Unities"}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == QuantityVariable["b", "Name" -> "bet", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"], "Unities"}, "UnitDimensions" -> 
       {"MoneyUnit", 1}]*(-1 + QuantityVariable["d", 
       "Name" -> "decimal odds", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"GamblingCalculator", 
      "FractionalOdds"}]] :> QuantityVariable["winnings", 
     "Name" -> "payoff if you win", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"], "Unities"}, 
     "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["b", "Name" -> "bet", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"], "Unities"}, 
      "UnitDimensions" -> {"MoneyUnit", 1}]*QuantityVariable["f", 
      "Name" -> "fractional odds", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"GoffGratchEquation", "Ice"}]] :> 
   Log[Quantity[0.16347081228646623, "Kilopascals"^(-1)]*
       QuantityVariable[Subscript["P", "w"], "Name" -> 
         "saturation vapor pressure", "PhysicalQuantity" -> "Pressure", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]]/Log[10] == 
    -1.5489286414872234*Log[Quantity[273.16, "Kelvins"]/
        QuantityVariable["T", "Name" -> "moist air temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["DegreesCelsius"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]] - 
     9.09718*(-1 + Quantity[273.16, "Kelvins"]/QuantityVariable["T", 
         "Name" -> "moist air temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["DegreesCelsius"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}]) + 
     0.876793*(1 + Quantity[-0.0036608581051398447, "Kelvins"^(-1)]*
        QuantityVariable["T", "Name" -> "moist air temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["DegreesCelsius"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"GoffGratchEquation", "Water"}]] :> 
   Log[Quantity[0.0009869232667160128, "Hectopascals"^(-1)]*
       QuantityVariable[Subscript["P", "w"], "Name" -> 
         "saturation vapor pressure", "PhysicalQuantity" -> "Pressure", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]]/Log[10] == 
    0.008132799999999999*(-1 + 10^(-3.49149*(-1 + Quantity[373.15, "Kelvins"]/
           QuantityVariable["T", "Name" -> "moist air temperature", 
            "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
             {HoldForm["DegreesCelsius"]}, "UnitDimensions" -> 
             {"TemperatureUnit", 1}]))) - 
     1.3816*^-7*(-1 + 10^(11.344*(1 + Quantity[-0.0026798874447273215, 
            "Kelvins"^(-1)]*QuantityVariable["T", "Name" -> 
             "moist air temperature", "PhysicalQuantity" -> "Temperature", 
            "CanonicalUnit" -> {HoldForm["DegreesCelsius"]}, 
            "UnitDimensions" -> {"TemperatureUnit", 1}]))) + 
     2.1836673985681023*Log[Quantity[373.15, "Kelvins"]/
        QuantityVariable["T", "Name" -> "moist air temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["DegreesCelsius"]}, "UnitDimensions" -> 
          {"TemperatureUnit", 1}]] - 
     7.90298*(-1 + Quantity[373.15, "Kelvins"]/QuantityVariable["T", 
         "Name" -> "moist air temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["DegreesCelsius"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"GradePercent", "GradePercent"}]] :> 
   QuantityVariable["s", "Name" -> "grade percent", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["h", "Name" -> "slope rise", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["x", 
      "Name" -> "slope run", "PhysicalQuantity" -> "Distance", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"GradePercent", "SlopeAngle"}]] :> 
   Tan[Quantity[None, "Radians"^(-1)]*QuantityVariable["\[Alpha]", 
       "Name" -> "slope angle", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
        {"AngleUnit", 1}]] == QuantityVariable["h", "Name" -> "slope rise", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["x", "Name" -> "slope run", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"GrahamsLaw", "Fluxes"}]] :> 
   QuantityVariable[Subscript["J", "A"], 
     "Name" -> Row[{"molar flux species ", Style["A", Italic]}], 
     "PhysicalQuantity" -> "MolarFlux", "CanonicalUnit" -> 
      {HoldForm["Moles"/("Meters"^2*"Seconds")]}, "UnitDimensions" -> 
      {{"AmountUnit", 1}, {"LengthUnit", -2}, {"TimeUnit", -1}}] == 
    QuantityVariable[Subscript["J", "B"], 
      "Name" -> Row[{"molar flux species ", Style["B", Italic]}], 
      "PhysicalQuantity" -> "MolarFlux", "CanonicalUnit" -> 
       {HoldForm["Moles"/("Meters"^2*"Seconds")]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -2}, {"TimeUnit", -1}}]*
     Sqrt[QuantityVariable[Subscript["M", "B"], 
        "Name" -> Row[{"molecular weight species ", Style["B", Italic]}], 
        "PhysicalQuantity" -> "MolarMass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Moles"]}, "UnitDimensions" -> 
         {{"AmountUnit", -1}, {"MassUnit", 1}}]/QuantityVariable[
        Subscript["M", "A"], "Name" -> Row[{"molecular weight species ", 
           Style["A", Italic]}], "PhysicalQuantity" -> "MolarMass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
        "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula[{"GrahamsLaw", "FluxRatio"}]] :> 
   QuantityVariable[Subscript["J", "A"]/Subscript["J", "B"], 
     "Name" -> "species flux ratio", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    Sqrt[QuantityVariable[Subscript["M", "B"], 
       "Name" -> Row[{"molecular weight species ", Style["B", Italic]}], 
       "PhysicalQuantity" -> "MolarMass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Moles"]}, "UnitDimensions" -> 
        {{"AmountUnit", -1}, {"MassUnit", 1}}]/QuantityVariable[
       Subscript["M", "A"], "Name" -> Row[{"molecular weight species ", 
          Style["A", Italic]}], "PhysicalQuantity" -> "MolarMass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
       "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula[{"GravitationalAcceleration", "Radius"}]] :> 
   QuantityVariable["g", "Name" -> "gravitational acceleration", 
     "PhysicalQuantity" -> "GravitationalAcceleration", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "GravitationalConstant"]*QuantityVariable["M", 
       "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/QuantityVariable["r", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"GyromagneticRatio", "Electron"}]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "gyromagnetic ratio", 
     "PhysicalQuantity" -> "MagneticFrequencyShift", 
     "CanonicalUnit" -> {HoldForm[1/("Seconds"*"Teslas")]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"MassUnit", -1}, 
       {"TimeUnit", 1}}] == 
    Quantity[1, "BohrMagneton"/"ReducedPlanckConstant"]*
     QuantityVariable["g", "Name" -> "g\[Hyphen]factor", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"GyromagneticRatio", "Generic"}]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "gyromagnetic ratio", 
     "PhysicalQuantity" -> "MagneticFrequencyShift", 
     "CanonicalUnit" -> {HoldForm[1/("Seconds"*"Teslas")]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"MassUnit", -1}, 
       {"TimeUnit", 1}}] == 
    (QuantityVariable["g", "Name" -> "g\[Hyphen]factor", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["Q", 
       "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
       "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
     (2*QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Damping"}]] :> 
   QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", 
      "FrequencyPeriod"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "NoInfluences"}]] :> 
   QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
     Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]]}, 
  HoldPattern[MathematicaFormula[{"HeatCapacityRatio", 
      "DegreesOfFreedom"}]] :> QuantityVariable["\[Gamma]", 
     "Name" -> "heat capacity ratio", "PhysicalQuantity" -> 
      "HeatCapacityRatio", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (2 + QuantityVariable["f", "Name" -> "degrees of freedom", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/QuantityVariable["f", 
      "Name" -> "degrees of freedom", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"HeatCapacityRatio", "HeatCapacities"}]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
     "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["C", "p"], "Name" -> "isobaric heat capacity", 
      "PhysicalQuantity" -> "HeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}]/QuantityVariable[Subscript["C", "V"], 
      "Name" -> "isochoric heat capacity", "PhysicalQuantity" -> 
       "HeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"HeatCapacityRatio", 
      "SpecificHeatCapacities"}]] :> 
   QuantityVariable["\[Gamma]", "Name" -> "heat capacity ratio", 
     "PhysicalQuantity" -> "HeatCapacityRatio", "CanonicalUnit" -> 
      {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["c", "p"], 
      "Name" -> "isobaric specific heat capacity", "PhysicalQuantity" -> 
       "SpecificHeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}]/QuantityVariable[Subscript["c", "V"], 
      "Name" -> "isochoric specific heat capacity", "PhysicalQuantity" -> 
       "SpecificHeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"HeatTransferCoefficient", 
      "HeatTransferRate"}]] :> 
   QuantityVariable["h", "Name" -> "heat transfer coefficient", 
     "PhysicalQuantity" -> "HeatTransferCoefficient", 
     "CanonicalUnit" -> {HoldForm["Watts"/("KelvinsDifference"*"Meters"^2)]}, 
     "UnitDimensions" -> {{"MassUnit", 1}, {"TemperatureDifferenceUnit", -1}, 
       {"TimeUnit", -3}}] == QuantityVariable[Style["dQ", Italic]/
       Style["dt", Italic], "Name" -> "heat transfer rate", 
      "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -3}}]/(QuantityVariable["A", 
       "Name" -> "heat transfer surface area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"HeatTransferCoefficient", 
      "HeatTransferred"}]] :> QuantityVariable["h", 
     "Name" -> "heat transfer coefficient", "PhysicalQuantity" -> 
      "HeatTransferCoefficient", "CanonicalUnit" -> 
      {HoldForm["Watts"/("KelvinsDifference"*"Meters"^2)]}, 
     "UnitDimensions" -> {{"MassUnit", 1}, {"TemperatureDifferenceUnit", -1}, 
       {"TimeUnit", -3}}] == 
    QuantityVariable["\[CapitalDelta]\[InvisibleSpace]Q", 
      "Name" -> "heat transferred", "PhysicalQuantity" -> "Heat", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]/
     (QuantityVariable["A", "Name" -> "heat transfer surface area", 
       "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
        {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}]*
      QuantityVariable["\[CapitalDelta]\[InvisibleSpace]t", 
       "Name" -> "time interval", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"HelmholtzCoil", "Coils"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[8/(5*Sqrt[5]), "MagneticConstant"]*QuantityVariable["I", 
       "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
       "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
        {"ElectricCurrentUnit", 1}]*QuantityVariable["N", 
       "Name" -> "coil turns", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"HelmholtzCoil", "Distance"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[1/2, "MagneticConstant"]*QuantityVariable["I", 
      "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
      "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
       {"ElectricCurrentUnit", 1}]*QuantityVariable["R", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
     (((-QuantityVariable["d", "Name" -> "distance from center", 
            "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
          QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
             "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
            "UnitDimensions" -> {"LengthUnit", 1}]/2)^2 + 
        QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^2)^(-3/2) + 
      ((QuantityVariable["d", "Name" -> "distance from center", 
           "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
          QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
             "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
            "UnitDimensions" -> {"LengthUnit", 1}]/2)^2 + 
        QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^2)^(-3/2)), 
  HoldPattern[MathematicaFormula[{"HelmholtzCoil", "Standard"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[8/(5*Sqrt[5]), "MagneticConstant"]*QuantityVariable["I", 
       "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
       "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
        {"ElectricCurrentUnit", 1}])/QuantityVariable["R", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"HendersonHasselbalchEquation", 
      "AcidityConstant"}]] :> QuantityVariable["pH", "Name" -> "pH", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Log[QuantityVariable["[B]", "Name" -> "base concentration", 
         "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
          {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
          {{"AmountUnit", 1}, {"LengthUnit", -3}}]/QuantityVariable["[HA]", 
         "Name" -> "acid concentration", "PhysicalQuantity" -> "Molarity", 
         "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
         "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]]/
      Log[10] - Log[QuantityVariable[Subscript["K", "a"], 
        "Name" -> "acidity constant", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]]/
      Log[10], HoldPattern[MathematicaFormula[
     {"HendersonHasselbalchEquation", "LogAcidityConstant"}]] :> 
   QuantityVariable["pH", "Name" -> "pH", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    Log[QuantityVariable["[B]", "Name" -> "base concentration", 
         "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
          {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
          {{"AmountUnit", 1}, {"LengthUnit", -3}}]/QuantityVariable["[HA]", 
         "Name" -> "acid concentration", "PhysicalQuantity" -> "Molarity", 
         "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
         "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]]/
      Log[10] + QuantityVariable[Subscript["pK", "a"], 
      "Name" -> "log acidity constant", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"HookesLaw", "Force"}]] :> 
   QuantityVariable["F", "Name" -> "force", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["k", "Name" -> "spring constant", 
      "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["x", 
      "Name" -> "extension", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"HookesLaw", "PotentialEnergy"}]] :> 
   QuantityVariable["U", "Name" -> "potential energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (QuantityVariable["k", "Name" -> "spring constant", 
       "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["x", "Name" -> "extension", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2)/2, 
  HoldPattern[MathematicaFormula[{"HorizonDistance", "ArbitraryPlanet"}]] :> 
   QuantityVariable["d", "Name" -> "horizon distance", 
     "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Sqrt[1 - (1 + QuantityVariable["h", "Name" -> "altitude", 
           "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
          QuantityVariable["r", "Name" -> "planetary radius", 
           "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])^
        (-2)]*(1 + QuantityVariable["h", "Name" -> "altitude", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       QuantityVariable["r", "Name" -> "planetary radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])*
     QuantityVariable["r", "Name" -> "planetary radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"HorizonDistance", "Earth"}]] :> 
   QuantityVariable["d", "Name" -> "horizon distance", 
     "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[None, "EarthEquatorialRadius"]*
     (1 + Quantity[None, "EarthEquatorialRadius"^(-1)]*
       QuantityVariable["h", "Name" -> "altitude", "PhysicalQuantity" -> 
         "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}])*
     Sqrt[1 - (1 + Quantity[None, "EarthEquatorialRadius"^(-1)]*
          QuantityVariable["h", "Name" -> "altitude", "PhysicalQuantity" -> 
            "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}])^(-2)], 
  HoldPattern[MathematicaFormula[{"HorizontalCylinderLateralSurfaceArea", 
      "Diameter"}]] :> QuantityVariable["S", 
     "Name" -> "lateral surface area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
       "Diameter", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["L", 
      "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"HorizontalCylinderLateralSurfaceArea", 
      "Radius"}]] :> QuantityVariable["S", "Name" -> "lateral surface area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Meters"^2], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == 2*Pi*QuantityVariable["L", "Name" -> "length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"HorizontalCylinderTotalSurfaceArea", 
      "Diameter"}]] :> QuantityVariable["S", "Name" -> "total surface area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Meters"^2], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == Pi*QuantityVariable["d", "Name" -> "diameter", 
      "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*(QuantityVariable["d", "Name" -> "diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}]/2 + QuantityVariable["L", "Name" -> "length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"HorizontalCylinderTotalSurfaceArea", 
      "Radius"}]] :> QuantityVariable["S", "Name" -> "total surface area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Meters"^2], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == 2*Pi*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*(QuantityVariable["L", "Name" -> "length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}] + QuantityVariable["r", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"HorizontalCylinderVolume", 
      "Diameter"}]] :> QuantityVariable["V", "Name" -> "volume", 
     "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
      {HoldForm["Meters"^3], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 3}] == 
    (Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["L", 
       "Name" -> "length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}])/4, 
  HoldPattern[MathematicaFormula[{"HorizontalCylinderVolume", "Radius"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    Pi*QuantityVariable["L", "Name" -> "length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"HydrostaticPressure", 
      "AtmosphericPressure"}]] :> QuantityVariable["p", "Name" -> "pressure", 
     "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "StandardAccelerationOfGravity"]*QuantityVariable["h", 
       "Name" -> "height", "PhysicalQuantity" -> "Height", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
       "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}] + 
     QuantityVariable[Subscript["p", "atm"], 
      "Name" -> "atmospheric pressure", "PhysicalQuantity" -> "Pressure", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"HydrostaticPressure", "Standard"}]] :> 
   QuantityVariable["p", "Name" -> "pressure", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == Quantity[None, "StandardAccelerationOfGravity"]*
     QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
       "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Rho]", 
      "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
      "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"IdealGasHeatCapacity", 
      "BoltzmannConstant"}]] :> 
   {QuantityVariable[Subscript["C", "p"], "Name" -> "isobaric heat capacity", 
      "PhysicalQuantity" -> "HeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}] == Quantity[None, "BoltzmannConstant"]*
      QuantityVariable["N", "Name" -> "particle number", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Gamma]", 
       "Name" -> "particle structure", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable[Subscript["C", "V"], 
      "Name" -> "isochoric heat capacity", "PhysicalQuantity" -> 
       "HeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}] == Quantity[None, "BoltzmannConstant"]*
       QuantityVariable["N", "Name" -> "particle number", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable[
       Subscript["C", "p"], "Name" -> "isobaric heat capacity", 
       "PhysicalQuantity" -> "HeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula[{"IdealGasHeatCapacity", 
      "MolarGasConstant"}]] :> 
   {QuantityVariable[Subscript["C", "p"], "Name" -> "isobaric heat capacity", 
      "PhysicalQuantity" -> "HeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}] == Quantity[None, "MolarGasConstant"]*
      QuantityVariable["n", "Name" -> "amount", "PhysicalQuantity" -> 
        "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
       "UnitDimensions" -> {"AmountUnit", 1}]*QuantityVariable["\[Gamma]", 
       "Name" -> "particle structure", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable[Subscript["C", "V"], 
      "Name" -> "isochoric heat capacity", "PhysicalQuantity" -> 
       "HeatCapacity", "CanonicalUnit" -> 
       {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
         -1}, {"TimeUnit", -2}}] == Quantity[None, "MolarGasConstant"]*
       QuantityVariable["n", "Name" -> "amount", "PhysicalQuantity" -> 
         "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
        "UnitDimensions" -> {"AmountUnit", 1}] + QuantityVariable[
       Subscript["C", "p"], "Name" -> "isobaric heat capacity", 
       "PhysicalQuantity" -> "HeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/"KelvinsDifference"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]}, 
  HoldPattern[MathematicaFormula[{"IdealGasInternalEnergy", 
      "BoltzmannConstant"}]] :> 
   QuantityVariable["U", "Name" -> "internal energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == Quantity[None, "BoltzmannConstant"]*
     QuantityVariable["N", "Name" -> "particle number", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable["T", 
      "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
      "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
       {"TemperatureUnit", 1}]*QuantityVariable["\[Gamma]", 
      "Name" -> "particle structure", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"IdealGasInternalEnergy", 
      "MolarGasConstant"}]] :> 
   QuantityVariable["U", "Name" -> "internal energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == Quantity[None, "MolarGasConstant"]*
     QuantityVariable["n", "Name" -> "amount", "PhysicalQuantity" -> 
       "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
      "UnitDimensions" -> {"AmountUnit", 1}]*QuantityVariable["T", 
      "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
      "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
       {"TemperatureUnit", 1}]*QuantityVariable["\[Gamma]", 
      "Name" -> "particle structure", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"IdealGasLaw", "Density"}]] :> 
   QuantityVariable["m", "Name" -> "molar mass", "PhysicalQuantity" -> 
       "MolarMass", "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
      "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]*
     QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
       "Pressure", "CanonicalUnit" -> {HoldForm["Atmospheres"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == Quantity[None, "MolarGasConstant"]*
     QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}]*QuantityVariable["\[Rho]", 
      "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
      "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"IdealGasLaw", "Volume"}]] :> 
   QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
       "Pressure", "CanonicalUnit" -> {HoldForm["Atmospheres"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}]*QuantityVariable["V", "Name" -> "volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
    Quantity[None, "MolarGasConstant"]*QuantityVariable["n", 
      "Name" -> "amount", "PhysicalQuantity" -> "Amount", 
      "CanonicalUnit" -> {HoldForm["Moles"]}, "UnitDimensions" -> 
       {"AmountUnit", 1}]*QuantityVariable["T", "Name" -> "temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula[{"IdealGasSpeedOfSoundPressure", 
      "Density"}]] :> QuantityVariable[Subscript["v", "s"], 
     "Name" -> "speed of sound", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable["\[Gamma]", 
        "Name" -> "adiabatic index", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      QuantityVariable["d", "Name" -> "density", "PhysicalQuantity" -> 
        "MassDensity", "CanonicalUnit" -> {HoldForm["Grams"/"Milliliters"]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula[{"IdealGasSpeedOfSoundPressure", 
      "SpecificGravity"}]] :> QuantityVariable[Subscript["v", "s"], 
     "Name" -> "speed of sound", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(Quantity[0.8163265306122448, "Meters"^3/"Kilograms"]*
       QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]*QuantityVariable["\[Gamma]", 
        "Name" -> "adiabatic index", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      QuantityVariable[Subscript["G", "s"], "Name" -> "specific gravity", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]], 
  HoldPattern[MathematicaFormula[{"IdealGasSpeedOfSoundTemperature", 
      "BoltzmannConstant"}]] :> QuantityVariable[Subscript["v", "s"], 
     "Name" -> "speed of sound", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(Quantity[None, "BoltzmannConstant"]*QuantityVariable["T",
        "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]*QuantityVariable["\[Gamma]", 
        "Name" -> "adiabatic index", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      QuantityVariable["m", "Name" -> "mass of a molecule", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"IdealGasSpeedOfSoundTemperature", 
      "MolarGasConstant"}]] :> QuantityVariable[Subscript["v", "s"], 
     "Name" -> "speed of sound", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Sqrt[(Quantity[None, "MolarGasConstant"]*QuantityVariable["T", 
        "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}]*QuantityVariable["\[Gamma]", 
        "Name" -> "adiabatic index", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      QuantityVariable["M", "Name" -> "molar mass", "PhysicalQuantity" -> 
        "MolarMass", "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
       "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula[{"IdealTransformer", "Current"}]] :> 
   QuantityVariable[Subscript["N", "1"], "Name" -> "primary turns", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/QuantityVariable[
      Subscript["N", "2"], "Name" -> "secondary turns", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["I", "2"], "Name" -> "secondary current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 1}]/
     QuantityVariable[Subscript["I", "1"], "Name" -> "primary current", 
      "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
       {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
        1}], HoldPattern[MathematicaFormula[{"IdealTransformer", 
      "Voltage"}]] :> QuantityVariable[Subscript["N", "1"], 
      "Name" -> "primary turns", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
     QuantityVariable[Subscript["N", "2"], "Name" -> "secondary turns", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["V", "1"], "Name" -> "primary voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]/
     QuantityVariable[Subscript["V", "2"], "Name" -> "secondary voltage", 
      "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
       {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula[{"InclinedPlaneMechanicalAdvantage", 
      "LengthHeight"}]] :> QuantityVariable["MA", 
     "Name" -> "mechanical advantage", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]/QuantityVariable["h", "Name" -> "height", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"InclinedPlaneMechanicalAdvantage", 
      "Slope"}]] :> QuantityVariable["MA", "Name" -> "mechanical advantage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Csc[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["AngularDegrees"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"InterestAtMaturitySecurity", 
      "DayCountConvention"}]] :> QuantityVariable[Subscript["P", "S"], 
     "Name" -> "price at settlement", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    -100*QuantityVariable[Subscript["t", "IM"], 
       "Name" -> "years from issue to maturity", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + 
     (100*(1 + QuantityVariable["R", "Name" -> "issue rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
          Subscript["t", "IM"], "Name" -> "years from issue to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
      (1 + QuantityVariable["Y", "Name" -> "bond equivalent yield", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
         Subscript["t", "SM"], "Name" -> "years from settlement to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"InterestAtMaturitySecurity", 
      "Standard"}]] :> QuantityVariable[Subscript["P", "S"], 
     "Name" -> "price at settlement", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    -100*QuantityVariable[Subscript["t", "IM"], 
       "Name" -> "years from issue to maturity", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + 
     (100*(1 + QuantityVariable["R", "Name" -> "issue rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
          Subscript["t", "IM"], "Name" -> "years from issue to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
      (1 + QuantityVariable["Y", "Name" -> "bond equivalent yield", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
         Subscript["t", "SM"], "Name" -> "years from settlement to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"JeansLength", "SoundSpeed"}]] :> 
   QuantityVariable[Subscript["R", "J"], "Name" -> "Jeans length", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
      {HoldForm["LightYears"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Sqrt[Pi]*QuantityVariable["c", "Name" -> "sound speed", 
      "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
     Sqrt[Quantity[None, "GravitationalConstant"^(-1)]/
       QuantityVariable["\[Rho]", "Name" -> "mass density", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula[{"JeansMass", "SoundSpeed"}]] :> 
   QuantityVariable[Subscript["M", "J"], "Name" -> "Jeans mass", 
     "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
      {HoldForm["SolarMass"]}, "UnitDimensions" -> {"MassUnit", 1}] == 
    (Quantity[(Pi)/6, "GravitationalConstant"^(-3/2)]*
      QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
         "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^3)/
     Sqrt[QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]], 
  HoldPattern[MathematicaFormula[{"JoulesLaw", "ElectricCurrent"}]] :> 
   QuantityVariable["Q", "Name" -> "heat", "PhysicalQuantity" -> "Heat", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["I", "Name" -> "electric current", 
       "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
        {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
         1}]^2*QuantityVariable["R", "Name" -> "electric resistance", 
      "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
       {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
        {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"JoulesLaw", "ElectricPotential"}]] :> 
   QuantityVariable["Q", "Name" -> "heat", "PhysicalQuantity" -> "Heat", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Row[{QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> 
         "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
        "UnitDimensions" -> {"TimeUnit", 1}]}]*
     Row[{QuantityVariable["U", "Name" -> "electric potential difference", 
          "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
           {HoldForm["Volts"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}]^2/QuantityVariable["R", 
         "Name" -> "electric resistance", "PhysicalQuantity" -> 
          "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -3}}]}], 
  HoldPattern[MathematicaFormula[{"KeplersThirdLaw", "Masses"}]] :> 
   QuantityVariable["T", "Name" -> "orbital period", 
      "PhysicalQuantity" -> "Period", "CanonicalUnit" -> {HoldForm["Years"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]^2 == 
    (Quantity[4*Pi^2, "GravitationalConstant"^(-1)]*
      QuantityVariable["a", "Name" -> "semi\[Hyphen]major axis", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3)/
     (QuantityVariable[Subscript["m", 1], "Name" -> "primary mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
      QuantityVariable[Subscript["m", 2], "Name" -> "secondary mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"KeplersThirdLaw", "SingleMass"}]] :> 
   QuantityVariable["T", "Name" -> "orbital period", 
      "PhysicalQuantity" -> "Period", "CanonicalUnit" -> {HoldForm["Years"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]^2 == 
    (Quantity[4*Pi^2, "GravitationalConstant"^(-1)]*
      QuantityVariable["a", "Name" -> "semi\[Hyphen]major axis", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3)/
     QuantityVariable[Subscript["m", 1], "Name" -> "primary mass", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"KeplersThirdLaw", "Sun"}]] :> 
   QuantityVariable["T", "Name" -> "orbital period", 
      "PhysicalQuantity" -> "Period", "CanonicalUnit" -> {HoldForm["Years"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]^2 == 
    Quantity[4*Pi^2, 1/("GravitationalConstant"*"SolarMass")]*
     QuantityVariable["a", "Name" -> "semi\[Hyphen]major axis", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3, 
  HoldPattern[MathematicaFormula[{"LarmorFrequency", 
      "ParticleProperties"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["B", "Name" -> "magnetic induction", 
       "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
        {HoldForm["Teslas"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["\[Gamma]", "Name" -> "gyromagnetic ratio", 
       "PhysicalQuantity" -> "MagneticFrequencyShift", 
       "CanonicalUnit" -> {HoldForm[1/("Seconds"*"Teslas")]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"MassUnit", -1}, 
         {"TimeUnit", 1}}], QuantityVariable["\[Gamma]", 
      "Name" -> "gyromagnetic ratio", "PhysicalQuantity" -> 
       "MagneticFrequencyShift", "CanonicalUnit" -> 
       {HoldForm[1/("Seconds"*"Teslas")]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 1}, {"MassUnit", -1}, {"TimeUnit", 1}}] == 
     (QuantityVariable["g", "Name" -> "g\[Hyphen]factor", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["Q", 
        "Name" -> "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
        "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}])/
      (2*QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> 
         "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
        "UnitDimensions" -> {"MassUnit", 1}]), 
    QuantityVariable["\[Nu]", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]/(2*Pi)}, 
  HoldPattern[MathematicaFormula[{"LarmorFrequency", "Standard"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["B", "Name" -> "magnetic induction", 
       "PhysicalQuantity" -> "MagneticInduction", "CanonicalUnit" -> 
        {HoldForm["Teslas"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["\[Gamma]", "Name" -> "gyromagnetic ratio", 
       "PhysicalQuantity" -> "MagneticFrequencyShift", 
       "CanonicalUnit" -> {HoldForm[1/("Seconds"*"Teslas")]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"MassUnit", -1}, 
         {"TimeUnit", 1}}], QuantityVariable["\[Nu]", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]/(2*Pi)}, 
  HoldPattern[MathematicaFormula[{"LensMakerEquation", 
      "AmbientMediumRefractiveIndex"}]] :> 
   QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
    (-1 + QuantityVariable[Subscript["n", "l"], 
        "Name" -> "refractive index of lens material", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/QuantityVariable[Subscript["n", "m"], 
        "Name" -> "refractive index of ambient medium", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*
     (QuantityVariable[Subscript["r", 1], "Name" -> 
         "radius of curvature for front surface of lens", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) - 
      QuantityVariable[Subscript["r", 2], "Name" -> 
         "radius of curvature for back surface of lens", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
      (QuantityVariable["d", "Name" -> "lens thickness", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        (QuantityVariable[Subscript["n", "l"], "Name" -> 
           "refractive index of lens material", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] - QuantityVariable[Subscript["n", "m"], 
          "Name" -> "refractive index of ambient medium", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
       (QuantityVariable[Subscript["n", "l"], "Name" -> 
          "refractive index of lens material", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable[Subscript["r", 1], 
         "Name" -> "radius of curvature for front surface of lens", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable[Subscript["r", 2], "Name" -> 
          "radius of curvature for back surface of lens", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])), 
  HoldPattern[MathematicaFormula[{"LensMakerEquation", "Standard"}]] :> 
   QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]^(-1) == 
    (-1 + QuantityVariable[Subscript["n", "l"], 
       "Name" -> "refractive index of lens material", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])*(QuantityVariable[Subscript["r", 1], 
        "Name" -> "radius of curvature for front surface of lens", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) - 
      QuantityVariable[Subscript["r", 2], "Name" -> 
         "radius of curvature for back surface of lens", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^(-1) + 
      (QuantityVariable["d", "Name" -> "lens thickness", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        (-1 + QuantityVariable[Subscript["n", "l"], 
          "Name" -> "refractive index of lens material", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
       (QuantityVariable[Subscript["n", "l"], "Name" -> 
          "refractive index of lens material", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable[Subscript["r", 1], 
         "Name" -> "radius of curvature for front surface of lens", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        QuantityVariable[Subscript["r", 2], "Name" -> 
          "radius of curvature for back surface of lens", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])), 
  HoldPattern[MathematicaFormula[{"LewisNumber", "ThermalConductivity"}]] :> 
   QuantityVariable["Le", "Name" -> "Lewis number", 
     "PhysicalQuantity" -> "LewisNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["k", "Name" -> "thermal conductivity", 
      "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]/
     (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["D", 
       "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
        "DiffusionCoefficient", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"LewisNumber", "ThermalDiffusivity"}]] :> 
   QuantityVariable["Le", "Name" -> "Lewis number", 
     "PhysicalQuantity" -> "LewisNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Alpha]", "Name" -> "thermal diffusivity", 
      "PhysicalQuantity" -> "ThermalDiffusivity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}]/QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"LorentzForce", "Current"}]] :> 
   QuantityVariable[Subscript["F", "L"], "Name" -> "Lorentz force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["B", 
      "Name" -> "magnetic flux density", "PhysicalQuantity" -> 
       "MagneticFluxDensity", "CanonicalUnit" -> {HoldForm["Teslas"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}]*QuantityVariable["I", 
      "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
      "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
       {"ElectricCurrentUnit", 1}]*QuantityVariable["l", 
      "Name" -> "length of the wire", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"LorentzForce", "ParticleSpeed"}]] :> 
   QuantityVariable[Subscript["F", "L"], "Name" -> "Lorentz force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["B", 
      "Name" -> "magnetic flux density", "PhysicalQuantity" -> 
       "MagneticFluxDensity", "CanonicalUnit" -> {HoldForm["Teslas"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}]*QuantityVariable["Q", "Name" -> "electric charge", 
      "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
       {HoldForm["Coulombs"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
     QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"MohrsCircle", "PlaneNormalStrainX"}]] :> 
   QuantityVariable[Subscript["\[Epsilon]", Superscript["x", "\[Prime]"]], 
     "Name" -> "normal strain in new x direction", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (Cos[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
       (QuantityVariable[Subscript["\[Epsilon]", "x"], 
         "Name" -> "normal strain in x direction", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - QuantityVariable[Subscript["\[Epsilon]", "y"], 
         "Name" -> "normal strain in y direction", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/2 + 
     (QuantityVariable[Subscript["\[Epsilon]", "x"], 
        "Name" -> "normal strain in x direction", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable[Subscript["\[Epsilon]", "y"], 
        "Name" -> "normal strain in y direction", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/2 + 
     (QuantityVariable[Subscript["\[Gamma]", "x\[InvisibleComma]y"], 
        "Name" -> "shear strain in x\[Hyphen]y coordinates", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       Sin[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/2, 
  HoldPattern[MathematicaFormula[{"MohrsCircle", "PlaneNormalStrainY"}]] :> 
   QuantityVariable[Subscript["\[Epsilon]", Superscript["y", "\[Prime]"]], 
     "Name" -> "normal strain in new y direction", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    -(Cos[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
           "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
            {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
        (QuantityVariable[Subscript["\[Epsilon]", "x"], 
          "Name" -> "normal strain in x direction", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] - QuantityVariable[Subscript["\[Epsilon]", "y"], 
          "Name" -> "normal strain in y direction", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))/2 + 
     (QuantityVariable[Subscript["\[Epsilon]", "x"], 
        "Name" -> "normal strain in x direction", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable[Subscript["\[Epsilon]", "y"], 
        "Name" -> "normal strain in y direction", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/2 - 
     (QuantityVariable[Subscript["\[Gamma]", "x\[InvisibleComma]y"], 
        "Name" -> "shear strain in x\[Hyphen]y coordinates", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       Sin[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/2, 
  HoldPattern[MathematicaFormula[{"MohrsCircle", "PlaneNormalStressX"}]] :> 
   QuantityVariable[Subscript["\[Sigma]", Superscript["x", "\[Prime]"]], 
     "Name" -> "normal stress in new x direction", "PhysicalQuantity" -> 
      "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    (Cos[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
       (QuantityVariable[Subscript["\[Sigma]", "x"], 
         "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}] - QuantityVariable[Subscript["\[Sigma]", "y"], 
         "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}]))/2 + 
     (QuantityVariable[Subscript["\[Sigma]", "x"], 
        "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
         "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}] + QuantityVariable[Subscript["\[Sigma]", "y"], 
        "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
         "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}])/2 + QuantityVariable[Subscript["\[Tau]", 
        "x\[InvisibleComma]y"], "Name" -> "shear stress", 
       "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      Sin[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"MohrsCircle", "PlaneNormalStressY"}]] :> 
   QuantityVariable[Subscript["\[Sigma]", Superscript["y", "\[Prime]"]], 
     "Name" -> "normal stress in new y direction", "PhysicalQuantity" -> 
      "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    -(Cos[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
           "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
            {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
        (QuantityVariable[Subscript["\[Sigma]", "x"], 
          "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
           "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
          "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
            {"TimeUnit", -2}}] - QuantityVariable[Subscript["\[Sigma]", "y"], 
          "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
           "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
          "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
            {"TimeUnit", -2}}]))/2 + 
     (QuantityVariable[Subscript["\[Sigma]", "x"], 
        "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
         "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}] + QuantityVariable[Subscript["\[Sigma]", "y"], 
        "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
         "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}])/2 - QuantityVariable[Subscript["\[Tau]", 
        "x\[InvisibleComma]y"], "Name" -> "shear stress", 
       "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*
      Sin[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"MohrsCircle", "PlaneShearStrain"}]] :> 
   QuantityVariable[Subscript["\[Gamma]", Superscript["x\[InvisibleComma]y", 
        "\[Prime]"]], "Name" -> 
       "shear strain in new x\[Hyphen]y coordinates", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]/2 == 
    (Cos[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
       QuantityVariable[Subscript["\[Gamma]", "x\[InvisibleComma]y"], 
        "Name" -> "shear strain in x\[Hyphen]y coordinates", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])/2 - 
     ((QuantityVariable[Subscript["\[Epsilon]", "x"], 
         "Name" -> "normal strain in x direction", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - QuantityVariable[Subscript["\[Epsilon]", "y"], 
         "Name" -> "normal strain in y direction", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*Sin[2*QuantityVariable["\[Theta]", 
          "Name" -> "plane angle", "PhysicalQuantity" -> "Angle", 
          "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]])/2, 
  HoldPattern[MathematicaFormula[{"MohrsCircle", "PlaneShearStress"}]] :> 
   QuantityVariable[Subscript["\[Tau]", Superscript["x\[InvisibleComma]y", 
       "\[Prime]"]], "Name" -> "shear stress in new frame", 
     "PhysicalQuantity" -> "Stress", "CanonicalUnit" -> 
      {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Cos[2*QuantityVariable["\[Theta]", "Name" -> "plane angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
      QuantityVariable[Subscript["\[Tau]", "x\[InvisibleComma]y"], 
       "Name" -> "shear stress", "PhysicalQuantity" -> "Stress", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] - 
     ((QuantityVariable[Subscript["\[Sigma]", "x"], 
         "Name" -> "normal stress in the x direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}] - QuantityVariable[Subscript["\[Sigma]", "y"], 
         "Name" -> "normal stress in the y direction", "PhysicalQuantity" -> 
          "Stress", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
         "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
           {"TimeUnit", -2}}])*Sin[2*QuantityVariable["\[Theta]", 
          "Name" -> "plane angle", "PhysicalQuantity" -> "Angle", 
          "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]])/2, 
  HoldPattern[MathematicaFormula[{"Momentum", "KineticEnergy"}]] :> 
   QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
      "Momentum", "CanonicalUnit" -> 
      {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == 
    Sqrt[2]*Sqrt[QuantityVariable["K", "Name" -> "kinetic energy", 
        "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
         {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"Momentum", "Speed"}]] :> 
   QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
      "Momentum", "CanonicalUnit" -> 
      {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == QuantityVariable["m", "Name" -> "mass", 
      "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
       {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
     QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"MomentumRelativistic", 
      "KineticEnergy"}]] :> QuantityVariable["K", "Name" -> "kinetic energy", 
     "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {HoldForm["Joules"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == Quantity[None, "SpeedOfLight"]*
     Sqrt[-2*QuantityVariable["K", "Name" -> "kinetic energy", 
         "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
          {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["m", 
         "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}] + QuantityVariable["p", "Name" -> "momentum", 
         "PhysicalQuantity" -> "Momentum", "CanonicalUnit" -> 
          {HoldForm["Megaelectronvolts"/"SpeedOfLight"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
           {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula[{"MomentumRelativistic", "Velocity"}]] :> 
   QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
      "Momentum", "CanonicalUnit" -> 
      {HoldForm["Megaelectronvolts"/"SpeedOfLight"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == (QuantityVariable["m", "Name" -> "mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula[{"MooresLaw", "YearsFromNow"}]] :> 
   QuantityVariable["TperIC", "Name" -> "transistors per IC", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1953125*2^(10 + QuantityVariable["y", "Name" -> "years from now", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/2), 
  HoldPattern[MathematicaFormula[{"MultipleSlitDiffraction", 
      "Wavelength"}]] :> 
   QuantityVariable[Subscript[Style["I", Italic], "\[Theta]"]/
      Subscript[Style["I", Italic], 0], 
     "Name" -> "normalized transmitted intensity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (ChebyshevU[-1 + QuantityVariable["n", "Name" -> "number of slits", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"], 
        Cos[(Pi*QuantityVariable["d", "Name" -> "slit separation distance", 
            "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
           Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
             "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
              {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
          QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
           "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
            {HoldForm["Micrometers"]}, "UnitDimensions" -> 
            {"LengthUnit", 1}]]]^2*
      Sinc[(Pi*QuantityVariable["w", "Name" -> "slit width", 
           "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
            "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
             {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
         QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
          "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
           {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]]^
       2)/QuantityVariable["n", "Name" -> "number of slits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^2, 
  HoldPattern[MathematicaFormula[{"MultipleSlitDiffraction", 
      "Wavenumber"}]] :> 
   QuantityVariable[Subscript[Style["I", Italic], "\[Theta]"]/
      Subscript[Style["I", Italic], 0], 
     "Name" -> "normalized transmitted intensity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (ChebyshevU[-1 + QuantityVariable["n", "Name" -> "number of slits", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"], 
        Cos[(QuantityVariable["d", "Name" -> "slit separation distance", 
            "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
           QuantityVariable["k", "Name" -> "wavenumber", 
            "PhysicalQuantity" -> "Wavenumber", "CanonicalUnit" -> 
             {HoldForm[1/"Meters"]}, "UnitDimensions" -> {"LengthUnit", -1}]*
           Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
             "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
              {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
          2]]^2*Sinc[(QuantityVariable["k", "Name" -> "wavenumber", 
           "PhysicalQuantity" -> "Wavenumber", "CanonicalUnit" -> 
            {HoldForm[1/"Meters"]}, "UnitDimensions" -> {"LengthUnit", -1}]*
          QuantityVariable["w", "Name" -> "slit width", "PhysicalQuantity" -> 
            "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]*
          Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
            "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
             {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
         2]^2)/QuantityVariable["n", "Name" -> "number of slits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^2, 
  HoldPattern[MathematicaFormula[{"MythOfTheNines", "Annually"}]] :> 
   QuantityVariable["ADT", "Name" -> "annual downtime", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
      {HoldForm["Seconds"], "Unities"}, "UnitDimensions" -> 
      {"TimeUnit", 1}] == Quantity[None, "Years"]*
     (1 - QuantityVariable["A", "Name" -> "availability", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"MythOfTheNines", "Monthly"}]] :> 
   QuantityVariable["MDT", "Name" -> "monthly downtime", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
      {HoldForm["Seconds"], "Unities"}, "UnitDimensions" -> 
      {"TimeUnit", 1}] == Quantity[None, "Months"]*
     (1 - QuantityVariable["A", "Name" -> "availability", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"MythOfTheNines", "Weekly"}]] :> 
   QuantityVariable["WDT", "Name" -> "weekly downtime", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
      {HoldForm["Seconds"], "Unities"}, "UnitDimensions" -> 
      {"TimeUnit", 1}] == Quantity[None, "Weeks"]*
     (1 - QuantityVariable["A", "Name" -> "availability", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"NernstEquation", 
      "EquilibriumConstant"}]] :> QuantityVariable[Superscript["E", "o"], 
     "Name" -> "standard cell potential", "PhysicalQuantity" -> 
      "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
       {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    Row[{Log[QuantityVariable["K", "Name" -> "equilibrium constant", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]]}]*
     Row[{(Quantity[None, "MolarGasConstant"/"FaradayConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["n", 
         "Name" -> "number of electrons transferred", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]}], 
  HoldPattern[MathematicaFormula[{"NernstEquation", "ReactionQuotient"}]] :> 
   QuantityVariable[Subscript["E", "cell"], "Name" -> "cell potential", 
     "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
      {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    QuantityVariable[Superscript["E", "o"], 
      "Name" -> "standard cell potential", "PhysicalQuantity" -> 
       "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] - 
     Row[{Log[QuantityVariable["Q", "Name" -> "reaction quotient", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]]}]*
      Row[{(Quantity[None, "MolarGasConstant"/"FaradayConstant"]*
          QuantityVariable["T", "Name" -> "temperature", 
           "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
            {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
             1}])/QuantityVariable["n", "Name" -> 
           "number of electrons transferred", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]}], 
  HoldPattern[MathematicaFormula[{"NumericalAperture", 
      "ApertureDiameter"}]] :> QuantityVariable["NA", 
     "Name" -> "numerical aperture", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["D", "Name" -> "diameter of aperture", 
      "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     (2*Sqrt[1 + QuantityVariable["D", "Name" -> "diameter of aperture", 
           "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2/
         (4*QuantityVariable["f", "Name" -> "focal length", 
            "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)]*
      QuantityVariable["f", "Name" -> "focal length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"NumericalAperture", "FNumber"}]] :> 
   QuantityVariable["NA", "Name" -> "numerical aperture", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1/(2*Sqrt[1 + 1/(4*QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]^2)]*
      QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"OxygenDelivery", "CardiacOutput"}]] :> 
   QuantityVariable[Subscript["DO", 2], "Name" -> "oxygen delivery", 
     "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
      {HoldForm["Liters"/"Minutes"]}, "UnitDimensions" -> 
      {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    QuantityVariable["Q", "Name" -> "cardiac output", 
      "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
       {HoldForm["Liters"/"Minutes"]}, "UnitDimensions" -> 
       {{"LengthUnit", 3}, {"TimeUnit", -1}}]*QuantityVariable[
      Subscript["CaO", 2], "Name" -> "arterial oxygen content", 
      "PhysicalQuantity" -> "VolumeFraction", "CanonicalUnit" -> 
       {HoldForm["Milliliters"/"Deciliters"]}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"OxygenDelivery", "HeartRate"}]] :> 
   QuantityVariable[Subscript["DO", 2], "Name" -> "oxygen delivery", 
     "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
      {HoldForm["Liters"/"Minutes"]}, "UnitDimensions" -> 
      {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    QuantityVariable["HR", "Name" -> "heart rate", "PhysicalQuantity" -> 
       "BeatRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["beats"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["SV", "Name" -> "stroke volume", 
      "PhysicalQuantity" -> "StrokeVolume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"/IndependentUnit["beats"]]}, 
      "UnitDimensions" -> {"LengthUnit", 3}]*QuantityVariable[
      Subscript["CaO", 2], "Name" -> "arterial oxygen content", 
      "PhysicalQuantity" -> "VolumeFraction", "CanonicalUnit" -> 
       {HoldForm["Milliliters"/"Deciliters"]}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"ParallelPlateCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (QuantityVariable["A", "Name" -> "area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable["\[Epsilon]", 
       "Name" -> "permittivity", "PhysicalQuantity" -> 
        "ElectricPermittivity", "CanonicalUnit" -> 
        {HoldForm["Farads"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}])/QuantityVariable["d", "Name" -> "distance", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ParallelPlateCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Quantity[None, "ElectricConstant"]*QuantityVariable["A", 
       "Name" -> "area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}]*QuantityVariable[Subscript["\[Epsilon]", "r"], 
       "Name" -> "relative permittivity", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ParallelPlateCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Quantity[None, "ElectricConstant"]*QuantityVariable["A", 
       "Name" -> "area", "PhysicalQuantity" -> "Area", 
       "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
        {"LengthUnit", 2}])/QuantityVariable["d", "Name" -> "distance", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ParticleCollision", "Inelastic"}]] :> 
   QuantityVariable[Subscript["m", "1"], "Name" -> "mass of first object", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable[Subscript["v", "1,i"], 
       "Name" -> "initial velocity of first object", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
     QuantityVariable[Subscript["m", "2"], "Name" -> "mass of second object", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable[Subscript["v", "2,i"], 
       "Name" -> "initial velocity of second object", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    (QuantityVariable[Subscript["m", "1"], "Name" -> "mass of first object", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
      QuantityVariable[Subscript["m", "2"], "Name" -> 
        "mass of second object", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])*QuantityVariable[Subscript["v", "f"], 
      "Name" -> "final velocity of the combined object", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"ParticleCollision", "Surface"}]] :> 
   QuantityVariable[Subscript["v", "1,i"], 
     "Name" -> "initial velocity of first object", "PhysicalQuantity" -> 
      "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    -QuantityVariable[Subscript["v", "f"], 
      "Name" -> "final velocity of the combined object", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"PecletNumber", "ThermalConductivity"}]] :> 
   QuantityVariable["Pe", "Name" -> 
      "P\[EAcute]clet number for heat transfer", "PhysicalQuantity" -> 
      "PecletNumberHeatTransfer", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
       "Name" -> "characteristic length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable["v", 
       "Name" -> "characteristic speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      QuantityVariable["\[Rho]", "Name" -> "mass density", 
       "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
        {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}])/QuantityVariable["k", 
      "Name" -> "thermal conductivity", "PhysicalQuantity" -> 
       "ThermalConductivity", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula[{"PecletNumber", "ThermalDiffusivity"}]] :> 
   QuantityVariable["Pe", "Name" -> 
      "P\[EAcute]clet number for heat transfer", "PhysicalQuantity" -> 
      "PecletNumberHeatTransfer", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/QuantityVariable["\[Alpha]", 
      "Name" -> "thermal diffusivity", "PhysicalQuantity" -> 
       "ThermalDiffusivity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"Pendulum", "MomentOfInertia"}]] :> 
   {QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> "Period", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}] == 
     4*EllipticK[Sin[QuantityVariable[Subscript["\[Theta]", 0], 
           "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]/2]^2]*
      Sqrt[QuantityVariable["I", "Name" -> "moment of inertia", 
         "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
          {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}}]/
        (QuantityVariable["g", "Name" -> "gravitational acceleration", 
          "PhysicalQuantity" -> "GravitationalAcceleration", 
          "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
         QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
           "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["m", 
          "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}])], QuantityVariable["f", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable[Subscript["v", "max"], "Name" -> "maximum speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[2]*Sqrt[(1 - Cos[QuantityVariable[Subscript["\[Theta]", 0], 
           "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]])*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
         "Name" -> "length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"Pendulum", "Standard"}]] :> 
   {QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> "Period", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}] == 
     4*EllipticK[Sin[QuantityVariable[Subscript["\[Theta]", 0], 
           "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]/2]^2]*
      Sqrt[QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable[Subscript["v", "max"], "Name" -> "maximum speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[2]*Sqrt[(1 - Cos[QuantityVariable[Subscript["\[Theta]", 0], 
           "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]])*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
         "Name" -> "length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"PendulumSmallOscillations", 
      "MomentOfInertia"}]] :> {QuantityVariable["T", "Name" -> "period", 
      "PhysicalQuantity" -> "Period", "CanonicalUnit" -> 
       {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}] == 
     2*Pi*Sqrt[QuantityVariable["I", "Name" -> "moment of inertia", 
         "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
          {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}}]/
        (QuantityVariable["g", "Name" -> "gravitational acceleration", 
          "PhysicalQuantity" -> "GravitationalAcceleration", 
          "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
         QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
           "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["m", 
          "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}])], QuantityVariable["f", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable[Subscript["v", "max"], "Name" -> "maximum speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[2]*Sqrt[(1 - Cos[QuantityVariable[Subscript["\[Theta]", 0], 
           "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]])*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
         "Name" -> "length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"PendulumSmallOscillations", 
      "Standard"}]] :> {QuantityVariable["T", "Name" -> "period", 
      "PhysicalQuantity" -> "Period", "CanonicalUnit" -> 
       {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}] == 
     2*Pi*Sqrt[QuantityVariable["l", "Name" -> "length", 
         "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
        QuantityVariable["g", "Name" -> "gravitational acceleration", 
         "PhysicalQuantity" -> "GravitationalAcceleration", 
         "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable[Subscript["v", "max"], "Name" -> "maximum speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[2]*Sqrt[(1 - Cos[QuantityVariable[Subscript["\[Theta]", 0], 
           "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
           "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
            {"AngleUnit", 1}]])*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
         "Name" -> "length", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"Perpetuity", 
      "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["PMT", "Name" -> "periodic payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["i", 
       "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"Perpetuity", "Standard"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    QuantityVariable["PMT", "Name" -> "periodic payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]/
     QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"pH", "HPlusConcentration"}]] :> 
   QuantityVariable["pH", "Name" -> "pH", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    -(Log[Quantity[None, "Liters"/"Moles"]*QuantityVariable[
         Row[{"[", Superscript["H", "+"], "]"}], "Name" -> 
          "hydrogen ion concentration", "PhysicalQuantity" -> "Molarity", 
         "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
         "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]]/
      Log[10]), HoldPattern[MathematicaFormula[{"pH", "pOH"}]] :> 
   QuantityVariable["pH", "Name" -> "pH", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    14 - QuantityVariable["pOH", "Name" -> "pOH", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"PhotonEnergy", "AngularFrequency"}]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "ReducedPlanckConstant"]*QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"PhotonEnergy", "Frequency"}]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "PlanckConstant"]*QuantityVariable["\[Nu]", 
      "Name" -> "frequency", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"PhotonEnergy", "Wavelength"}]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[1, "PlanckConstant"*"SpeedOfLight"]/QuantityVariable[
      "\[Lambda]", "Name" -> "wavelength", "PhysicalQuantity" -> 
       "Wavelength", "CanonicalUnit" -> {HoldForm["Micrometers"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PhotonMomentum", "Frequency"}]] :> 
   QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
      "Momentum", "CanonicalUnit" -> 
      {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == Quantity[1, "PlanckConstant"/"SpeedOfLight"]*
     QuantityVariable["\[Nu]", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"PhotonMomentum", 
      "SpectroscopicWavenumber"}]] :> 
   QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
      "Momentum", "CanonicalUnit" -> 
      {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == Quantity[None, "ReducedPlanckConstant"]*
     QuantityVariable[OverTilde["\[Nu]"], 
      "Name" -> "spectroscopic wavenumber", "PhysicalQuantity" -> 
       "SpectroscopicWavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", -1}], 
  HoldPattern[MathematicaFormula[{"PhotonMomentum", "Wavelength"}]] :> 
   QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
      "Momentum", "CanonicalUnit" -> 
      {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -1}}] == Quantity[None, "PlanckConstant"]/
     QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PhotonWavelength", "Energy"}]] :> 
   QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[1, "PlanckConstant"*"SpeedOfLight"]/QuantityVariable[
      "\[Lambda]", "Name" -> "wavelength", "PhysicalQuantity" -> 
       "Wavelength", "CanonicalUnit" -> {HoldForm["Micrometers"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PhotonWavelength", "Frequency"}]] :> 
   QuantityVariable["\[Nu]", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[None, "SpeedOfLight"]/QuantityVariable["\[Lambda]", 
      "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PhotonWavelength", "Wavenumber"}]] :> 
   QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
      "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", -1}] == 
    (2*Pi)/QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"pKa", "AcidityConstant"}]] :> 
   QuantityVariable[Subscript["pK", "a"], "Name" -> "log acidity constant", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -(Log[QuantityVariable[Subscript["K", "a"], "Name" -> "acidity constant", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]]/Log[10]), 
  HoldPattern[MathematicaFormula[{"pKa", "Concentrations"}]] :> 
   QuantityVariable[Subscript["pK", "a"], "Name" -> "log acidity constant", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    -(Log[(Quantity[None, "Liters"/"Moles"]*QuantityVariable[
          Row[{"[", Superscript["A", "-"], "]"}], "Name" -> 
           "conjugate base concentration", "PhysicalQuantity" -> "Molarity", 
          "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
          "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}]*
         QuantityVariable[Row[{"[", Superscript["H", "+"], "]"}], 
          "Name" -> "hydrogen ion concentration", "PhysicalQuantity" -> 
           "Molarity", "CanonicalUnit" -> {HoldForm["Moles"/"Liters"]}, 
          "UnitDimensions" -> {{"AmountUnit", 1}, {"LengthUnit", -3}}])/
        QuantityVariable["[HA]", "Name" -> "acid concentration", 
         "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
          {HoldForm["Moles"/"Liters"]}, "UnitDimensions" -> 
          {{"AmountUnit", 1}, {"LengthUnit", -3}}]]/Log[10]), 
  HoldPattern[MathematicaFormula[{"PlanckRadiationLaw", "Frequency"}]] :> 
   QuantityVariable["L"["\[Nu]"], "Name" -> 
      "spectral radiance as function of frequency", 
     "PhysicalQuantity" -> "RadioBrightness", "CanonicalUnit" -> 
      {HoldForm["Watts"/("Hertz"*"Meters"^2*"Steradians")]}, 
     "UnitDimensions" -> {{"MassUnit", 1}, {"SolidAngleUnit", -1}, 
       {"TimeUnit", -2}}] == (Quantity[2, "PlanckConstant"/"SpeedOfLight"^2]*
      QuantityVariable["\[Nu]", "Name" -> "frequency", "PhysicalQuantity" -> 
         "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
        "UnitDimensions" -> {"TimeUnit", -1}]^3)/
     (-1 + E^((Quantity[1, "PlanckConstant"/"BoltzmannConstant"]*
         QuantityVariable["\[Nu]", "Name" -> "frequency", 
          "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
           {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}])/
        QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
          "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
         "UnitDimensions" -> {"TemperatureUnit", 1}])), 
  HoldPattern[MathematicaFormula[{"PlanckRadiationLaw", "Wavelength"}]] :> 
   QuantityVariable["L"["\[Lambda]"], "Name" -> 
      "spectral radiance as function of wavelength", 
     "PhysicalQuantity" -> "SpectralRadianceWRTWavelength", 
     "CanonicalUnit" -> {HoldForm["Watts"/("Meters"^3*"Steradians")]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"SolidAngleUnit", -1}, {"TimeUnit", -3}}] == 
    Quantity[2, "PlanckConstant"*"SpeedOfLight"^2]/
     ((-1 + E^(Quantity[1, ("PlanckConstant"*"SpeedOfLight")/
           "BoltzmannConstant"]/(QuantityVariable["T", 
           "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
           "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
            {"TemperatureUnit", 1}]*QuantityVariable["\[Lambda]", 
           "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
           "CanonicalUnit" -> {HoldForm["Nanometers"]}, "UnitDimensions" -> 
            {"LengthUnit", 1}])))*QuantityVariable["\[Lambda]", 
        "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
        "CanonicalUnit" -> {HoldForm["Nanometers"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^5), 
  HoldPattern[MathematicaFormula[{"PoiseuillesLaw", "Diameter"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate of fluid", 
     "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
      {HoldForm["Liters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (Pi*QuantityVariable["D", "Name" -> "pipe diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4*
      QuantityVariable["\[CapitalDelta]\[InvisibleSpace]P", 
       "Name" -> "pressure difference", "PhysicalQuantity" -> "Pressure", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (128*QuantityVariable["L", "Name" -> "length of pipe", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"PoiseuillesLaw", "Radius"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate of fluid", 
     "PhysicalQuantity" -> "VolumeFlow", "CanonicalUnit" -> 
      {HoldForm["Liters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (Pi*QuantityVariable["R", "Name" -> "radius of pipe", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^4*
      QuantityVariable["\[CapitalDelta]\[InvisibleSpace]P", 
       "Name" -> "pressure difference", "PhysicalQuantity" -> "Pressure", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}])/
     (8*QuantityVariable["L", "Name" -> "length of pipe", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"PowerFactor", 
      "ElectricApparentPower"}]] :> 
   QuantityVariable["PF", "Name" -> "power factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["P", "Name" -> "electric real power", 
      "PhysicalQuantity" -> "ElectricPower", "CanonicalUnit" -> 
       {HoldForm["Watts"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}]/QuantityVariable["S", 
      "Name" -> "electric apparent power", "PhysicalQuantity" -> 
       "ElectricApparentPower", "CanonicalUnit" -> {HoldForm["VAs"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula[{"PrandtlNumber", 
      "ThermalConductivity"}]] :> 
   QuantityVariable["Pr", "Name" -> "Prandtl number for heat transfer", 
     "PhysicalQuantity" -> "PrandtlNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["\[Eta]", 
       "Name" -> "dynamic viscosity", "PhysicalQuantity" -> 
        "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}])/
     QuantityVariable["k", "Name" -> "thermal conductivity", 
      "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
       {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}], 
  HoldPattern[MathematicaFormula[{"PrandtlNumber", "ThermalDiffusivity"}]] :> 
   QuantityVariable["Pr", "Name" -> "Prandtl number for heat transfer", 
     "PhysicalQuantity" -> "PrandtlNumberHeatTransfer", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Nu]", "Name" -> "kinematic viscosity", 
      "PhysicalQuantity" -> "KinematicViscosity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}]/QuantityVariable["\[Alpha]", 
      "Name" -> "thermal diffusivity", "PhysicalQuantity" -> 
       "ThermalDiffusivity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"PresentValueFutureValue", 
      "CompoundingFrequencyDiscrete"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
         "Name" -> "compounding frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["f", 
        "Name" -> "compounding frequency", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["n", "Name" -> "interest periods", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable["PV", 
      "Name" -> "present value", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PresentValueFutureValue", "Standard"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/12)^
      (12*QuantityVariable["n", "Name" -> "interest periods", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable["PV", 
      "Name" -> "present value", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PresentValueFutureValueDates", 
      "CompoundingFrequencyDiscrete"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
         "Name" -> "compounding frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["f", 
        "Name" -> "compounding frequency", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["T", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Years"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}])*QuantityVariable["PV", "Name" -> "present value", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"PresentValueFutureValueDates", 
      "Standard"}]] :> QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/12)^
      (12*QuantityVariable["T", "Name" -> "time", "PhysicalQuantity" -> 
         "Time", "CanonicalUnit" -> {HoldForm["Years"]}, 
        "UnitDimensions" -> {"TimeUnit", 1}])*QuantityVariable["PV", 
      "Name" -> "present value", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ProperVelocity", "Rapidity"}]] :> 
   QuantityVariable["W", "Name" -> "proper velocity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, "SpeedOfLight"]*Sinh[QuantityVariable["\[Theta]", 
       "Name" -> "rapidity", "PhysicalQuantity" -> "Rapidity", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]], 
  HoldPattern[MathematicaFormula[{"ProperVelocity", "Velocity"}]] :> 
   QuantityVariable["W", "Name" -> "proper velocity", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["v", "Name" -> "velocity in observer reference frame", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["SpeedOfLight"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]/
     Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> 
           "velocity in observer reference frame", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["SpeedOfLight"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula[{"QTCorrection", "HeartRate"}]] :> 
   QuantityVariable["QTc", "Name" -> "corrected QT interval", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    QuantityVariable["QT", "Name" -> "QT interval", "PhysicalQuantity" -> 
       "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]/(2*Sqrt[15]*
      Sqrt[Quantity[None, IndependentUnit["beats"]/"Minutes"]/
        QuantityVariable["HR", "Name" -> "heart rate", "PhysicalQuantity" -> 
          "BeatRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["beats"]/
             "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]]), 
  HoldPattern[MathematicaFormula[{"QTCorrection", "RRInterval"}]] :> 
   QuantityVariable["QTc", "Name" -> "corrected QT interval", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    QuantityVariable["QT", "Name" -> "QT interval", "PhysicalQuantity" -> 
       "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}]/
     Sqrt[Quantity[None, "Seconds"^(-1)]*QuantityVariable["RR", 
        "Name" -> "RR interval", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"RadiocarbonYears", 
      "RadiocarbonAmounts"}]] :> QuantityVariable["t"["BP"], 
     "Name" -> "radiocarbon years before present", "PhysicalQuantity" -> 
      "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    Log[QuantityVariable["N", "Name" -> 
         "remaining number of radiocarbon atoms", "PhysicalQuantity" -> 
         "Amount", "CanonicalUnit" -> {HoldForm["Moles"]}, 
        "UnitDimensions" -> {"AmountUnit", 1}]/QuantityVariable[
        Subscript["N", 0], "Name" -> "initial number of radiocarbon atoms", 
        "PhysicalQuantity" -> "Amount", "CanonicalUnit" -> 
         {HoldForm["Moles"]}, "UnitDimensions" -> {"AmountUnit", 1}]]*
     Quantity[-8032.92598766974825218006062381853542120021`4., "Years"], 
  HoldPattern[MathematicaFormula[{"RadiocarbonYears", "SampleC14Ratio"}]] :> 
   QuantityVariable["t"["BP"], "Name" -> "radiocarbon years before present", 
     "PhysicalQuantity" -> "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
     "UnitDimensions" -> {"TimeUnit", 1}] == 
    Log[QuantityVariable["N"/Subscript["N", 0], 
       "Name" -> Row[{"fraction of ", Row[{Superscript["", 14], "C"}], 
          " remaining in sample"}], "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]]*
     Quantity[-8032.92598766974825218006062381853542120021`4., "Years"], 
  HoldPattern[MathematicaFormula[{"RAIDArray", "SpareDisks"}]] :> 
   QuantityVariable["T", "Name" -> "total RAID capacity", 
     "PhysicalQuantity" -> "Information", "CanonicalUnit" -> 
      {HoldForm["Bits"], "Unities"}, "UnitDimensions" -> 
      {"InformationUnit", 1}] == QuantityVariable["D", 
      "Name" -> "drive size", "PhysicalQuantity" -> "Information", 
      "CanonicalUnit" -> {HoldForm["Bits"], "Unities"}, 
      "UnitDimensions" -> {"InformationUnit", 1}]*QuantityVariable["F", 
      "Name" -> "storage factor", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["n", "Name" -> "number of drives", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"RAIDArray", "Standard"}]] :> 
   QuantityVariable["T", "Name" -> "total RAID capacity", 
     "PhysicalQuantity" -> "Information", "CanonicalUnit" -> 
      {HoldForm["Bits"], "Unities"}, "UnitDimensions" -> 
      {"InformationUnit", 1}] == QuantityVariable["D", 
      "Name" -> "drive size", "PhysicalQuantity" -> "Information", 
      "CanonicalUnit" -> {HoldForm["Bits"], "Unities"}, 
      "UnitDimensions" -> {"InformationUnit", 1}]*QuantityVariable["F", 
      "Name" -> "storage factor", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["n", "Name" -> "number of drives", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"RaoultsLaw", "PartialPressures"}]] :> 
   QuantityVariable[Subscript["P", "Total"], 
     "Name" -> "vapor pressure of solution", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Kilopascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable[Subscript["P", "A"], 
      "Name" -> Row[{"partial pressure of species ", Style["A", Italic]}], 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Kilopascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] + 
     QuantityVariable[Subscript["P", "B"], 
      "Name" -> Row[{"partial pressure of species ", Style["B", Italic]}], 
      "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
       {HoldForm["Kilopascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"RaoultsLaw", "VaporPressures"}]] :> 
   QuantityVariable[Subscript["P", "Total"], 
     "Name" -> "vapor pressure of solution", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Kilopascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable[Subscript["\[Chi]", "A"], 
       "Name" -> Row[{"mole fraction of species ", Style["A", Italic]}], 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
       Subsuperscript["P", "A", "\[ThinSpace]o"], 
       "Name" -> Row[{"vapor pressure of species ", Style["A", Italic]}], 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Kilopascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}] + 
     QuantityVariable[Subscript["\[Chi]", "B"], 
       "Name" -> Row[{"mole fraction of species ", Style["B", Italic]}], 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
       Subsuperscript["P", "B", "\[ThinSpace]o"], 
       "Name" -> Row[{"vapor pressure of species ", Style["B", Italic]}], 
       "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
        {HoldForm["Kilopascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"RayleighNumber", 
      "ThermalConductivity"}]] :> QuantityVariable[Subscript["Ra", 1], 
     "Name" -> "Rayleigh number", "PhysicalQuantity" -> "RayleighNumber1", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["c", "Name" -> "specific heat capacity", 
       "PhysicalQuantity" -> "SpecificHeatCapacity", "CanonicalUnit" -> 
        {HoldForm["Joules"/("KelvinsDifference"*"Kilograms")]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"TemperatureDifferenceUnit", 
          -1}, {"TimeUnit", -2}}]*QuantityVariable["l", 
        "Name" -> "characteristic length", "PhysicalQuantity" -> "Length", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^3*QuantityVariable["\[Alpha]", 
       "Name" -> "coefficient of thermal expansion", "PhysicalQuantity" -> 
        "ThermalExpansionCoefficient", "CanonicalUnit" -> 
        {HoldForm[1/"KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", -1}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}]*QuantityVariable["\[Rho]", 
        "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
        "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
        "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]^2)/
     (QuantityVariable["k", "Name" -> "thermal conductivity", 
       "PhysicalQuantity" -> "ThermalConductivity", "CanonicalUnit" -> 
        {HoldForm["Watts"/("KelvinsDifference"*"Meters")]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
         {"TemperatureDifferenceUnit", -1}, {"TimeUnit", -3}}]*
      QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
       "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
        {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"RayleighNumber", 
      "ThermalDiffusivity"}]] :> QuantityVariable[Subscript["Ra", 1], 
     "Name" -> "Rayleigh number", "PhysicalQuantity" -> "RayleighNumber1", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["l", "Name" -> "characteristic length", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^3*
      QuantityVariable["\[Alpha]", "Name" -> 
        "coefficient of thermal expansion", "PhysicalQuantity" -> 
        "ThermalExpansionCoefficient", "CanonicalUnit" -> 
        {HoldForm[1/"KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", -1}]*QuantityVariable[
       "\[CapitalDelta]\[InvisibleSpace]T", "Name" -> 
        "temperature difference", "PhysicalQuantity" -> 
        "TemperatureDifference", "CanonicalUnit" -> 
        {HoldForm["KelvinsDifference"]}, "UnitDimensions" -> 
        {"TemperatureDifferenceUnit", 1}])/
     (QuantityVariable["\[Alpha]", "Name" -> "thermal diffusivity", 
       "PhysicalQuantity" -> "ThermalDiffusivity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["\[Nu]", 
       "Name" -> "kinematic viscosity", "PhysicalQuantity" -> 
        "KinematicViscosity", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"RayleighScatteringParticles", 
      "Diameter"}]] :> QuantityVariable["\[Sigma]", 
     "Name" -> "Rayleigh scattering cross section", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Centimeters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}] == 
    (2*Pi^5*QuantityVariable["d", "Name" -> "diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^6*
      (-1 + QuantityVariable["n", "Name" -> 
           "refractive index within material", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2)^2)/
     (3*(2 + QuantityVariable["n", "Name" -> 
           "refractive index within material", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2)^2*QuantityVariable["\[Lambda]", 
        "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
        "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^4), 
  HoldPattern[MathematicaFormula[{"RayleighScatteringParticles", 
      "Radius"}]] :> QuantityVariable["\[Sigma]", 
     "Name" -> "Rayleigh scattering cross section", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Centimeters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}] == 
    (128*Pi^5*(-1 + QuantityVariable["n", "Name" -> 
           "refractive index within material", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2)^2*QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^6)/
     (3*(2 + QuantityVariable["n", "Name" -> 
           "refractive index within material", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2)^2*QuantityVariable["\[Lambda]", 
        "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
        "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^4), 
  HoldPattern[MathematicaFormula[{"RedshiftWavelength", "Frequency"}]] :> 
   1 + QuantityVariable["z", "Name" -> "redshift", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["f", "e"], 
      "Name" -> "emitted frequency", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}]/QuantityVariable[Subscript["f", "o"], 
      "Name" -> "observed frequency", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"RedshiftWavelength", "Wavelength"}]] :> 
   1 + QuantityVariable["z", "Name" -> "redshift", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["\[Lambda]", "o"], 
      "Name" -> "observed wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]/QuantityVariable[Subscript["\[Lambda]", "e"], 
      "Name" -> "emitted wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ResonantCavity", "Conductivity"}]] :> 
   {QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == Quantity[1/2, "SpeedOfLight"]*
      Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2], 
    QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     2/Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2], 
    QuantityVariable[Subscript["R", "s"], 
      "Name" -> "electromagnetic skin resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     1/(QuantityVariable["\[Delta]", "Name" -> "electromagnetic skin depth", 
        "PhysicalQuantity" -> "Depth", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable[Subscript["\[Sigma]", "c"], 
        "Name" -> "conductor conductivity", "PhysicalQuantity" -> 
         "ElectricConductivity", "CanonicalUnit" -> 
         {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
          {"TimeUnit", 3}}]), QuantityVariable["\[Delta]", 
      "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     1/(Sqrt[Pi]*Sqrt[Quantity[None, "MagneticConstant"]*
         QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
           "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
          "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
          Subscript["\[Sigma]", "c"], "Name" -> "conductor conductivity", 
          "PhysicalQuantity" -> "ElectricConductivity", "CanonicalUnit" -> 
           {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
            {"TimeUnit", 3}}]])}, 
  HoldPattern[MathematicaFormula[{"ResonantCavity", "Resistivity"}]] :> 
   {QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == Quantity[1/2, "SpeedOfLight"]*
      Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2], 
    QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     2/Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2], 
    QuantityVariable[Subscript["R", "s"], 
      "Name" -> "electromagnetic skin resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     QuantityVariable[Subscript["\[Rho]", "c"], 
       "Name" -> "conductor resistivity", "PhysicalQuantity" -> 
        "ElectricResistivity", "CanonicalUnit" -> 
        {HoldForm["Meters"*"Ohms"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 3}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/QuantityVariable["\[Delta]", 
       "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}], QuantityVariable["\[Delta]", 
      "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     Sqrt[(Quantity[None, "MagneticConstant"^(-1)]*QuantityVariable[
          Subscript["\[Rho]", "c"], "Name" -> "conductor resistivity", 
          "PhysicalQuantity" -> "ElectricResistivity", "CanonicalUnit" -> 
           {HoldForm["Meters"*"Ohms"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 3}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}])/QuantityVariable["f", "Name" -> "frequency", 
         "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
          {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]]/
      Sqrt[Pi]}, HoldPattern[MathematicaFormula[{"ResonantCavityDielectric", 
      "Conductivity"}]] :> {QuantityVariable["f", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2]/
      (2*Sqrt[Quantity[None, "MagneticConstant"]*QuantityVariable[
          "\[Epsilon]", "Name" -> "permittivity", "PhysicalQuantity" -> 
           "ElectricPermittivity", "CanonicalUnit" -> 
           {HoldForm["Farads"/"Meters"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
            {"TimeUnit", 4}}]]), QuantityVariable["\[Lambda]", 
      "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     2/Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2], 
    QuantityVariable[Subscript["R", "s"], 
      "Name" -> "electromagnetic skin resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     1/(QuantityVariable["\[Delta]", "Name" -> "electromagnetic skin depth", 
        "PhysicalQuantity" -> "Depth", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable[Subscript["\[Sigma]", "c"], 
        "Name" -> "conductor conductivity", "PhysicalQuantity" -> 
         "ElectricConductivity", "CanonicalUnit" -> 
         {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
          {"TimeUnit", 3}}]), QuantityVariable["\[Delta]", 
      "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     1/(Sqrt[Pi]*Sqrt[Quantity[None, "MagneticConstant"]*
         QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
           "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
          "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
          Subscript["\[Sigma]", "c"], "Name" -> "conductor conductivity", 
          "PhysicalQuantity" -> "ElectricConductivity", "CanonicalUnit" -> 
           {HoldForm["Siemens"/"Meters"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
            {"TimeUnit", 3}}]])}, 
  HoldPattern[MathematicaFormula[{"ResonantCavityDielectric", 
      "Resistivity"}]] :> {QuantityVariable["f", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
     Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2]/
      (2*Sqrt[Quantity[None, "MagneticConstant"]*QuantityVariable[
          "\[Epsilon]", "Name" -> "permittivity", "PhysicalQuantity" -> 
           "ElectricPermittivity", "CanonicalUnit" -> 
           {HoldForm["Farads"/"Meters"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
            {"TimeUnit", 4}}]]), QuantityVariable["\[Lambda]", 
      "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     2/Sqrt[QuantityVariable["m", "Name" -> "first side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["a", "Name" -> "first side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["n", "Name" -> "second side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["b", "Name" -> "second side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
        QuantityVariable["p", "Name" -> "third side mode", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2/
         QuantityVariable["c", "Name" -> "third side length", 
           "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2], 
    QuantityVariable[Subscript["R", "s"], 
      "Name" -> "electromagnetic skin resistance", "PhysicalQuantity" -> 
       "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     QuantityVariable[Subscript["\[Rho]", "c"], 
       "Name" -> "conductor resistivity", "PhysicalQuantity" -> 
        "ElectricResistivity", "CanonicalUnit" -> 
        {HoldForm["Meters"*"Ohms"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 3}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]/QuantityVariable["\[Delta]", 
       "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}], QuantityVariable["\[Delta]", 
      "Name" -> "electromagnetic skin depth", "PhysicalQuantity" -> "Depth", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     Sqrt[(Quantity[None, "MagneticConstant"^(-1)]*QuantityVariable[
          Subscript["\[Rho]", "c"], "Name" -> "conductor resistivity", 
          "PhysicalQuantity" -> "ElectricResistivity", "CanonicalUnit" -> 
           {HoldForm["Meters"*"Ohms"]}, "UnitDimensions" -> 
           {{"ElectricCurrentUnit", -2}, {"LengthUnit", 3}, {"MassUnit", 1}, 
            {"TimeUnit", -3}}])/QuantityVariable["f", "Name" -> "frequency", 
         "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
          {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]]/
      Sqrt[Pi]}, HoldPattern[MathematicaFormula[{"ReturnOnInvestment", 
      "FinalInvestmentValue"}]] :> 
   QuantityVariable["ROI", "Name" -> "return on investment", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable[Subscript["V", "f"], "Name" -> 
        "final investment value", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}] - QuantityVariable[Subscript["V", "i"], 
       "Name" -> "investment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable[Subscript["V", "i"], 
      "Name" -> "investment", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ReturnOnInvestment", "Profits"}]] :> 
   QuantityVariable["ROI", "Name" -> "return on investment", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["PR", "Name" -> "profits", "PhysicalQuantity" -> 
       "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}]/QuantityVariable[
      Subscript["V", "i"], "Name" -> "investment", "PhysicalQuantity" -> 
       "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ReynoldsNumber", "DynamicViscosity"}]] :> 
   QuantityVariable["Re", "Name" -> "Reynolds number", 
     "PhysicalQuantity" -> "ReynoldsNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])/
     QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"ReynoldsNumber", 
      "KinematicViscosity"}]] :> 
   QuantityVariable["Re", "Name" -> "Reynolds number", 
     "PhysicalQuantity" -> "ReynoldsNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["l", "Name" -> "characteristic length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/QuantityVariable["\[Nu]", 
      "Name" -> "kinematic viscosity", "PhysicalQuantity" -> 
       "KinematicViscosity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"RossiterCoefficient", "Frequency"}]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    (QuantityVariable["v", "Name" -> "characteristic speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
      (QuantityVariable["n", "Name" -> "mode number", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] - QuantityVariable["\[Gamma]", 
        "Name" -> "Rossiter coefficient \[Gamma]", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]))/(QuantityVariable["l", 
       "Name" -> "characteristic length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*(QuantityVariable["Ma", "Name" -> "Mach number", 
        "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
       QuantityVariable["\[Kappa]", "Name" -> 
          "Rossiter coefficient \[Kappa]", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
        (-1))), HoldPattern[MathematicaFormula[{"RossiterCoefficient", 
      "StrouhalNumber"}]] :> QuantityVariable["Sr", 
     "Name" -> "Strouhal number", "PhysicalQuantity" -> "StrouhalNumber", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["n", "Name" -> "mode number", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["\[Gamma]", 
       "Name" -> "Rossiter coefficient \[Gamma]", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/(QuantityVariable["Ma", "Name" -> "Mach number", 
       "PhysicalQuantity" -> "MachNumber", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["\[Kappa]", "Name" -> "Rossiter coefficient \[Kappa]", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^(-1)), 
  HoldPattern[MathematicaFormula[{"RowingMachine", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"RowingMachine", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"Running", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Running", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"RutherfordScattering", 
      "DifferentialCrossSection"}]] :> 
   QuantityVariable["d\[Sigma]/d\[CapitalOmega]", 
     "Name" -> "differential cross section", "PhysicalQuantity" -> 
      "ScatteringDifferentialCrossSection", "CanonicalUnit" -> 
      {HoldForm["Meters"^2/"Steradians"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"SolidAngleUnit", -1}}] == 
    (Csc[QuantityVariable["\[Theta]", "Name" -> "scattering angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]/2]^4*Quantity[1/(256*Pi^2), 
       "ElementaryCharge"^2/"ElectricConstant"^2]*
      QuantityVariable["q", "Name" -> "impact charge", "PhysicalQuantity" -> 
         "ElectricCharge", "CanonicalUnit" -> {HoldForm["Coulombs"]}, 
        "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2*
      QuantityVariable["Z", "Name" -> "target atomic number", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^2)/
     QuantityVariable[Subscript["E", "k"], "Name" -> "kinetic energy", 
       "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
        {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]^2, 
  HoldPattern[MathematicaFormula[{"RutherfordScattering", 
      "ScatteringCrossSection"}]] :> 
   {QuantityVariable["\[Sigma]", "Name" -> "scattering cross section", 
      "PhysicalQuantity" -> "CrossSectionalArea", "CanonicalUnit" -> 
       {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}] == 
     ((1 + Cos[QuantityVariable["\[Theta]", "Name" -> "scattering angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]])*Quantity[1/(64*Pi), "ElementaryCharge"^2/
         "ElectricConstant"^2]*QuantityVariable["q", 
         "Name" -> "impact charge", "PhysicalQuantity" -> "ElectricCharge", 
         "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2*
       QuantityVariable["Z", "Name" -> "target atomic number", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^2)/
      ((1 - Cos[QuantityVariable["\[Theta]", "Name" -> "scattering angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["AngularDegrees"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]])*QuantityVariable[Subscript["E", "k"], 
         "Name" -> "kinetic energy", "PhysicalQuantity" -> "Energy", 
         "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]^2), 
    QuantityVariable["P(\[Theta])", "Name" -> 
       "probability of scattering greater than \[Theta]", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (Quantity[1, "AvogadroNumber"/"Moles"]*QuantityVariable["d", 
        "Name" -> "density", "PhysicalQuantity" -> "MassDensity", 
        "CanonicalUnit" -> {HoldForm["Grams"/"Milliliters"]}, 
        "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]*
       QuantityVariable["t", "Name" -> "foil thickness", 
        "PhysicalQuantity" -> "Thickness", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
       QuantityVariable["\[Sigma]", "Name" -> "scattering cross section", 
        "PhysicalQuantity" -> "CrossSectionalArea", "CanonicalUnit" -> 
         {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}])/
      QuantityVariable["M", "Name" -> "molar mass", "PhysicalQuantity" -> 
        "MolarMass", "CanonicalUnit" -> {HoldForm["Kilograms"/"Moles"]}, 
       "UnitDimensions" -> {{"AmountUnit", -1}, {"MassUnit", 1}}]}, 
  HoldPattern[MathematicaFormula[{"SackurTetrodeEquation", 
      "InternalEnergy"}]] :> QuantityVariable["S", "Name" -> "entropy", 
     "PhysicalQuantity" -> "Entropy", "CanonicalUnit" -> 
      {HoldForm["Joules"/"Kelvins"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureUnit", -1}, 
       {"TimeUnit", -2}}] == 
    (5/2 + Log[(8*Pi^(3/2)*((Quantity[None, "PlanckConstant"^(-2)]*
            QuantityVariable["m", "Name" -> "mass of a particle", 
             "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
              {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
            QuantityVariable["U", "Name" -> "internal energy", 
             "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
              {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, {
                "MassUnit", 1}, {"TimeUnit", -2}}])/QuantityVariable["N", 
            "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])^(3/2)*
         Row[{QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> 
              "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
             "UnitDimensions" -> {"LengthUnit", 3}]/QuantityVariable["N", 
             "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
             "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]}])/(3*Sqrt[3])])*
     Quantity[None, "BoltzmannConstant"]*QuantityVariable["N",
      "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"SackurTetrodeEquation", 
      "ThermalDeBroglieWavelength"}]] :> 
   QuantityVariable["S", "Name" -> "entropy", "PhysicalQuantity" -> 
      "Entropy", "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
    (5/2 + Log[QuantityVariable["V", "Name" -> "volume", 
         "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
          {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]/
        (QuantityVariable["N", "Name" -> "particle number", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         QuantityVariable["\[CapitalLambda]", "Name" -> 
            "thermal de Broglie wavelength", "PhysicalQuantity" -> 
            "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^3)])*
     Quantity[None, "BoltzmannConstant"]*QuantityVariable["N",
      "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"SampleSizeForBinomialParameter", 
      "SampleProportion"}]] :> QuantityVariable["n", "Name" -> "sample size", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (2*InverseErf[QuantityVariable["c", "Name" -> "confidence level", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]]^2*
      (1 - QuantityVariable[OverHat["p"], "Name" -> "sample proportion", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable[OverHat["p"], 
       "Name" -> "sample proportion", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["M", "Name" -> "margin of error", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]^2, 
  HoldPattern[MathematicaFormula[{"SampleSizeForBinomialParameter", 
      "Standard"}]] :> QuantityVariable["n", "Name" -> "sample size", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    InverseErf[QuantityVariable["c", "Name" -> "confidence level", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]]^2/
     (2*QuantityVariable["M", "Name" -> "margin of error", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]^2), 
  HoldPattern[MathematicaFormula[{"SchmidtNumber", "DynamicViscosity"}]] :> 
   QuantityVariable["Sc", "Name" -> "Schmidt number", 
     "PhysicalQuantity" -> "SchmidtNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}]/
     (QuantityVariable["D", "Name" -> "diffusion coefficient", 
       "PhysicalQuantity" -> "DiffusionCoefficient", "CanonicalUnit" -> 
        {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"TimeUnit", -1}}]*QuantityVariable["\[Rho]", 
       "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
       "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]), 
  HoldPattern[MathematicaFormula[{"SchmidtNumber", "KinematicViscosity"}]] :> 
   QuantityVariable["Sc", "Name" -> "Schmidt number", 
     "PhysicalQuantity" -> "SchmidtNumber", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["\[Nu]", "Name" -> "kinematic viscosity", 
      "PhysicalQuantity" -> "KinematicViscosity", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}]/QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"ScrewMechanicalAdvantage", "Lead"}]] :> 
   QuantityVariable["MA", "Name" -> "mechanical advantage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (Pi*QuantityVariable["d", "Name" -> "diameter of screw", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["l", "Name" -> "lead of screw thread", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ScrewMechanicalAdvantage", 
      "LeadAngle"}]] :> QuantityVariable["MA", 
     "Name" -> "mechanical advantage", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    (Pi*Cot[QuantityVariable["\[Phi]", "Name" -> 
         "lead angle of screw thread", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]])/2, 
  HoldPattern[MathematicaFormula[{"SeismicMoment", "RuptureArea"}]] :> 
   {QuantityVariable[Subscript["M", 0], "Name" -> "seismic moment", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable["A", "Name" -> "rupture area", "PhysicalQuantity" -> 
        "Area", "CanonicalUnit" -> {HoldForm["Meters"^2]}, 
       "UnitDimensions" -> {"LengthUnit", 2}]*QuantityVariable["\[Mu]", 
       "Name" -> "shear modulus", "PhysicalQuantity" -> "ShearModulus", 
       "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
        {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable[OverBar["D"], "Name" -> 
        "average displacement on rupture", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}], QuantityVariable[Subscript["M", "w"], 
      "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
     (2*(-9.1 + Log[Quantity[None, "Joules"^(-1)]*QuantityVariable[
            Subscript["M", 0], "Name" -> "seismic moment", 
            "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
             {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}]]/Log[10]))/3}, 
  HoldPattern[MathematicaFormula[{"ShakingDogFrequency", "FemaleAnimal"}]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[11.9636, "Hertz"*"Kilograms"^0.22]/
     QuantityVariable["M", "Name" -> "mass of female animal", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^0.22, 
  HoldPattern[MathematicaFormula[{"ShakingDogFrequency", "MaleAnimal"}]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[11.9636, "Hertz"*"Kilograms"^0.22]/
     QuantityVariable["M", "Name" -> "mass of male animal", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^0.22, 
  HoldPattern[MathematicaFormula[{"SnellsLaw", "MediumToMedium"}]] :> 
   QuantityVariable[Subscript["n", 1], "Name" -> 
       "index of refraction (first medium)", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]*Sin[QuantityVariable[Subscript["\[Theta]", 1], 
       "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
       "UnitDimensions" -> {"AngleUnit", 1}]] == 
    QuantityVariable[Subscript["n", 2], "Name" -> 
       "index of refraction (second medium)", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]*Sin[QuantityVariable[Subscript["\[Theta]", 2], 
       "Name" -> "angle of refraction", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
       "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"SnellsLaw", "VacuumToMedium"}]] :> 
   Sin[QuantityVariable[Subscript["\[Theta]", 1], 
      "Name" -> "angle of incidence", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == 
    QuantityVariable[Subscript["n", 2], "Name" -> 
       "index of refraction (second medium)", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]*Sin[QuantityVariable[Subscript["\[Theta]", 2], 
       "Name" -> "angle of refraction", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
       "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"SolidCylinderSelfCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (8 + 4.1*(QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
           "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["r", 
          "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
          "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
           {"LengthUnit", 1}])^0.76)*QuantityVariable["r", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["\[Epsilon]", 
      "Name" -> "permittivity of insulator", "PhysicalQuantity" -> 
       "ElectricPermittivity", "CanonicalUnit" -> 
       {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
        {"TimeUnit", 4}}], 
  HoldPattern[MathematicaFormula[{"SolidCylinderSelfCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[None, "ElectricConstant"]*
     (8 + 4.1*(QuantityVariable["l", "Name" -> "length", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
         QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}])^0.76)*
     QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable[
      Subscript["\[Epsilon]", "r"], "Name" -> "relative permittivity", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"SolidCylinderSelfCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[None, "ElectricConstant"]*
     (8 + 4.1*(QuantityVariable["l", "Name" -> "length", 
          "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
         QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}])^0.76)*
     QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"SpecificRotation", "PureLiquid"}]] :> 
   QuantityVariable["[\[Alpha]]", "Name" -> "specific rotation", 
     "PhysicalQuantity" -> "SpecificRotation", "CanonicalUnit" -> 
      {HoldForm[("AngularDegrees"*"Centimeters"^3)/("Decimeters"*"Grams")]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"LengthUnit", 2}, 
       {"MassUnit", -1}}] == QuantityVariable["\[Alpha]", 
      "Name" -> "optical rotation angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]/
     (QuantityVariable["d", "Name" -> "density", "PhysicalQuantity" -> 
        "MassDensity", "CanonicalUnit" -> {HoldForm["Grams"/"Milliliters"]}, 
       "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]*
      QuantityVariable["l", "Name" -> "path length", "PhysicalQuantity" -> 
        "PathLength", "CanonicalUnit" -> {HoldForm["Decimeters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"SpecificRotation", "Solution"}]] :> 
   QuantityVariable["[\[Alpha]]", "Name" -> "specific rotation", 
     "PhysicalQuantity" -> "SpecificRotation", "CanonicalUnit" -> 
      {HoldForm[("AngularDegrees"*"Centimeters"^3)/("Decimeters"*"Grams")]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"LengthUnit", 2}, 
       {"MassUnit", -1}}] == QuantityVariable["\[Alpha]", 
      "Name" -> "optical rotation angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]/
     (QuantityVariable["c", "Name" -> "concentration", 
       "PhysicalQuantity" -> "MassVolumeFraction", "CanonicalUnit" -> 
        {HoldForm["Grams"/(100*"Milliliters")]}, "UnitDimensions" -> 
        {{"LengthUnit", -3}, {"MassUnit", 1}}]*QuantityVariable["l", 
       "Name" -> "path length", "PhysicalQuantity" -> "PathLength", 
       "CanonicalUnit" -> {HoldForm["Decimeters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationDistance", 
      "Distance"}]] :> QuantityVariable[Subscript["v", "f"], 
      "Name" -> "final speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2 == 
    2*QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
        "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
        "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}] + 
     QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationDistanceCircularForm", 
      "AngularDisplacement"}]] :> 
   QuantityVariable[Subscript["\[Omega]", "f"], 
      "Name" -> "final angular velocity", "PhysicalQuantity" -> 
       "AngularVelocity", "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
      "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 == 
    2*QuantityVariable["\[Alpha]", "Name" -> "angular acceleration", 
       "PhysicalQuantity" -> "AngularAcceleration", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["\[Theta]", 
       "Name" -> "angular displacement", "PhysicalQuantity" -> "Angle", 
       "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
        {"AngleUnit", 1}] + QuantityVariable[Subscript["\[Omega]", "i"], 
       "Name" -> "initial angular velocity", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationTime", 
      "InitialSpeed"}]] :> QuantityVariable[Subscript["v", "f"], 
     "Name" -> "final speed", "PhysicalQuantity" -> "Speed", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
        "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
      "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationTime", 
      "NoInitialSpeed"}]] :> QuantityVariable["v", "Name" -> "speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationTimeCircularForm", 
      "InitialAngularSpeed"}]] :> 
   QuantityVariable[Subscript["\[Omega]", "f"], 
     "Name" -> "final angular velocity", "PhysicalQuantity" -> 
      "AngularVelocity", "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}]*QuantityVariable["\[Alpha]", 
       "Name" -> "angular acceleration", "PhysicalQuantity" -> 
        "AngularAcceleration", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -2}}] + QuantityVariable[
      Subscript["\[Omega]", "i"], "Name" -> "initial angular velocity", 
      "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationTimeCircularForm", 
      "NoInitialAngularSpeed"}]] :> QuantityVariable["\[Omega]", 
     "Name" -> "angular velocity", "PhysicalQuantity" -> "AngularVelocity", 
     "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["\[Alpha]", 
      "Name" -> "angular acceleration", "PhysicalQuantity" -> 
       "AngularAcceleration", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"SphereSelfCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    4*Pi*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Epsilon]", 
      "Name" -> "permittivity of insulator", "PhysicalQuantity" -> 
       "ElectricPermittivity", "CanonicalUnit" -> 
       {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
        {"TimeUnit", 4}}], 
  HoldPattern[MathematicaFormula[{"SphereSelfCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[4*Pi, "ElectricConstant"]*QuantityVariable["r", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable[Subscript["\[Epsilon]", "r"], 
      "Name" -> "relative permittivity", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"SphereSelfCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[4*Pi, "ElectricConstant"]*QuantityVariable["r", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"SphereVolume", "Diameter"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    (Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^3)/6, 
  HoldPattern[MathematicaFormula[{"SphereVolume", "Radius"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    (4*Pi*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
         "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^3)/3, 
  HoldPattern[MathematicaFormula[{"SphericalLawOfCosines", "Angles"}]] :> 
   Cos[QuantityVariable["\[Gamma]", "Name" -> "angle opposite third side", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
       {"AngleUnit", 1}]] == 
    -(Cos[QuantityVariable["\[Alpha]", "Name" -> "angle opposite first side", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
          {"AngleUnit", 1}]]*Cos[QuantityVariable["\[Beta]", 
         "Name" -> "angle opposite second side", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
         "UnitDimensions" -> {"AngleUnit", 1}]]) + 
     Cos[QuantityVariable["c", "Name" -> "third side angular length", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]]*Sin[QuantityVariable["\[Alpha]", 
        "Name" -> "angle opposite first side", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*
      Sin[QuantityVariable["\[Beta]", "Name" -> "angle opposite second side", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"SphericalLawOfCosines", "Sides"}]] :> 
   Cos[QuantityVariable["c", "Name" -> "third side angular length", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
       {"AngleUnit", 1}]] == 
    Cos[QuantityVariable["a", "Name" -> "first side angular length", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]]*Cos[QuantityVariable["b", 
        "Name" -> "second side angular length", "PhysicalQuantity" -> 
         "Angle", "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]] + 
     Cos[QuantityVariable["\[Gamma]", "Name" -> "angle opposite third side", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]]*Sin[QuantityVariable["a", 
        "Name" -> "first side angular length", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"], "Unities"}, 
        "UnitDimensions" -> {"AngleUnit", 1}]]*
      Sin[QuantityVariable["b", "Name" -> "second side angular length", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"SpotImageSize", "FNumber"}]] :> 
   QuantityVariable["d", "Name" -> "spot image diameter", 
     "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    (2*BesselJZero[1, 1]*QuantityVariable["N", "Name" -> "f\[Hyphen]number", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Lambda]", 
       "Name" -> "light wavelength", "PhysicalQuantity" -> "LightWavelength", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}])/Pi, 
  HoldPattern[MathematicaFormula[{"SpotImageSize", "LensFocalLength"}]] :> 
   QuantityVariable["d", "Name" -> "spot image diameter", 
      "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["f", "Name" -> "focal length", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    (2*BesselJZero[1, 1]*QuantityVariable["\[Lambda]", 
       "Name" -> "light wavelength", "PhysicalQuantity" -> "LightWavelength", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}])/(Pi*QuantityVariable["D", 
       "Name" -> "diameter of aperture", "PhysicalQuantity" -> "Diameter", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"StairClimbing", "StairsClimbed"}]] :> 
   QuantityVariable["sc", "Name" -> "stairs", "PhysicalQuantity" -> "Step", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["sr", "Name" -> "step rate", "PhysicalQuantity" -> 
       "StepRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"StairClimbing", "StepHeight"}]] :> 
   QuantityVariable["sc", "Name" -> "stairs", "PhysicalQuantity" -> "Step", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["sr", "Name" -> "step rate", "PhysicalQuantity" -> 
       "StepRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"StairClimbing", "StepRate"}]] :> 
   QuantityVariable["sc", "Name" -> "stairs", "PhysicalQuantity" -> "Step", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["sr", "Name" -> "step rate", "PhysicalQuantity" -> 
       "StepRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["steps"]/
          "Minutes"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"StaticFrictionCoefficient", 
      "CriticalSlidingAngle"}]] :> QuantityVariable[Subscript["\[Mu]", "s"], 
     "Name" -> "static friction coefficient", "PhysicalQuantity" -> 
      "StaticFrictionCoefficient", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Tan[QuantityVariable[Subscript["\[Theta]", "crit"], 
      "Name" -> "critical sliding angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"StaticFrictionCoefficient", 
      "FrictionForce"}]] :> QuantityVariable[Subscript["F", "f"], 
     "Name" -> "friction force", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable[Subscript["F", "n"], "Name" -> "normal force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[
      Subscript["\[Mu]", "s"], "Name" -> "static friction coefficient", 
      "PhysicalQuantity" -> "StaticFrictionCoefficient", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"StirlingCycle", "HeatEngine"}]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    1 - QuantityVariable[Subscript["T", "c"], 
       "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]/QuantityVariable[
       Subscript["T", "h"], "Name" -> "hot reservoir temperature", 
       "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
        {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula[{"StirlingCycle", "HeatPump"}]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["T", "h"], 
      "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}]/
     (-QuantityVariable[Subscript["T", "c"], "Name" -> 
         "cold reservoir temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}] + QuantityVariable[Subscript["T", "h"], 
       "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"StirlingCycle", "Refrigerator"}]] :> 
   QuantityVariable[Subscript["\[Eta]", "th"], 
     "Name" -> "thermal efficiency", "PhysicalQuantity" -> 
      "ThermalEfficiency", "CanonicalUnit" -> {HoldForm["PureUnities"]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable[Subscript["T", "c"], 
      "Name" -> "cold reservoir temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}]/
     (-QuantityVariable[Subscript["T", "c"], "Name" -> 
         "cold reservoir temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}] + QuantityVariable[Subscript["T", "h"], 
       "Name" -> "hot reservoir temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"StoppingDistance", 
      "FixedFrictionCoefficient"}]] :> 
   {QuantityVariable["x", "Name" -> "distance to complete stop", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     QuantityVariable[Subscript["t", "r"], "Name" -> 
         "thinking plus reaction time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}]*QuantityVariable[Subscript["v", 0], 
        "Name" -> "initial velocity", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      (Quantity[1/2, "StandardAccelerationOfGravity"^(-1)]*
        QuantityVariable[Subscript["v", 0], "Name" -> "initial velocity", 
          "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
           {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/
       QuantityVariable["\[Mu]", "Name" -> "friction for common cases", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["t", "Name" -> "time to stop", "PhysicalQuantity" -> 
       "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}] == 
     QuantityVariable[Subscript["t", "r"], "Name" -> 
        "thinking plus reaction time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}] + (Quantity[None, "StandardAccelerationOfGravity"^
          (-1)]*QuantityVariable[Subscript["v", 0], 
         "Name" -> "initial velocity", "PhysicalQuantity" -> "Speed", 
         "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
       QuantityVariable["\[Mu]", "Name" -> "friction for common cases", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"StoppingDistance", 
      "FrictionCoefficient"}]] :> 
   {QuantityVariable["x", "Name" -> "distance to complete stop", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     QuantityVariable[Subscript["t", "r"], "Name" -> 
         "thinking plus reaction time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}]*QuantityVariable[Subscript["v", 0], 
        "Name" -> "initial velocity", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      (Quantity[1/2, "StandardAccelerationOfGravity"^(-1)]*
        QuantityVariable[Subscript["v", 0], "Name" -> "initial velocity", 
          "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
           {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2)/
       QuantityVariable["\[Mu]", "Name" -> "coefficient of friction", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["t", "Name" -> "time to stop", "PhysicalQuantity" -> 
       "Time", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}] == 
     QuantityVariable[Subscript["t", "r"], "Name" -> 
        "thinking plus reaction time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}] + (Quantity[None, "StandardAccelerationOfGravity"^
          (-1)]*QuantityVariable[Subscript["v", 0], 
         "Name" -> "initial velocity", "PhysicalQuantity" -> "Speed", 
         "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
       QuantityVariable["\[Mu]", "Name" -> "coefficient of friction", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"SurfaceWaveMagnitudeDefinition", 
      "DistanceFromStationToEpicenter"}]] :> 
   QuantityVariable[Subscript["M", "S"], "Name" -> "surface wave magnitude", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    3.3 + 0.7209288399593979*Log[Quantity[None, "AngularDegrees"^(-1)]*
        QuantityVariable["\[CapitalDelta]", "Name" -> 
          "angular distance from station to epicenter", "PhysicalQuantity" -> 
          "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
         "UnitDimensions" -> {"AngleUnit", 1}]] + 
     Log[Quantity[1/(2*Pi), "Seconds"/"Nanometers"]*QuantityVariable[
         Subscript["V", "max"], "Name" -> "maximum ground velocity", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}]]/Log[10], 
  HoldPattern[MathematicaFormula[{"SurfaceWaveMagnitudeDefinition", 
      "EpicentralDistance"}]] :> QuantityVariable[Subscript["M", "S"], 
     "Name" -> "surface wave magnitude", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    3.3 + 0.7209288399593979*Log[Quantity[0.008992805755395683, 
         "Kilometers"^(-1)]*QuantityVariable[Subscript["R", "epi"], 
         "Name" -> "distance from station to epicenter", 
         "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]] + 
     Log[Quantity[1/(2*Pi), "Seconds"/"Nanometers"]*QuantityVariable[
         Subscript["V", "max"], "Name" -> "maximum ground velocity", 
         "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -1}}]]/Log[10], 
  HoldPattern[MathematicaFormula[{"Swimming", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Swimming", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"ThermalDeBroglieWavelength", 
      "GeneralForm"}]] :> {QuantityVariable["\[CapitalLambda]", 
      "Name" -> "thermal de Broglie wavelength", "PhysicalQuantity" -> 
       "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (Gamma[1 + QuantityVariable["n", "Name" -> "number of dimensions", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/2]/
        Gamma[1 + QuantityVariable["n", "Name" -> "number of dimensions", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["s", 
            "Name" -> "dispersion relation constant s", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]])^QuantityVariable["n", 
         "Name" -> "number of dimensions", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]^
        (-1)*Quantity[1, "Meters"/("Joules"*"Seconds")]*
      ((Quantity[1, "Joules"/"BoltzmannConstant"]*QuantityVariable["a", 
          "Name" -> "dispersion relation constant a", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/QuantityVariable["T", "Name" -> "temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}])^
       QuantityVariable["s", "Name" -> "dispersion relation constant s", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]^(-1)*
      Row[{Quantity[1/Sqrt[Pi], "PlanckConstant"]}], 
    QuantityVariable["E", "Name" -> "energy", "PhysicalQuantity" -> "Energy", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     Quantity[None, "Joules"]*QuantityVariable["a", 
       "Name" -> "dispersion relation constant a", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(Quantity[None, "Seconds"/("Kilograms"*"Meters")]*
        QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
          "Momentum", "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/
             "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
           {"MassUnit", 1}, {"TimeUnit", -1}}])^QuantityVariable["s", 
        "Name" -> "dispersion relation constant s", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"ThermalDeBroglieWavelength", 
      "MassiveParticle"}]] :> QuantityVariable["\[CapitalLambda]", 
     "Name" -> "thermal de Broglie wavelength", "PhysicalQuantity" -> 
      "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[1/Sqrt[2*Pi], "PlanckConstant"]/
     Sqrt[Quantity[None, "BoltzmannConstant"]*QuantityVariable["m",
        "Name" -> "mass of a particle", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["T", "Name" -> "temperature", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"ThermalDeBroglieWavelength", 
      "MasslessParticle"}]] :> QuantityVariable["\[CapitalLambda]", 
     "Name" -> "thermal de Broglie wavelength", "PhysicalQuantity" -> 
      "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[1/(2*Pi^(1/3)), ("PlanckConstant"*"SpeedOfLight")/
       "BoltzmannConstant"]/QuantityVariable["T", "Name" -> "temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula[{"TipCalculation", "Standard"}]] :> 
   {QuantityVariable["T", "Name" -> "amount of tip", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     Quantity[1/100, "Percent"^(-1)]*QuantityVariable["B", 
       "Name" -> "amount without tip", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}]*QuantityVariable["P", "Name" -> "tip percentage", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["BT", "Name" -> "amount with tip", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["B", "Name" -> "amount without tip", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
      QuantityVariable["T", "Name" -> "amount of tip", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"TipCalculation", "TotalPerPerson"}]] :> 
   {QuantityVariable["T", "Name" -> "amount of tip", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     Quantity[1/100, "Percent"^(-1)]*QuantityVariable["B", 
       "Name" -> "amount without tip", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}]*QuantityVariable["P", "Name" -> "tip percentage", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["BT", "Name" -> "amount with tip", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["B", "Name" -> "amount without tip", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
      QuantityVariable["T", "Name" -> "amount of tip", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}], 
    QuantityVariable["BP", "Name" -> "amount per person", 
      "PhysicalQuantity" -> "MoneyPerPerson", "CanonicalUnit" -> 
       {HoldForm["USDollars"/IndependentUnit["people"]]}, 
      "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["BT", "Name" -> "amount with tip", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]/
      QuantityVariable["n", "Name" -> "number of people", 
       "PhysicalQuantity" -> "Person", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["people"]]}, "UnitDimensions" -> 
        "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"Torque", "Angle"}]] :> 
   QuantityVariable["\[Tau]", "Name" -> "torque", "PhysicalQuantity" -> 
      "Torque", "CanonicalUnit" -> {HoldForm["Meters"*"Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["F", "Name" -> "force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["r", 
      "Name" -> "distance", "PhysicalQuantity" -> "Distance", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*Sin[QuantityVariable["\[Theta]", "Name" -> "angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"Torque", "Perpendicular"}]] :> 
   QuantityVariable["\[Tau]", "Name" -> "torque", "PhysicalQuantity" -> 
      "Torque", "CanonicalUnit" -> {HoldForm["Meters"*"Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["F", "Name" -> "force", 
      "PhysicalQuantity" -> "Force", "CanonicalUnit" -> 
       {HoldForm["Newtons"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["r", 
      "Name" -> "distance", "PhysicalQuantity" -> "Distance", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"TransformerUniversalEMF", 
      "CrossSectionFluxDensity"}]] :> QuantityVariable[Subscript["E", "rms"], 
     "Name" -> "root\[Hyphen]mean\[Hyphen]square electromotive force", 
     "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
      {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    Sqrt[2]*Pi*QuantityVariable["a", "Name" -> "core cross section", 
      "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
       {HoldForm["Meters"^2]}, "UnitDimensions" -> {"LengthUnit", 2}]*
     QuantityVariable["B", "Name" -> "peak magnetic flux density", 
      "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
       {HoldForm["Teslas"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable["N", 
      "Name" -> "turns", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"TransformerUniversalEMF", 
      "MagneticFlux"}]] :> QuantityVariable[Subscript["E", "rms"], 
     "Name" -> "root\[Hyphen]mean\[Hyphen]square electromotive force", 
     "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
      {HoldForm["Volts"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
    Sqrt[2]*Pi*QuantityVariable["f", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable["N", "Name" -> "turns", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]*QuantityVariable["\[Phi]", "Name" -> "magnetic flux", 
      "PhysicalQuantity" -> "MagneticFlux", "CanonicalUnit" -> 
       {HoldForm["Webers"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"TurkeyPortions", "Adults"}]] :> 
   QuantityVariable["W", "Name" -> "turkey weight", 
     "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
      {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] == 
    Quantity[None, "Pounds"]*QuantityVariable["A", 
      "Name" -> "number of adults", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["P", "Name" -> "meal proportions", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"TwoConnectedSprings", "Parallel"}]] :> 
   QuantityVariable["k", "Name" -> "spring constant", 
     "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
      {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
      {{"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable[Subscript["k", 1], "Name" -> "spring constant 1", 
      "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}] + QuantityVariable[
      Subscript["k", 2], "Name" -> "spring constant 2", 
      "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"TwoConnectedSprings", "Serial"}]] :> 
   QuantityVariable["k", "Name" -> "spring constant", 
      "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
       {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
       {{"MassUnit", 1}, {"TimeUnit", -2}}]^(-1) == 
    QuantityVariable[Subscript["k", 1], "Name" -> "spring constant 1", 
       "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}]^(-1) + 
     QuantityVariable[Subscript["k", 2], "Name" -> "spring constant 2", 
       "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
        {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
        {{"MassUnit", 1}, {"TimeUnit", -2}}]^(-1), 
  HoldPattern[MathematicaFormula[{"TwoCylindersCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Pi*QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["\[Epsilon]", 
       "Name" -> "permittivity of insulator", "PhysicalQuantity" -> 
        "ElectricPermittivity", "CanonicalUnit" -> 
        {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}])/ArcCosh[QuantityVariable["d", 
        "Name" -> "distance", "PhysicalQuantity" -> "Distance", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]/(2*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula[{"TwoCylindersCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Quantity[Pi, "ElectricConstant"]*QuantityVariable["l", 
       "Name" -> "length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable[Subscript["\[Epsilon]", "r"], 
       "Name" -> "relative permittivity", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     ArcCosh[QuantityVariable["d", "Name" -> "distance", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
       (2*QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
          "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula[{"TwoCylindersCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Quantity[Pi, "ElectricConstant"]*QuantityVariable["l", 
       "Name" -> "length", "PhysicalQuantity" -> "Length", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}])/ArcCosh[QuantityVariable["d", 
        "Name" -> "distance", "PhysicalQuantity" -> "Distance", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]/(2*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])], 
  HoldPattern[MathematicaFormula[{"TwoSpheresCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (4*Pi*QuantityVariable["\[Epsilon]", "Name" -> 
        "permittivity of insulator", "PhysicalQuantity" -> 
        "ElectricPermittivity", "CanonicalUnit" -> 
        {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]*QuantityVariable[Subscript["r", "inner"], 
       "Name" -> "inner radius", "PhysicalQuantity" -> "Radius", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]*QuantityVariable[Subscript["r", "outer"], 
       "Name" -> "outer radius", "PhysicalQuantity" -> "Radius", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}])/(-QuantityVariable[Subscript["r", "inner"], 
        "Name" -> "inner radius", "PhysicalQuantity" -> "Radius", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}] + QuantityVariable[Subscript["r", "outer"], 
       "Name" -> "outer radius", "PhysicalQuantity" -> "Radius", 
       "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"TwoSpheresCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Quantity[4*Pi, "ElectricConstant"]*QuantityVariable[
       Subscript["r", "inner"], "Name" -> "inner radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["r", "outer"], "Name" -> "outer radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["\[Epsilon]", "r"], 
       "Name" -> "relative permittivity", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (-QuantityVariable[Subscript["r", "inner"], "Name" -> "inner radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
      QuantityVariable[Subscript["r", "outer"], "Name" -> "outer radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"TwoSpheresCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    (Quantity[4*Pi, "ElectricConstant"]*QuantityVariable[
       Subscript["r", "inner"], "Name" -> "inner radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable[Subscript["r", "outer"], "Name" -> "outer radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     (-QuantityVariable[Subscript["r", "inner"], "Name" -> "inner radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
      QuantityVariable[Subscript["r", "outer"], "Name" -> "outer radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"TwoSpheresInContactSelfCapacitance", 
      "ElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    8*Pi*Log[2]*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["\[Epsilon]", "Name" -> "permittivity of insulator", 
      "PhysicalQuantity" -> "ElectricPermittivity", "CanonicalUnit" -> 
       {HoldForm["Picofarads"/"Meters"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 2}, {"LengthUnit", -3}, {"MassUnit", -1}, 
        {"TimeUnit", 4}}], 
  HoldPattern[MathematicaFormula[{"TwoSpheresInContactSelfCapacitance", 
      "RelativeElectricPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[8*Pi*Log[2], "ElectricConstant"]*QuantityVariable["r", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable[Subscript["\[Epsilon]", "r"], 
      "Name" -> "relative permittivity", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"TwoSpheresInContactSelfCapacitance", 
      "VacuumPermittivity"}]] :> 
   QuantityVariable["C", "Name" -> "electric capacitance", 
     "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
      {HoldForm["Farads"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", 2}, 
       {"LengthUnit", -2}, {"MassUnit", -1}, {"TimeUnit", 4}}] == 
    Quantity[8*Pi*Log[2], "ElectricConstant"]*QuantityVariable["r", 
      "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"ValueAtRisk", "Standard"}]] :> 
   Erfc[(5*Sqrt[5]*(Log[Quantity[None, "USDollars"^(-1)]*QuantityVariable[
            Subscript["V", "i"], "Name" -> "initial value", 
            "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
             {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 
              1}]] - Log[Quantity[-1, "USDollars"^(-1)]*QuantityVariable[
             "VaR", "Name" -> "daily value at risk", "PhysicalQuantity" -> 
              "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
             "UnitDimensions" -> {"MoneyUnit", 1}] + 
           Quantity[None, "USDollars"^(-1)]*QuantityVariable[
             Subscript["V", "i"], "Name" -> "initial value", 
             "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
              {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 
               1}]] + QuantityVariable[Subscript["r", "m"], 
           "Name" -> "mean annual return", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/250))/QuantityVariable["\[Sigma]", 
        "Name" -> "volatility", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]]/
     2 == QuantityVariable["p", "Name" -> "cutoff percentile", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"VenturiFlowmeter", 
      "DischargeCoefficient"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (Pi*QuantityVariable["C", "Name" -> "discharge coefficient", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable[Subscript["D", 1], "Name" -> "upstream pipe diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      Sqrt[(QuantityVariable[Subscript["P", 1], "Name" -> 
           "upstream pressure", "PhysicalQuantity" -> "Pressure", 
          "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
           {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] - 
         QuantityVariable[Subscript["P", 2], "Name" -> "downstream pressure", 
          "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}])/QuantityVariable["\[Rho]", 
         "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
         "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
         "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]])/
     (2*Sqrt[2]*Sqrt[-1 + QuantityVariable[Subscript["D", 1], 
           "Name" -> "upstream pipe diameter", "PhysicalQuantity" -> 
            "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^4/
         QuantityVariable[Subscript["D", 2], "Name" -> 
            "downstream pipe diameter", "PhysicalQuantity" -> "Diameter", 
           "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
            {"LengthUnit", 1}]^4]), 
  HoldPattern[MathematicaFormula[{"VenturiFlowmeter", "Standard"}]] :> 
   QuantityVariable["Q", "Name" -> "flow rate", "PhysicalQuantity" -> 
      "VolumeFlow", "CanonicalUnit" -> {HoldForm["Liters"/"Seconds"]}, 
     "UnitDimensions" -> {{"LengthUnit", 3}, {"TimeUnit", -1}}] == 
    (Pi*QuantityVariable[Subscript["D", 1], "Name" -> 
         "upstream pipe diameter", "PhysicalQuantity" -> "Diameter", 
        "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^2*Sqrt[(QuantityVariable[Subscript["P", 1], 
          "Name" -> "upstream pressure", "PhysicalQuantity" -> "Pressure", 
          "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
           {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}] - 
         QuantityVariable[Subscript["P", 2], "Name" -> "downstream pressure", 
          "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
           {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
            {"MassUnit", 1}, {"TimeUnit", -2}}])/QuantityVariable["\[Rho]", 
         "Name" -> "fluid density", "PhysicalQuantity" -> "MassDensity", 
         "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
         "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}]])/
     (2*Sqrt[2]*Sqrt[-1 + QuantityVariable[Subscript["D", 1], 
           "Name" -> "upstream pipe diameter", "PhysicalQuantity" -> 
            "Diameter", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]^4/
         QuantityVariable[Subscript["D", 2], "Name" -> 
            "downstream pipe diameter", "PhysicalQuantity" -> "Diameter", 
           "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
            {"LengthUnit", 1}]^4]), 
  HoldPattern[MathematicaFormula[{"VerticalCylinderLateralSurfaceArea", 
      "Diameter"}]] :> QuantityVariable["S", 
     "Name" -> "lateral surface area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
       "Diameter", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["h", 
      "Name" -> "height", "PhysicalQuantity" -> "Height", 
      "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"VerticalCylinderLateralSurfaceArea", 
      "Radius"}]] :> QuantityVariable["S", "Name" -> "lateral surface area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Meters"^2], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == 2*Pi*QuantityVariable["h", "Name" -> "height", 
      "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"VerticalCylinderTotalSurfaceArea", 
      "Diameter"}]] :> QuantityVariable["S", "Name" -> "total surface area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Meters"^2], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == Pi*QuantityVariable["d", "Name" -> "diameter", 
      "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*(QuantityVariable["d", "Name" -> "diameter", 
        "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
         {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
         {"LengthUnit", 1}]/2 + QuantityVariable["h", "Name" -> "height", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"VerticalCylinderTotalSurfaceArea", 
      "Radius"}]] :> QuantityVariable["S", "Name" -> "total surface area", 
     "PhysicalQuantity" -> "Area", "CanonicalUnit" -> 
      {HoldForm["Meters"^2], "Unities"}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == 2*Pi*QuantityVariable["r", "Name" -> "radius", 
      "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
       {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*(QuantityVariable["h", "Name" -> "height", 
       "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}] + QuantityVariable["r", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"], "Unities"}, "UnitDimensions" -> 
        {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"VerticalCylinderVolume", "Diameter"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    (Pi*QuantityVariable["d", "Name" -> "diameter", "PhysicalQuantity" -> 
         "Diameter", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2*QuantityVariable["h", 
       "Name" -> "height", "PhysicalQuantity" -> "Height", 
       "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}])/4, 
  HoldPattern[MathematicaFormula[{"VerticalCylinderVolume", "Radius"}]] :> 
   QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> "Volume", 
     "CanonicalUnit" -> {HoldForm["Meters"^3], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 3}] == 
    Pi*QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
       "Height", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"Walking", "Pace"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["P", 
      "Name" -> "pace", "PhysicalQuantity" -> "Slowness", 
      "CanonicalUnit" -> {HoldForm["Seconds"/"Meters"]}, 
      "UnitDimensions" -> {{"LengthUnit", -1}, {"TimeUnit", 1}}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
     "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
      {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Walking", "Speed"}]] :> 
   QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
      "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}]*QuantityVariable["v", "Name" -> "speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"WaveSpeed", "AngularFrequency"}]] :> 
   QuantityVariable["v", "Name" -> "wave propagation speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    2*Pi*QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"WaveSpeed", "Frequency"}]] :> 
   QuantityVariable["v", "Name" -> "wave propagation speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
     QuantityVariable["\[Nu]", "Name" -> "frequency", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"WaveSpeed", "Period"}]] :> 
   QuantityVariable["v", "Name" -> "wave propagation speed", 
     "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
       "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Hits"}]] :> 
   QuantityVariable["R", "Name" -> "revenue", "PhysicalQuantity" -> 
      "MoneyPerTime", "CanonicalUnit" -> {HoldForm["USDollars"/"Years"]}, 
     "UnitDimensions" -> {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, IndependentUnit["hits"]^(-1)]*QuantityVariable["CPM", 
      "Name" -> "cost per thousand impressions (CPM)", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
     QuantityVariable["H", "Name" -> "hit rate", "PhysicalQuantity" -> 
       "HitRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["hits"]/
          "Seconds"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable[Subscript["f", "H"], "Name" -> "impressions per hit", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", 
      "Impressions"}]] :> QuantityVariable["R", "Name" -> "revenue", 
     "PhysicalQuantity" -> "MoneyPerTime", "CanonicalUnit" -> 
      {HoldForm["USDollars"/"Years"]}, "UnitDimensions" -> 
      {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["CPM", "Name" -> "cost per thousand impressions (CPM)", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
     QuantityVariable["I", "Name" -> "impression rate", 
      "PhysicalQuantity" -> "ImpressionRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["impressions"]/"Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Visits"}]] :> 
   QuantityVariable["R", "Name" -> "revenue", "PhysicalQuantity" -> 
      "MoneyPerTime", "CanonicalUnit" -> {HoldForm["USDollars"/"Years"]}, 
     "UnitDimensions" -> {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, IndependentUnit["visits"]^(-1)]*QuantityVariable["CPM", 
      "Name" -> "cost per thousand impressions (CPM)", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
     QuantityVariable["V", "Name" -> "visitor rate", 
      "PhysicalQuantity" -> "VisitRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["visits"]/"Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
      Subscript["f", "V"], "Name" -> "impressions per visit", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"WedgeMechanicalAdvantage", "Angle"}]] :> 
   QuantityVariable["MA", "Name" -> "mechanical advantage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Csc[QuantityVariable["\[Theta]", "Name" -> "angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]/2]/2, 
  HoldPattern[MathematicaFormula[{"WedgeMechanicalAdvantage", 
      "LengthThickness"}]] :> QuantityVariable["MA", 
     "Name" -> "mechanical advantage", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["l", "Name" -> "side length", "PhysicalQuantity" -> 
       "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable["w", 
      "Name" -> "thickness", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Weight", "GravitationalAcceleration"}]] :> 
   QuantityVariable["W", "Name" -> "weight", "PhysicalQuantity" -> "Weight", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["g", "Name" -> "gravitational acceleration", 
      "PhysicalQuantity" -> "GravitationalAcceleration", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Weight", 
      "StandardGravitationalAcceleration"}]] :> 
   QuantityVariable["W", "Name" -> "weight", "PhysicalQuantity" -> "Weight", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "StandardAccelerationOfGravity"]*
     QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"WeightOnMassiveBodies", "Height"}]] :> 
   QuantityVariable["W", "Name" -> "weight of body", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[None, "GravitationalConstant"]*
      QuantityVariable["m", "Name" -> "mass of body", "PhysicalQuantity" -> 
        "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
       "UnitDimensions" -> {"MassUnit", 1}]*QuantityVariable["M", 
       "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/(QuantityVariable["h", "Name" -> "height", 
        "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
       QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
         "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}])^2, 
  HoldPattern[MathematicaFormula[{"WeightOnMassiveBodies", "Surface"}]] :> 
   QuantityVariable["W", "Name" -> "weight of body", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[None, "GravitationalConstant"]*
      QuantityVariable["m", "Name" -> "mass of body", "PhysicalQuantity" -> 
        "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
       "UnitDimensions" -> {"MassUnit", 1}]*QuantityVariable["M", 
       "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/QuantityVariable["r", "Name" -> "radius", 
       "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2, 
  HoldPattern[MathematicaFormula[{"WienDisplacementLaw", "Frequency"}]] :> 
   QuantityVariable[Subscript["\[Nu]", "max"], "Name" -> "peak frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Terahertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[(3 + ProductLog[-3/E^3]), "BoltzmannConstant"/
       "PlanckConstant"]*QuantityVariable["T", "Name" -> "temperature", 
      "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
       {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula[{"WienDisplacementLaw", "Wavelength"}]] :> 
   QuantityVariable[Subscript["\[Lambda]", "max"], 
     "Name" -> "peak wavelength", "PhysicalQuantity" -> "Wavelength", 
     "CanonicalUnit" -> {HoldForm["Nanometers"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    Quantity[None, "WienWavelengthDisplacementLawConstant"]/
     QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
       "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
      "UnitDimensions" -> {"TemperatureUnit", 1}], 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book"}]] :> 
   QuantityVariable["p", "Name" -> "book pages", "PhysicalQuantity" -> 
      "Page", "CanonicalUnit" -> {HoldForm[IndependentUnit["pages"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/250, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine"}]] :> 
   QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/650, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript"}]] :> 
   QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/250, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Screenplay"}]] :> 
   QuantityVariable["p", "Name" -> "screenplay pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/200, 
  HoldPattern[MathematicaFormula[{"Work", "Acceleration"}]] :> 
   QuantityVariable["W", "Name" -> "work", "PhysicalQuantity" -> "Work", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Work", "Angle"}]] :> 
   QuantityVariable["W", "Name" -> "work", "PhysicalQuantity" -> "Work", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Cos[QuantityVariable["\[Theta]", "Name" -> "angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]*
     QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["F", 
      "Name" -> "force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"Work", "Gravity"}]] :> 
   QuantityVariable["W", "Name" -> "work", "PhysicalQuantity" -> "Work", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[None, "StandardAccelerationOfGravity"]*
     QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
       "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"Work", "Standard"}]] :> 
   QuantityVariable["W", "Name" -> "work", "PhysicalQuantity" -> "Work", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["F", 
      "Name" -> "force", "PhysicalQuantity" -> "Force", 
      "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"Work", "Torque"}]] :> 
   QuantityVariable["W", "Name" -> "work", "PhysicalQuantity" -> "Work", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["\[Theta]", "Name" -> "angle", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]*QuantityVariable["\[Tau]", 
      "Name" -> "torque", "PhysicalQuantity" -> "Torque", 
      "CanonicalUnit" -> {HoldForm["Meters"*"Newtons"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"Annuity", "FutureValue", 
      "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-(1 + QuantityVariable["g", "Name" -> "periodic payment growth rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
          "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + (1 + QuantityVariable["i", 
          "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["i", 
       "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"Annuity", "FutureValue", 
      "PaymentFrequency"}]] :> QuantityVariable["FV", 
     "Name" -> "future value", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    (QuantityVariable["f", "Name" -> "payments per period", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (-1 + (1 + QuantityVariable["i", "Name" -> "interest rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(QuantityVariable["f", 
          "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["n", "Name" -> 
           "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"Annuity", "PresentValue", 
      "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 - ((1 + QuantityVariable["g", "Name" -> 
            "periodic payment growth rate", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/(1 + QuantityVariable["i", 
           "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["i", 
       "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"Annuity", "PresentValue", 
      "PaymentFrequency"}]] :> QuantityVariable["PV", 
     "Name" -> "present value", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    (QuantityVariable["f", "Name" -> "payments per period", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (1 - (1 + QuantityVariable["i", "Name" -> "interest rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-(QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]*QuantityVariable["n", "Name" -> 
            "number of periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "FutureValue", 
      "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 + QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*
      (-(1 + QuantityVariable["g", "Name" -> "periodic payment growth rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
          "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + (1 + QuantityVariable["i", 
          "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["i", 
       "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "FutureValue", 
      "PaymentFrequency"}]] :> QuantityVariable["FV", 
     "Name" -> "future value", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    (QuantityVariable["f", "Name" -> "payments per period", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
         "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*
      (-1 + (1 + QuantityVariable["i", "Name" -> "interest rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(QuantityVariable["f", 
          "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["n", "Name" -> 
           "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "PresentValue", 
      "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 + QuantityVariable["i", "Name" -> "interest rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*
      (1 - ((1 + QuantityVariable["g", "Name" -> 
            "periodic payment growth rate", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/(1 + QuantityVariable["i", 
           "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["i", 
       "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "PresentValue", 
      "PaymentFrequency"}]] :> QuantityVariable["PV", 
     "Name" -> "present value", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    (QuantityVariable["f", "Name" -> "payments per period", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      (1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
         "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*
      (1 - (1 + QuantityVariable["i", "Name" -> "interest rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-(QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]*QuantityVariable["n", "Name" -> 
            "number of periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/QuantityVariable["i", "Name" -> "interest rate", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"AverageAngularVelocity", "Velocities", 
      "Angles"}]] :> (QuantityVariable[Subscript["\[Omega]", "f"], 
       "Name" -> "final angular velocity", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Subscript["\[Omega]", "i"], "Name" -> "initial angular velocity", 
       "PhysicalQuantity" -> "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}])/2 == 
    (QuantityVariable[Subscript["\[Theta]", "f"], "Name" -> "final angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}] - 
      QuantityVariable[Subscript["\[Theta]", "i"], "Name" -> "initial angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}])/
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"AverageSpeed", "Speeds", "Positions"}]] :> 
   (QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Subscript["v", "i"], "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/2 == 
    (QuantityVariable[Subscript["x", "f"], "Name" -> "final position", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
      QuantityVariable[Subscript["x", "i"], "Name" -> "initial position", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
      "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
       {"TimeUnit", 1}], 
  HoldPattern[MathematicaFormula[{"BarometricFormula", "MassDensity", 
      "GravitationalAcceleration"}]] :> 
   QuantityVariable["\[Rho]", "Name" -> "mass density", 
     "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
      {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
      {{"LengthUnit", -3}, {"MassUnit", 1}}] == 
    E^((Quantity[-1, "MolarGasConstant"^(-1)]*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["h", 
         "Name" -> "height", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]*QuantityVariable["M", "Name" -> "molar mass", 
         "PhysicalQuantity" -> "MolarMass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"MassUnit", 1}}])/QuantityVariable["T", 
        "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}])*QuantityVariable[Subscript["\[Rho]", 0], 
      "Name" -> "reference mass density", "PhysicalQuantity" -> 
       "MassDensity", "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
      "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}], 
  HoldPattern[MathematicaFormula[{"BarometricFormula", "Pressure", 
      "GravitationalAcceleration"}]] :> 
   QuantityVariable["p", "Name" -> "pressure", "PhysicalQuantity" -> 
      "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
     "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == 
    E^((Quantity[-1, "MolarGasConstant"^(-1)]*QuantityVariable["g", 
         "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
          "GravitationalAcceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["h", 
         "Name" -> "height", "PhysicalQuantity" -> "Height", 
         "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", 1}]*QuantityVariable["M", "Name" -> "molar mass", 
         "PhysicalQuantity" -> "MolarMass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"/"Moles"]}, "UnitDimensions" -> 
          {{"AmountUnit", -1}, {"MassUnit", 1}}])/QuantityVariable["T", 
        "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}])*QuantityVariable[Subscript["p", 0], 
      "Name" -> "reference pressure", "PhysicalQuantity" -> "Pressure", 
      "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"BaseballBattingAverageOnBallsInPlay", 
      "SacrificeFlies", "Strikeouts"}]] :> 
   QuantityVariable["BABIP", "Name" -> "batting average on balls in play", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["H", "Name" -> "hits", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["HR", "Name" -> "home runs", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["HR", "Name" -> "home runs", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["SF", 
       "Name" -> "sacrifice flies", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballFieldingIndependentPitching", 
      "ExpectedHomeruns", "Outs"}]] :> 
   QuantityVariable["xFIP", "Name" -> "expected fielding independent \
pitching", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    3.1 + (3*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 1.3519999999999999*QuantityVariable["FB", 
         "Name" -> "fly balls", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - 2*QuantityVariable["K", "Name" -> "strikeouts", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])/
      (QuantityVariable["IP", "Name" -> "innings pitched", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
       QuantityVariable["OUTS", "Name" -> "outs recorded", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/3), 
  HoldPattern[MathematicaFormula[{"BaseballFieldingIndependentPitching", 
      "Homeruns", "Outs"}]] :> QuantityVariable["FIP", 
     "Name" -> "fielding independent pitching", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    3.1 + (3*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 13*QuantityVariable["HR", "Name" -> "home runs", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] - 
       2*QuantityVariable["K", "Name" -> "strikeouts", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])/(QuantityVariable["IP", 
        "Name" -> "innings pitched", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["OUTS", 
         "Name" -> "outs recorded", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
        3), HoldPattern[MathematicaFormula[{"BaseballOnBasePercentage", 
      "HitByPitch", "SacrificeFlies"}]] :> 
   QuantityVariable["OBP", "Name" -> "on-base percentage", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["HBP", 
       "Name" -> "hit by pitch", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     (QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["BB", "Name" -> "walks", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["HBP", 
       "Name" -> "hit by pitch", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["SF", "Name" -> "sacrifice flies", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballRunsCreated", "StolenBases", 
      "CaughtStealing"}]] :> QuantityVariable["RC", "Name" -> "runs created", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    ((QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] - QuantityVariable["CS", 
        "Name" -> "caught stealing", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["H", "Name" -> "hits", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*
      (0.55*QuantityVariable["SB", "Name" -> "stolen bases", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"] + QuantityVariable["TB", 
        "Name" -> "total bases", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]))/(QuantityVariable["AB", "Name" -> "at bats", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["BB", 
       "Name" -> "walks", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BaseballSecondaryAverage", 
      "CaughtStealing", "StolenBases"}]] :> 
   QuantityVariable["SA", "Name" -> "secondary average", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] - QuantityVariable["CS", 
       "Name" -> "caught stealing", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] - 
      QuantityVariable["H", "Name" -> "hits", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"] + QuantityVariable["SB", "Name" -> "stolen bases", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["TB", 
       "Name" -> "total bases", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["AB", "Name" -> "at bats", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BaseballWeightedOnBaseAverage", 
      "ReachedBaseOnError", "HitByPitch"}]] :> 
   QuantityVariable["wOBA", "Name" -> "weighted on base average", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (0.884*QuantityVariable["1B", "Name" -> "singles", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 1.257*QuantityVariable["2B", "Name" -> "doubles", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      1.593*QuantityVariable["3B", "Name" -> "triples", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      0.72*QuantityVariable["BB", "Name" -> "walks", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 0.722*QuantityVariable["HBP", 
        "Name" -> "hit by pitch", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 2.058*QuantityVariable["HR", 
        "Name" -> "home runs", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + 0.92*QuantityVariable["RBOE", 
        "Name" -> "reached base on error", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
     QuantityVariable["PA", "Name" -> "plate appearances", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BlackHoleEntropy", "Charge", 
      "AngularMomentum"}]] :> QuantityVariable["S", "Name" -> "entropy", 
     "PhysicalQuantity" -> "Entropy", "CanonicalUnit" -> 
      {HoldForm["Joules"/"Kelvins"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureUnit", -1}, 
       {"TimeUnit", -2}}] == 
    Quantity[Pi, ("BoltzmannConstant"*"SpeedOfLight"^3)/
       ("GravitationalConstant"*"ReducedPlanckConstant")]*
     ((Quantity[None, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
          "Name" -> "angular momentum", "PhysicalQuantity" -> 
           "AngularMomentum", "CanonicalUnit" -> 
           {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
           {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
       QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]^2 + 
      (Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
           "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
          "UnitDimensions" -> {"MassUnit", 1}] + 
        Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
              "Name" -> "angular momentum", "PhysicalQuantity" -> 
               "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                  "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
           QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
              "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
             "UnitDimensions" -> {"MassUnit", 1}]^2 + 
          Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
              "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
              "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
             "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
              {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])^2), 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonArea", "Charge", 
      "AngularMomentum"}]] :> QuantityVariable["A", 
     "Name" -> "event horizon area", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Meters"^2]}, "UnitDimensions" -> 
      {"LengthUnit", 2}] == 
    4*Pi*(Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
        QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}] + 
       Sqrt[Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
          QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
             "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
            "UnitDimensions" -> {"MassUnit", 1}]^2 + 
         Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
             "SpeedOfLight"^4)]*QuantityVariable["Q", "Name" -> 
             "electric charge", "PhysicalQuantity" -> "ElectricCharge", 
            "CanonicalUnit" -> {HoldForm["Coulombs"]}, "UnitDimensions" -> 
             {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2])^2, 
  HoldPattern[MathematicaFormula[{"BlackHoleEventHorizonRadius", "Charge", 
      "AngularMomentum"}]] :> QuantityVariable["r", 
     "Name" -> "event horizon radius", "PhysicalQuantity" -> "Radius", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    Quantity[1, "GravitationalConstant"/"SpeedOfLight"^2]*
      QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}] + Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*
         QuantityVariable["J", "Name" -> "angular momentum", 
           "PhysicalQuantity" -> "AngularMomentum", "CanonicalUnit" -> 
            {HoldForm["Joules"*"Seconds"]}, "UnitDimensions" -> 
            {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
        QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]^2 + Quantity[1, "GravitationalConstant"^2/
          "SpeedOfLight"^4]*QuantityVariable["M", "Name" -> "mass", 
          "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
           {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]^2 + 
       Quantity[-1/(4*Pi), "GravitationalConstant"/("ElectricConstant"*
           "SpeedOfLight"^4)]*QuantityVariable["Q", 
          "Name" -> "electric charge", "PhysicalQuantity" -> 
           "ElectricCharge", "CanonicalUnit" -> {HoldForm["Coulombs"]}, 
          "UnitDimensions" -> {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^
         2], HoldPattern[MathematicaFormula[{"BlackHoleSurfaceGravity", 
      "Charge", "AngularMomentum"}]] :> 
   QuantityVariable["k", "Name" -> "surface gravity", 
     "PhysicalQuantity" -> "GravitationalAcceleration", 
     "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[1/2, "SpeedOfLight"^4/"GravitationalConstant"]*
      Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
            "Name" -> "angular momentum", "PhysicalQuantity" -> 
             "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
              {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2])/
     (QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*(Quantity[1, "GravitationalConstant"/
          "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
             "Name" -> "angular momentum", "PhysicalQuantity" -> 
              "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                 "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, {
                "MassUnit", 1}, {"TimeUnit", -1}}]^2)/
          QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
             "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
            "UnitDimensions" -> {"MassUnit", 1}]^2 + 
         Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
          QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
             "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
            "UnitDimensions" -> {"MassUnit", 1}]^2])), 
  HoldPattern[MathematicaFormula[{"BlackHoleTemperature", "Charge", 
      "AngularMomentum"}]] :> QuantityVariable["T", "Name" -> "temperature", 
     "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
      {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}] == 
    (Quantity[1/(4*Pi), ("ReducedPlanckConstant"*"SpeedOfLight"^3)/
        ("BoltzmannConstant"*"GravitationalConstant")]*
      Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
            "Name" -> "angular momentum", "PhysicalQuantity" -> 
             "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
              {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2 + 
        Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
            "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
           "UnitDimensions" -> {"MassUnit", 1}]^2])/
     (QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*(Quantity[1, "GravitationalConstant"/
          "SpeedOfLight"^2]*QuantityVariable["M", "Name" -> "mass", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
       Sqrt[(Quantity[-1, "SpeedOfLight"^(-2)]*QuantityVariable["J", 
             "Name" -> "angular momentum", "PhysicalQuantity" -> 
              "AngularMomentum", "CanonicalUnit" -> {HoldForm["Joules"*
                 "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 2}, {
                "MassUnit", 1}, {"TimeUnit", -1}}]^2)/
          QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
             "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
            "UnitDimensions" -> {"MassUnit", 1}]^2 + 
         Quantity[1, "GravitationalConstant"^2/"SpeedOfLight"^4]*
          QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
             "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
            "UnitDimensions" -> {"MassUnit", 1}]^2])), 
  HoldPattern[MathematicaFormula[{"BondDuration", "MacaulayDuration", 
      "DayCountConvention"}]] :> 
   QuantityVariable["D", "Name" -> "duration", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"]*QuantityVariable["f", "Name" -> "coupon frequency", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
    (-QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2 + QuantityVariable["n", 
        "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]*QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]) - QuantityVariable["f", 
        "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["r", "c"], "Name" -> "annual coupon rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["f", "Name" -> "coupon frequency", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable[Subscript["r", "c"], 
        "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Alpha]", 
        "Name" -> "fraction of year until next coupon", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 
        (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> "number of whole coupon periods", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
          Subscript["r", "c"], "Name" -> "annual coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
     (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
       (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])*QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"BondDuration", "ModifiedDuration", 
      "DayCountConvention"}]] :> 
   (QuantityVariable["f", "Name" -> "coupon frequency", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])*
     QuantityVariable[Subscript["D", "m"], "Name" -> "modified duration", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
    (-QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]^2 + QuantityVariable["n", 
        "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]*QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] - QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]) - QuantityVariable["f", 
        "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["r", "c"], "Name" -> "annual coupon rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["f", "Name" -> "coupon frequency", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable[Subscript["r", "c"], 
        "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["\[Alpha]", 
        "Name" -> "fraction of year until next coupon", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + 
        (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> "number of whole coupon periods", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])*QuantityVariable[
          Subscript["r", "c"], "Name" -> "annual coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]))/
     (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*(QuantityVariable["y", "Name" -> "annual yield", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
       (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "number of whole coupon periods", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])*QuantityVariable[Subscript["r", "c"], 
         "Name" -> "annual coupon rate", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon"}]] :> QuantityVariable[Subscript["P", "c"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    -(QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DIC", 
        "Name" -> "days in coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     (2^(-(QuantityVariable["DCS", "Name" -> 
             "days from last coupon to settlement", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
             "days in coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["par", 
        "Name" -> "face value", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]*(2 + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", 
           "Name" -> "days from last coupon to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
           "Name" -> "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon"}]] :> QuantityVariable[Subscript["P", "c"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> "days from last quasi\[Hyphen]coupon \
(possibly ocurring before issue date) to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DICQ", 
        "Name" -> 
         "days in quasi\[Hyphen]coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
           "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
          "UnitDimensions" -> {"MoneyUnit", 1}]*QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
          "Name" -> "face value", "PhysicalQuantity" -> "Money", 
          "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
           {"MoneyUnit", 1}]*(-1 + (2 + QuantityVariable["y", 
              "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
              "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
               "Dimensionless"])^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon"}]] :> QuantityVariable[Subscript["P", "d"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    (2^(-(QuantityVariable["DCS", "Name" -> 
            "days from last coupon to settlement", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
            "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*QuantityVariable["par", 
       "Name" -> "face value", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}]*(2 + QuantityVariable["y", 
         "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["DCS", 
          "Name" -> "days from last coupon to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon"}]] :> QuantityVariable[Subscript["P", "d"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["par", 
        "Name" -> "face value", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]*(2 + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"CapacitorEnergy", "Capacitance", 
      "Charge"}]] :> QuantityVariable["E", 
     "Name" -> "capacitor stored energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["Q", "Name" -> "electric charge", 
       "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
        {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]^2/
     (2*QuantityVariable["C", "Name" -> "electric capacitance", 
       "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
        {HoldForm["Farads"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]), 
  HoldPattern[MathematicaFormula[{"CapacitorEnergy", "Capacitance", 
      "Voltage"}]] :> QuantityVariable["E", 
     "Name" -> "capacitor stored energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["C", "Name" -> "electric capacitance", 
       "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
        {HoldForm["Farads"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
         {"TimeUnit", 4}}]*QuantityVariable["V", "Name" -> "voltage", 
        "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
         {HoldForm["Volts"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}]^2)/2, 
  HoldPattern[MathematicaFormula[{"CapacitorEnergy", "Charge", 
      "Voltage"}]] :> QuantityVariable["E", 
     "Name" -> "capacitor stored energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["Q", "Name" -> "electric charge", 
       "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
        {HoldForm["Coulombs"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
      QuantityVariable["V", "Name" -> "voltage", "PhysicalQuantity" -> 
        "ElectricPotential", "CanonicalUnit" -> {HoldForm["Volts"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}])/2, 
  HoldPattern[MathematicaFormula[{"CircleChord", "Angle", "Radius"}]] :> 
   QuantityVariable["a", "Name" -> "chord length", "PhysicalQuantity" -> 
      "Length", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    2*QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
       "Radius", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
      "UnitDimensions" -> {"LengthUnit", 1}]*
     Sin[QuantityVariable["\[Theta]", "Name" -> "plane angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"], "Unities"}, "UnitDimensions" -> 
         {"AngleUnit", 1}]/2], 
  HoldPattern[MathematicaFormula[{"CircleChord", "Apothem", "Sagitta"}]] :> 
   QuantityVariable["a", "Name" -> "chord length", "PhysicalQuantity" -> 
      "Length", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    2*Sqrt[QuantityVariable["h", "Name" -> "sagitta", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       2*QuantityVariable["h", "Name" -> "sagitta", "PhysicalQuantity" -> 
          "Length", "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["r", 
         "Name" -> "apothem", "PhysicalQuantity" -> "Length", 
         "CanonicalUnit" -> {HoldForm["Meters"], "Unities"}, 
         "UnitDimensions" -> {"LengthUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"CircularApertureDiffraction", 
      "Wavelength", "DiffractionIntensityRatio"}]] :> 
   QuantityVariable[Subscript[Style["I", Italic], "\[Theta]"]/
      Subscript[Style["I", Italic], 0], 
     "Name" -> "normalized transmitted intensity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (BesselJ[1, (2*Pi*QuantityVariable["a", "Name" -> "aperture radius", 
           "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
          Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
            "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
             {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
         QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
          "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
           {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]]^
       2*Csc[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]^2*
      QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
        "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
         {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)/
     (Pi^2*QuantityVariable["a", "Name" -> "aperture radius", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula[{"CircularApertureDiffraction", 
      "Wavelength", "RayleighCriterionAngle"}]] :> 
   Sin[QuantityVariable[Subscript["\[Theta]", "R"], 
      "Name" -> "Rayleigh criterion angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == 
    (BesselJZero[1, 1]*QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
       "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
        {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
     (2*Pi*QuantityVariable["a", "Name" -> "aperture radius", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"CircularApertureDiffraction", 
      "Wavenumber", "DiffractionIntensityRatio"}]] :> 
   QuantityVariable[Subscript[Style["I", Italic], "\[Theta]"]/
      Subscript[Style["I", Italic], 0], 
     "Name" -> "normalized transmitted intensity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    (4*BesselJ[1, QuantityVariable["a", "Name" -> "aperture radius", 
          "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
         QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
           "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", -1}]*
         Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
           "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
            {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]]^2*
      Csc[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]]^2)/
     (QuantityVariable["a", "Name" -> "aperture radius", 
        "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
         "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", -1}]^2), 
  HoldPattern[MathematicaFormula[{"CircularApertureDiffraction", 
      "Wavenumber", "RayleighCriterionAngle"}]] :> 
   Sin[QuantityVariable[Subscript["\[Theta]", "R"], 
      "Name" -> "Rayleigh criterion angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == BesselJZero[1, 1]/
     (QuantityVariable["a", "Name" -> "aperture radius", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
        "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", -1}]), 
  HoldPattern[MathematicaFormula[{"CircularCurrentLoop", "Loops", 
      "Distance"}]] :> QuantityVariable["B", 
     "Name" -> "magnetic flux density", "PhysicalQuantity" -> 
      "MagneticFluxDensity", "CanonicalUnit" -> {HoldForm["Teslas"]}, 
     "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == (Quantity[1/2, "MagneticConstant"]*
      QuantityVariable["I", "Name" -> "electric current", 
       "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
        {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
         1}]*QuantityVariable["N", "Name" -> "coil turns", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
         "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]^2)/
     (QuantityVariable["d", "Name" -> "distance from the circle", 
         "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2 + 
       QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
          "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]^2)^(3/2), 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "AngularFrequency", 
      "KineticEnergy"}]] :> QuantityVariable["\[Omega]", 
     "Name" -> "angular frequency", "PhysicalQuantity" -> "AngularFrequency", 
     "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, "ReducedPlanckConstant"^(-1)]*QuantityVariable["K", 
      "Name" -> "kinetic energy", "PhysicalQuantity" -> "Energy", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "AngularFrequency", 
      "Momentum"}]] :> QuantityVariable["\[Omega]", 
     "Name" -> "angular frequency", "PhysicalQuantity" -> "AngularFrequency", 
     "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    (Quantity[1/2, "ReducedPlanckConstant"^(-1)]*
      QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
         "Momentum", "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/
            "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "AngularFrequency", 
      "Velocity"}]] :> QuantityVariable["\[Omega]", 
     "Name" -> "angular frequency", "PhysicalQuantity" -> "AngularFrequency", 
     "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
     "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[1/2, "ReducedPlanckConstant"^(-1)]*QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]*QuantityVariable["v", "Name" -> "velocity", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "Frequency", 
      "KineticEnergy"}]] :> QuantityVariable["f", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[None, "PlanckConstant"^(-1)]*QuantityVariable["K", 
      "Name" -> "kinetic energy", "PhysicalQuantity" -> "Energy", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "Frequency", 
      "Momentum"}]] :> QuantityVariable["f", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    (Quantity[1/2, "PlanckConstant"^(-1)]*
      QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
         "Momentum", "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/
            "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
          {"MassUnit", 1}, {"TimeUnit", -1}}]^2)/QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "Frequency", 
      "Velocity"}]] :> QuantityVariable["f", "Name" -> "frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[1/2, "PlanckConstant"^(-1)]*QuantityVariable["m", 
      "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
      "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
       {"MassUnit", 1}]*QuantityVariable["v", "Name" -> "velocity", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "Wavelength", 
      "KineticEnergy"}]] :> QuantityVariable["\[Lambda]", 
     "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
     "CanonicalUnit" -> {HoldForm["Micrometers"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[1/Sqrt[2], "PlanckConstant"]/
     Sqrt[QuantityVariable["K", "Name" -> "kinetic energy", 
        "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
         {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "Wavelength", 
      "Momentum"}]] :> QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
     "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
      {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[None, "PlanckConstant"]/QuantityVariable["p", 
      "Name" -> "momentum", "PhysicalQuantity" -> "Momentum", 
      "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelations", "Wavelength", 
      "Velocity"}]] :> QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
     "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
      {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[None, "PlanckConstant"]/(QuantityVariable["m", "Name" -> "mass", 
       "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
        {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
      QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "AngularFrequency", "KineticEnergy"}]] :> 
   QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, "ReducedPlanckConstant"^(-1)]*QuantityVariable["K", 
      "Name" -> "kinetic energy", "PhysicalQuantity" -> "Energy", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "AngularFrequency", "Momentum"}]] :> 
   QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, "ReducedPlanckConstant"^(-1)]*
     (Quantity[-1, "SpeedOfLight"^2]*QuantityVariable["m", "Name" -> "mass", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
      Sqrt[Quantity[None, "SpeedOfLight"^4]*QuantityVariable["m", 
           "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
           "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
            {"MassUnit", 1}]^2 + Quantity[None, "SpeedOfLight"^2]*
         QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
            "Momentum", "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/
               "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
             {"MassUnit", 1}, {"TimeUnit", -1}}]^2]), 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "AngularFrequency", "Velocity"}]] :> 
   QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
     "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
      {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
      {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
    (Quantity[1, "SpeedOfLight"^2/"ReducedPlanckConstant"]*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "Frequency", "KineticEnergy"}]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[None, "PlanckConstant"^(-1)]*QuantityVariable["K", 
      "Name" -> "kinetic energy", "PhysicalQuantity" -> "Energy", 
      "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "Frequency", "Momentum"}]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    Quantity[None, "PlanckConstant"^(-1)]*
     (Quantity[-1, "SpeedOfLight"^2]*QuantityVariable["m", "Name" -> "mass", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] + 
      Sqrt[Quantity[None, "SpeedOfLight"^4]*QuantityVariable["m", 
           "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
           "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
            {"MassUnit", 1}]^2 + Quantity[None, "SpeedOfLight"^2]*
         QuantityVariable["p", "Name" -> "momentum", "PhysicalQuantity" -> 
            "Momentum", "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/
               "Seconds"]}, "UnitDimensions" -> {{"LengthUnit", 1}, 
             {"MassUnit", 1}, {"TimeUnit", -1}}]^2]), 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "Frequency", "Velocity"}]] :> 
   QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
      "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
     "UnitDimensions" -> {"TimeUnit", -1}] == 
    (Quantity[1, "SpeedOfLight"^2/"PlanckConstant"]*QuantityVariable["m", 
       "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}])/Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
        QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
           "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
          "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "Wavelength", "KineticEnergy"}]] :> 
   QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
     "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
      {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[1, "PlanckConstant"*"SpeedOfLight"]/
     Sqrt[QuantityVariable["K", "Name" -> "kinetic energy", 
         "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
          {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]^2 + 
       Quantity[2, "SpeedOfLight"^2]*QuantityVariable["K", 
         "Name" -> "kinetic energy", "PhysicalQuantity" -> "Energy", 
         "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "Wavelength", "Momentum"}]] :> 
   QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
     "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
      {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Quantity[None, "PlanckConstant"]/QuantityVariable["p", 
      "Name" -> "momentum", "PhysicalQuantity" -> "Momentum", 
      "CanonicalUnit" -> {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DeBroglieRelationsRelativistic", 
      "Wavelength", "Velocity"}]] :> 
   QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
     "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
      {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    (Quantity[None, "PlanckConstant"]*
      Sqrt[1 + Quantity[-1, "SpeedOfLight"^(-2)]*
         QuantityVariable["v", "Name" -> "velocity", "PhysicalQuantity" -> 
            "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
           "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2])/
     (QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["v", "Name" -> "velocity", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DilutionEquation", "InitialVolume", 
      "AddedVolume"}]] :> QuantityVariable[Subscript["C", "i"], 
      "Name" -> "initial concentration", "PhysicalQuantity" -> "Molarity", 
      "CanonicalUnit" -> {HoldForm["Molar"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
      Subscript["V", "i"], "Name" -> "initial volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable[Subscript["C", "f"], "Name" -> "final concentration", 
      "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
       {HoldForm["Molar"]}, "UnitDimensions" -> {{"AmountUnit", 1}, 
        {"LengthUnit", -3}}]*(QuantityVariable[Subscript["V", "a"], 
       "Name" -> "added volume", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Milliliters"]}, "UnitDimensions" -> 
        {"LengthUnit", 3}] + QuantityVariable[Subscript["V", "i"], 
       "Name" -> "initial volume", "PhysicalQuantity" -> "Volume", 
       "CanonicalUnit" -> {HoldForm["Milliliters"]}, "UnitDimensions" -> 
        {"LengthUnit", 3}]), 
  HoldPattern[MathematicaFormula[{"DilutionEquation", "InitialVolume", 
      "FinalVolume"}]] :> QuantityVariable[Subscript["C", "i"], 
      "Name" -> "initial concentration", "PhysicalQuantity" -> "Molarity", 
      "CanonicalUnit" -> {HoldForm["Molar"]}, "UnitDimensions" -> 
       {{"AmountUnit", 1}, {"LengthUnit", -3}}]*QuantityVariable[
      Subscript["V", "i"], "Name" -> "initial volume", 
      "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
       {HoldForm["Milliliters"]}, "UnitDimensions" -> {"LengthUnit", 3}] == 
    QuantityVariable[Subscript["C", "f"], "Name" -> "final concentration", 
      "PhysicalQuantity" -> "Molarity", "CanonicalUnit" -> 
       {HoldForm["Molar"]}, "UnitDimensions" -> {{"AmountUnit", 1}, 
        {"LengthUnit", -3}}]*QuantityVariable[Subscript["V", "f"], 
      "Name" -> "final volume (total)", "PhysicalQuantity" -> "Volume", 
      "CanonicalUnit" -> {HoldForm["Milliliters"]}, "UnitDimensions" -> 
       {"LengthUnit", 3}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTime", "Acceleration", 
      "InitialPosition"}]] :> QuantityVariable[Subscript["x", "f"], 
     "Name" -> "final position", "PhysicalQuantity" -> "Length", 
     "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]^2)/2 + QuantityVariable[Subscript["x", "i"], 
      "Name" -> "initial position", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTime", "Acceleration", 
      "InitialSpeed"}]] :> QuantityVariable["d", "Name" -> "distance", 
     "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
      {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
      QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTimeCircularForm", 
      "InitialAngle", "AngularAcceleration"}]] :> 
   QuantityVariable[Subscript["\[Theta]", "f"], "Name" -> "final angle", 
     "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
     "UnitDimensions" -> {"AngleUnit", 1}] == 
    (QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]^2*QuantityVariable["\[Alpha]", 
        "Name" -> "angular acceleration", "PhysicalQuantity" -> 
         "AngularAcceleration", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -2}}])/2 + 
     QuantityVariable[Subscript["\[Theta]", "i"], "Name" -> "initial angle", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTimeCircularForm", 
      "InitialAngularSpeed", "AngularAcceleration"}]] :> 
   QuantityVariable["\[Theta]", "Name" -> "angular displacement", 
     "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
     "UnitDimensions" -> {"AngleUnit", 1}] == 
    (QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]^2*QuantityVariable["\[Alpha]", 
        "Name" -> "angular acceleration", "PhysicalQuantity" -> 
         "AngularAcceleration", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -2}}])/2 + 
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}]*QuantityVariable[Subscript["\[Omega]", "i"], 
       "Name" -> "initial angular velocity", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Frequency", 
      "ObserverSpeed"}]] :> QuantityVariable[Subscript["f", "o"], 
      "Name" -> "frequency observed", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}]/QuantityVariable[Subscript["f", "s"], 
      "Name" -> "frequency at the source", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == (QuantityVariable["c", "Name" -> "sound speed", 
       "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Subscript["v", "o"], "Name" -> 
        "speed of the observer towards the source", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Frequency", 
      "WindSpeed"}]] :> QuantityVariable[Subscript["f", "o"], 
      "Name" -> "frequency observed", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}]/QuantityVariable[Subscript["f", "s"], 
      "Name" -> "frequency at the source", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == (QuantityVariable["c", "Name" -> "sound speed", 
       "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] - QuantityVariable[
       Subscript["v", "w"], "Name" -> "wind speed", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
      QuantityVariable[Subscript["v", "w"], "Name" -> "wind speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Ratio", 
      "ObserverSpeed"}]] :> QuantityVariable[Subscript["f", "o"]/
      Subscript["f", "s"], "Name" -> "frequency reduction factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "o"], "Name" -> 
        "speed of the observer towards the source", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Ratio", "WindSpeed"}]] :> 
   QuantityVariable[Subscript["f", "o"]/Subscript["f", "s"], 
     "Name" -> "frequency reduction factor", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["c", "Name" -> "sound speed", 
       "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] - QuantityVariable[
       Subscript["v", "w"], "Name" -> "wind speed", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
      QuantityVariable[Subscript["v", "w"], "Name" -> "wind speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShiftRelativistic", "Frequency", 
      "ObserverSpeed"}]] :> QuantityVariable[Subscript["f", "o"], 
      "Name" -> "frequency observed", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}]/QuantityVariable[Subscript["f", "s"], 
      "Name" -> "frequency at the source", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == 
    Sqrt[((Quantity[None, "SpeedOfLight"] + QuantityVariable[
         Subscript["v", "o"], "Name" -> 
          "speed of the observer towards the source", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])*
       (Quantity[None, "SpeedOfLight"] - QuantityVariable[
         Subscript["v", "s"], "Name" -> 
          "speed of the source away from the observer", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))/
      ((Quantity[None, "SpeedOfLight"] - QuantityVariable[
         Subscript["v", "o"], "Name" -> 
          "speed of the observer towards the source", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])*
       (Quantity[None, "SpeedOfLight"] + QuantityVariable[
         Subscript["v", "s"], "Name" -> 
          "speed of the source away from the observer", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))], 
  HoldPattern[MathematicaFormula[{"DopplerShiftRelativistic", "Ratio", 
      "ObserverSpeed"}]] :> QuantityVariable[Subscript["f", "o"]/
      Subscript["f", "s"], "Name" -> "frequency reduction factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    Sqrt[((Quantity[None, "SpeedOfLight"] + QuantityVariable[
         Subscript["v", "o"], "Name" -> 
          "speed of the observer towards the source", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])*
       (Quantity[None, "SpeedOfLight"] - QuantityVariable[
         Subscript["v", "s"], "Name" -> 
          "speed of the source away from the observer", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))/
      ((Quantity[None, "SpeedOfLight"] - QuantityVariable[
         Subscript["v", "o"], "Name" -> 
          "speed of the observer towards the source", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])*
       (Quantity[None, "SpeedOfLight"] + QuantityVariable[
         Subscript["v", "s"], "Name" -> 
          "speed of the source away from the observer", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))], 
  HoldPattern[MathematicaFormula[{"DopplerShiftRelativistic", "Wavelength", 
      "ObserverSpeed"}]] :> QuantityVariable[Subscript["\[Lambda]", "s"], 
      "Name" -> "wavelength at the source", "PhysicalQuantity" -> 
       "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}]/QuantityVariable[
      Subscript["\[Lambda]", "o"], "Name" -> "wavelength observed", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
    Sqrt[((Quantity[None, "SpeedOfLight"] + QuantityVariable[
         Subscript["v", "o"], "Name" -> 
          "speed of the observer towards the source", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])*
       (Quantity[None, "SpeedOfLight"] - QuantityVariable[
         Subscript["v", "s"], "Name" -> 
          "speed of the source away from the observer", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))/
      ((Quantity[None, "SpeedOfLight"] - QuantityVariable[
         Subscript["v", "o"], "Name" -> 
          "speed of the observer towards the source", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])*
       (Quantity[None, "SpeedOfLight"] + QuantityVariable[
         Subscript["v", "s"], "Name" -> 
          "speed of the source away from the observer", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]))], 
  HoldPattern[MathematicaFormula[{"FuelCost", "FuelEconomy", 
      "FuelConsumption"}]] :> QuantityVariable["FC", 
     "Name" -> "fuel consumption", "PhysicalQuantity" -> "FuelConsumption", 
     "CanonicalUnit" -> {HoldForm["Liters"/(100*"Kilometers")]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    QuantityVariable["FE", "Name" -> "fuel economy", 
      "PhysicalQuantity" -> "FuelEconomy", "CanonicalUnit" -> 
       {HoldForm["Kilometers"/"Liters"]}, "UnitDimensions" -> 
       {"LengthUnit", -2}]^(-1), 
  HoldPattern[MathematicaFormula[{"FuelUsed", "FuelEconomy", 
      "FuelConsumption"}]] :> QuantityVariable["FC", 
     "Name" -> "fuel consumption", "PhysicalQuantity" -> "FuelConsumption", 
     "CanonicalUnit" -> {HoldForm["Liters"/(100*"Kilometers")]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    QuantityVariable["FE", "Name" -> "fuel economy", 
      "PhysicalQuantity" -> "FuelEconomy", "CanonicalUnit" -> 
       {HoldForm["Kilometers"/"Liters"]}, "UnitDimensions" -> 
       {"LengthUnit", -2}]^(-1), 
  HoldPattern[MathematicaFormula[{"GravitationalAcceleration", "Radius", 
      "Height"}]] :> QuantityVariable["g", 
     "Name" -> "gravitational acceleration", "PhysicalQuantity" -> 
      "GravitationalAcceleration", "CanonicalUnit" -> 
      {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    Piecewise[{{(Quantity[None, "GravitationalConstant"]*
         QuantityVariable["M", "Name" -> "mass", "PhysicalQuantity" -> 
           "Mass", "CanonicalUnit" -> {HoldForm["Kilograms"]}, 
          "UnitDimensions" -> {"MassUnit", 1}])/
        (QuantityVariable["h", "Name" -> "height", "PhysicalQuantity" -> 
            "Height", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}] + QuantityVariable["r", 
           "Name" -> "radius", "PhysicalQuantity" -> "Radius", 
           "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
            {"LengthUnit", 1}])^2, QuantityVariable["h", "Name" -> "height", 
         "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] >= 0}, 
      {(Quantity[None, "GravitationalConstant"]*QuantityVariable["M", 
          "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]*(QuantityVariable["h", "Name" -> "height", 
           "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
          QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
            "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
           "UnitDimensions" -> {"LengthUnit", 1}]))/
        QuantityVariable["r", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^3, 
       Inequality[-QuantityVariable["r", "Name" -> "radius", 
          "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
        LessEqual, QuantityVariable["h", "Name" -> "height", 
         "PhysicalQuantity" -> "Height", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], Less, 
        0]}}, 0], HoldPattern[MathematicaFormula[{"HarmonicOscillator", 
      "Damping", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "FrequencyPeriod", 
      "Damping"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
       Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "FrequencyPeriod", 
      "Driving"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "Damping"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
       Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "Driving"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]], 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "FrequencyPeriod"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", 
      "Damping"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
       Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", 
      "Driving"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], QuantityVariable["A", "Name" -> "amplitude", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     QuantityVariable[Subscript["A", "d"], "Name" -> "driving amplitude", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", 
      "FrequencyPeriod"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion", 
      "Damping"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
       Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion", 
      "Driving"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]], 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion", 
      "FrequencyPeriod"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HelmholtzCoil", "Distance", "Coils"}]] :> 
   QuantityVariable["B", "Name" -> "magnetic flux density", 
     "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
      {HoldForm["Teslas"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, 
       {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    Quantity[1/2, "MagneticConstant"]*QuantityVariable["I", 
      "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
      "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
       {"ElectricCurrentUnit", 1}]*QuantityVariable["N", 
      "Name" -> "coil turns", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
        "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}]^2*
     (((-QuantityVariable["d", "Name" -> "distance from center", 
            "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
             {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
          QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
             "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
            "UnitDimensions" -> {"LengthUnit", 1}]/2)^2 + 
        QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^2)^(-3/2) + 
      ((QuantityVariable["d", "Name" -> "distance from center", 
           "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] + 
          QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
             "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
            "UnitDimensions" -> {"LengthUnit", 1}]/2)^2 + 
        QuantityVariable["R", "Name" -> "radius", "PhysicalQuantity" -> 
           "Radius", "CanonicalUnit" -> {HoldForm["Meters"]}, 
          "UnitDimensions" -> {"LengthUnit", 1}]^2)^(-3/2)), 
  HoldPattern[MathematicaFormula[{"InductorEnergy", "Inductance", 
      "Current"}]] :> QuantityVariable["E", 
     "Name" -> "inductor stored energy", "PhysicalQuantity" -> "Energy", 
     "CanonicalUnit" -> {HoldForm["Joules"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["I", "Name" -> "electric current", 
        "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
         {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
          1}]^2*QuantityVariable["L", "Name" -> "magnetic inductance", 
       "PhysicalQuantity" -> "MagneticInductance", "CanonicalUnit" -> 
        {HoldForm["Henries"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -2}}])/2, 
  HoldPattern[MathematicaFormula[{"JeansLength", "Temperature", 
      "MeanMass"}]] :> QuantityVariable[Subscript["R", "J"], 
     "Name" -> "Jeans length", "PhysicalQuantity" -> "Length", 
     "CanonicalUnit" -> {HoldForm["LightYears"]}, "UnitDimensions" -> 
      {"LengthUnit", 1}] == 
    (Sqrt[15/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"/
           "GravitationalConstant"]*QuantityVariable["T", 
          "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
          "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
           {"TemperatureUnit", 1}])/(QuantityVariable["\[Mu]", 
          "Name" -> "mean mass per particle", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]*QuantityVariable["\[Rho]", 
          "Name" -> "mass density", "PhysicalQuantity" -> "MassDensity", 
          "CanonicalUnit" -> {HoldForm["Kilograms"/"Meters"^3]}, 
          "UnitDimensions" -> {{"LengthUnit", -3}, {"MassUnit", 1}}])])/2, 
  HoldPattern[MathematicaFormula[{"JeansMass", "Temperature", 
      "MeanMass"}]] :> QuantityVariable[Subscript["M", "J"], 
     "Name" -> "Jeans mass", "PhysicalQuantity" -> "Mass", 
     "CanonicalUnit" -> {HoldForm["SolarMass"]}, "UnitDimensions" -> 
      {"MassUnit", 1}] == 
    (5*Sqrt[15/Pi]*QuantityVariable["T", "Name" -> "temperature", 
        "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
         {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 1}]^
       (3/2)*(Quantity[None, "BoltzmannConstant"/"GravitationalConstant"]/
        QuantityVariable["\[Mu]", "Name" -> "mean mass per particle", 
         "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
          {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}])^
       (3/2))/(2*Sqrt[QuantityVariable["\[Rho]", "Name" -> "mass density", 
        "PhysicalQuantity" -> "MassDensity", "CanonicalUnit" -> 
         {HoldForm["Kilograms"/"Meters"^3]}, "UnitDimensions" -> 
         {{"LengthUnit", -3}, {"MassUnit", 1}}]]), 
  HoldPattern[MathematicaFormula[{"JoulesLaw", "ElectricCurrent", 
      "Power"}]] :> {QuantityVariable["Q", "Name" -> "heat", 
      "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == QuantityVariable["P", "Name" -> "power", 
       "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]*QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}], 
    QuantityVariable["P", "Name" -> "power", "PhysicalQuantity" -> "Power", 
      "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     QuantityVariable["I", "Name" -> "electric current", 
        "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
         {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
          1}]^2*QuantityVariable["R", "Name" -> "electric resistance", 
       "PhysicalQuantity" -> "ElectricResistance", "CanonicalUnit" -> 
        {HoldForm["Ohms"]}, "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, 
         {"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}]}, 
  HoldPattern[MathematicaFormula[{"JoulesLaw", "ElectricPotential", 
      "Power"}]] :> {QuantityVariable["Q", "Name" -> "heat", 
      "PhysicalQuantity" -> "Heat", "CanonicalUnit" -> {HoldForm["Joules"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}] == QuantityVariable["P", "Name" -> "power", 
       "PhysicalQuantity" -> "Power", "CanonicalUnit" -> {HoldForm["Watts"]}, 
       "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]*QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}], 
    QuantityVariable["P", "Name" -> "power", "PhysicalQuantity" -> "Power", 
      "CanonicalUnit" -> {HoldForm["Watts"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -3}}] == 
     QuantityVariable["U", "Name" -> "electric potential difference", 
        "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
         {HoldForm["Volts"]}, "UnitDimensions" -> 
         {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -3}}]^2/QuantityVariable["R", 
       "Name" -> "electric resistance", "PhysicalQuantity" -> 
        "ElectricResistance", "CanonicalUnit" -> {HoldForm["Ohms"]}, 
       "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
         {"MassUnit", 1}, {"TimeUnit", -3}}]}, 
  HoldPattern[MathematicaFormula[{"LorentzForce", "Current", "Angle"}]] :> 
   QuantityVariable[Subscript["F", "L"], "Name" -> "Lorentz force", 
     "PhysicalQuantity" -> "Force", "CanonicalUnit" -> {HoldForm["Newtons"]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
       {"TimeUnit", -2}}] == QuantityVariable["B", 
      "Name" -> "magnetic flux density", "PhysicalQuantity" -> 
       "MagneticFluxDensity", "CanonicalUnit" -> {HoldForm["Teslas"]}, 
      "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}]*QuantityVariable["I", 
      "Name" -> "electric current", "PhysicalQuantity" -> "ElectricCurrent", 
      "CanonicalUnit" -> {HoldForm["Amperes"]}, "UnitDimensions" -> 
       {"ElectricCurrentUnit", 1}]*QuantityVariable["l", 
      "Name" -> "length of the wire", "PhysicalQuantity" -> "Length", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}]*Sin[QuantityVariable["\[Theta]", "Name" -> "angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"LorentzForce", "ParticleSpeed", 
      "Angle"}]] :> QuantityVariable[Subscript["F", "L"], 
     "Name" -> "Lorentz force", "PhysicalQuantity" -> "Force", 
     "CanonicalUnit" -> {HoldForm["Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 1}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["B", "Name" -> "magnetic flux density", 
      "PhysicalQuantity" -> "MagneticFluxDensity", "CanonicalUnit" -> 
       {HoldForm["Teslas"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
     QuantityVariable["Q", "Name" -> "electric charge", 
      "PhysicalQuantity" -> "ElectricCharge", "CanonicalUnit" -> 
       {HoldForm["Coulombs"]}, "UnitDimensions" -> 
       {{"ElectricCurrentUnit", 1}, {"TimeUnit", 1}}]*
     QuantityVariable["v", "Name" -> "speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
     Sin[QuantityVariable["\[Theta]", "Name" -> "angle", 
       "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
        {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]], 
  HoldPattern[MathematicaFormula[{"MeanFreePath", "ElectronDensity", 
      "Diameter"}]] :> {QuantityVariable[Subscript["l", "mfp"], 
      "Name" -> "mean free path", "PhysicalQuantity" -> "MeanFreePath", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 
     1/(Sqrt[2]*Pi*QuantityVariable["d", "Name" -> "particle diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       QuantityVariable["n", "Name" -> "particle number density", 
        "PhysicalQuantity" -> "InverseVolume", "CanonicalUnit" -> 
         {HoldForm[1/"Meters"^3]}, "UnitDimensions" -> {"LengthUnit", -3}]), 
    QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     2*Sqrt[2/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
     (QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3, 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
     (QuantityVariable["m", "Name" -> "mass of particle", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable["n", "Name" -> "particle number density", 
        "PhysicalQuantity" -> "InverseVolume", "CanonicalUnit" -> 
         {HoldForm[1/"Meters"^3]}, "UnitDimensions" -> {"LengthUnit", -3}]*
       QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3}, 
  HoldPattern[MathematicaFormula[{"MeanFreePath", "ElectronDensity", 
      "Radius"}]] :> {QuantityVariable[Subscript["l", "mfp"], 
      "Name" -> "mean free path", "PhysicalQuantity" -> "MeanFreePath", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == 1/(4*Sqrt[2]*Pi*QuantityVariable["n", 
        "Name" -> "particle number density", "PhysicalQuantity" -> 
         "InverseVolume", "CanonicalUnit" -> {HoldForm[1/"Meters"^3]}, 
        "UnitDimensions" -> {"LengthUnit", -3}]*
       QuantityVariable["r", "Name" -> "particle radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
    QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     2*Sqrt[2/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
     (QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3, 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
     (QuantityVariable["m", "Name" -> "mass of particle", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable["n", "Name" -> "particle number density", 
        "PhysicalQuantity" -> "InverseVolume", "CanonicalUnit" -> 
         {HoldForm[1/"Meters"^3]}, "UnitDimensions" -> {"LengthUnit", -3}]*
       QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3}, 
  HoldPattern[MathematicaFormula[{"MeanFreePath", "Pressure", 
      "Diameter"}]] :> {QuantityVariable[Subscript["l", "mfp"], 
      "Name" -> "mean free path", "PhysicalQuantity" -> "MeanFreePath", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == (Quantity[1/(Sqrt[2]*Pi), "BoltzmannConstant"]*
       QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
         "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
        "UnitDimensions" -> {"TemperatureUnit", 1}])/
      (QuantityVariable["d", "Name" -> "particle diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       QuantityVariable["P", "Name" -> "pressure", "PhysicalQuantity" -> 
         "Pressure", "CanonicalUnit" -> {HoldForm["Pascals"]}, 
        "UnitDimensions" -> {{"LengthUnit", -1}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]), QuantityVariable[OverBar["v"], 
      "Name" -> "mean speed", "PhysicalQuantity" -> "Speed", 
      "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     2*Sqrt[2/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
     (QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3, 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
     (Quantity[1/3, "BoltzmannConstant"^(-1)]*QuantityVariable["m", 
        "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["P", "Name" -> "pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[OverBar["v"], 
        "Name" -> "mean speed", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
       QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
      QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"MeanFreePath", "Pressure", "Radius"}]] :> 
   {QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
      "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     (Quantity[1/(4*Sqrt[2]*Pi), "BoltzmannConstant"]*QuantityVariable["T", 
        "Name" -> "temperature", "PhysicalQuantity" -> "Temperature", 
        "CanonicalUnit" -> {HoldForm["Kelvins"]}, "UnitDimensions" -> 
         {"TemperatureUnit", 1}])/(QuantityVariable["P", 
        "Name" -> "pressure", "PhysicalQuantity" -> "Pressure", 
        "CanonicalUnit" -> {HoldForm["Pascals"]}, "UnitDimensions" -> 
         {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["r", "Name" -> "particle radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
    QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     2*Sqrt[2/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
     (QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3, 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
     (Quantity[1/3, "BoltzmannConstant"^(-1)]*QuantityVariable["m", 
        "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["P", "Name" -> "pressure", 
        "PhysicalQuantity" -> "Pressure", "CanonicalUnit" -> 
         {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
          {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[OverBar["v"], 
        "Name" -> "mean speed", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
       QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
      QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"MeanFreePath", "Volume", "Diameter"}]] :> 
   {QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
      "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> 
        "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
       "UnitDimensions" -> {"LengthUnit", 3}]/
      (Sqrt[2]*Pi*QuantityVariable["d", "Name" -> "particle diameter", 
         "PhysicalQuantity" -> "Diameter", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       QuantityVariable["N", "Name" -> "particle number", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]), 
    QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     2*Sqrt[2/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
     (QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3, 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
     (QuantityVariable["m", "Name" -> "mass of particle", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable["N", "Name" -> "particle number", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[OverBar["v"], 
        "Name" -> "mean speed", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
       QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
      (3*QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> 
         "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
        "UnitDimensions" -> {"LengthUnit", 3}])}, 
  HoldPattern[MathematicaFormula[{"MeanFreePath", "Volume", "Radius"}]] :> 
   {QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
      "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> 
        "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
       "UnitDimensions" -> {"LengthUnit", 3}]/(4*Sqrt[2]*Pi*
       QuantityVariable["N", "Name" -> "particle number", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["r", "Name" -> "particle radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
    QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     2*Sqrt[2/Pi]*Sqrt[(Quantity[None, "BoltzmannConstant"]*
         QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
           "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
          "UnitDimensions" -> {"TemperatureUnit", 1}])/QuantityVariable["m", 
         "Name" -> "mass of particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]], QuantityVariable["D", 
      "Name" -> "diffusion coefficient", "PhysicalQuantity" -> 
       "DiffusionCoefficient", "CanonicalUnit" -> 
       {HoldForm["Meters"^2/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"TimeUnit", -1}}] == 
     (QuantityVariable[OverBar["v"], "Name" -> "mean speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/3, 
    QuantityVariable["\[Eta]", "Name" -> "dynamic viscosity", 
      "PhysicalQuantity" -> "DynamicViscosity", "CanonicalUnit" -> 
       {HoldForm["Pascals"*"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", -1}, {"MassUnit", 1}, {"TimeUnit", -1}}] == 
     (QuantityVariable["m", "Name" -> "mass of particle", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable["N", "Name" -> "particle number", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[OverBar["v"], 
        "Name" -> "mean speed", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]*
       QuantityVariable[Subscript["l", "mfp"], "Name" -> "mean free path", 
        "PhysicalQuantity" -> "MeanFreePath", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}])/
      (3*QuantityVariable["V", "Name" -> "volume", "PhysicalQuantity" -> 
         "Volume", "CanonicalUnit" -> {HoldForm["Meters"^3]}, 
        "UnitDimensions" -> {"LengthUnit", 3}])}, 
  HoldPattern[MathematicaFormula[{"ParticleCollision", "Elastic", 
      "CoefficientOfRestitution"}]] :> 
   {QuantityVariable[Subscript["m", "1"], "Name" -> "mass of first object", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable[Subscript["v", "1,i"], "Name" -> 
         "initial velocity of first object", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["m", "2"], "Name" -> 
         "mass of second object", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable[Subscript["v", "2,i"], 
        "Name" -> "initial velocity of second object", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable[Subscript["m", "1"], "Name" -> "mass of first object", 
        "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
         {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
       QuantityVariable[Subscript["v", "1,f"], "Name" -> 
         "final velocity of first object", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["m", "2"], "Name" -> 
         "mass of second object", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable[Subscript["v", "2,f"], 
        "Name" -> "final velocity of second object", "PhysicalQuantity" -> 
         "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["C", "R"], 
      "Name" -> "coefficient of restitution", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (-QuantityVariable[Subscript["v", "1,f"], 
         "Name" -> "final velocity of first object", "PhysicalQuantity" -> 
          "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
         "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
       QuantityVariable[Subscript["v", "2,f"], "Name" -> 
         "final velocity of second object", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
      (QuantityVariable[Subscript["v", "1,i"], "Name" -> 
         "initial velocity of first object", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
       QuantityVariable[Subscript["v", "2,i"], "Name" -> 
         "initial velocity of second object", "PhysicalQuantity" -> "Speed", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}])}, 
  HoldPattern[MathematicaFormula[{"ParticleCollision", "Surface", 
      "CoefficientOfRestitution"}]] :> 
   {QuantityVariable[Subscript["v", "1,i"], 
      "Name" -> "initial velocity of first object", "PhysicalQuantity" -> 
       "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     -QuantityVariable[Subscript["v", "1,f"], 
       "Name" -> "final velocity of first object", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["C", "R"], 
      "Name" -> "coefficient of restitution", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == 1}, 
  HoldPattern[MathematicaFormula[{"PowerFactor", "Voltage", 
      "ElectricCurrent"}]] :> QuantityVariable["PF", 
     "Name" -> "power factor", "PhysicalQuantity" -> "Unitless", 
     "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["P", "Name" -> "electric real power", 
      "PhysicalQuantity" -> "ElectricPower", "CanonicalUnit" -> 
       {HoldForm["Watts"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -3}}]/
     (QuantityVariable["I", "Name" -> "electric current", 
       "PhysicalQuantity" -> "ElectricCurrent", "CanonicalUnit" -> 
        {HoldForm["Amperes"]}, "UnitDimensions" -> {"ElectricCurrentUnit", 
         1}]*QuantityVariable["V", "Name" -> "voltage", 
       "PhysicalQuantity" -> "ElectricPotential", "CanonicalUnit" -> 
        {HoldForm["Volts"]}, "UnitDimensions" -> 
        {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
         {"TimeUnit", -3}}]), 
  HoldPattern[MathematicaFormula[{"PrincipalAndInterest", "InterestPart", 
      "InitialAmount"}]] :> {QuantityVariable["PMT", "Name" -> "payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     (QuantityVariable["i", "Name" -> "interest rate (per period)", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["PV", 
        "Name" -> "initial loan amount", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}])/
      (1 - (1 + QuantityVariable["i", "Name" -> "interest rate (per period)", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (-QuantityVariable["n", "Name" -> "compounding periods", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])), 
    QuantityVariable[Subscript["PV", "k"], 
      "Name" -> "present value at beginning of period k", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     ((1 - (1 + QuantityVariable["i", "Name" -> "interest rate (per period)", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^
         (-1 + QuantityVariable["k", "Name" -> "current period", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
           "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))*QuantityVariable["PMT", "Name" -> "payment", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}])/
      QuantityVariable["i", "Name" -> "interest rate (per period)", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["IP", "Name" -> "interest portion of payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["i", "Name" -> "interest rate (per period)", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
       Subscript["PV", "k"], "Name" -> 
        "present value at beginning of period k", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"PrincipalAndInterest", "InterestPart", 
      "Payment"}]] :> {QuantityVariable[Subscript["PV", "k"], 
      "Name" -> "present value at beginning of period k", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     ((1 - (1 + QuantityVariable["i", "Name" -> "interest rate (per period)", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^
         (-1 + QuantityVariable["k", "Name" -> "current period", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
           "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))*QuantityVariable["PMT", "Name" -> "payment", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}])/
      QuantityVariable["i", "Name" -> "interest rate (per period)", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["IP", "Name" -> "interest portion of payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["i", "Name" -> "interest rate (per period)", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
       Subscript["PV", "k"], "Name" -> 
        "present value at beginning of period k", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"PrincipalAndInterest", "PrincipalPart", 
      "InitialAmount"}]] :> {QuantityVariable["PMT", "Name" -> "payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     (QuantityVariable["i", "Name" -> "interest rate (per period)", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable["PV", 
        "Name" -> "initial loan amount", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}])/
      (1 - (1 + QuantityVariable["i", "Name" -> "interest rate (per period)", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (-QuantityVariable["n", "Name" -> "compounding periods", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])), 
    QuantityVariable[Subscript["PV", "k"], 
      "Name" -> "present value at beginning of period k", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     ((1 - (1 + QuantityVariable["i", "Name" -> "interest rate (per period)", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^
         (-1 + QuantityVariable["k", "Name" -> "current period", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
           "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))*QuantityVariable["PMT", "Name" -> "payment", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}])/
      QuantityVariable["i", "Name" -> "interest rate (per period)", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["PP", "Name" -> "principal portion of payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["PMT", "Name" -> "payment", "PhysicalQuantity" -> 
        "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
       "UnitDimensions" -> {"MoneyUnit", 1}] - 
      QuantityVariable["i", "Name" -> "interest rate (per period)", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
        Subscript["PV", "k"], "Name" -> 
         "present value at beginning of period k", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"PrincipalAndInterest", "PrincipalPart", 
      "Payment"}]] :> {QuantityVariable[Subscript["PV", "k"], 
      "Name" -> "present value at beginning of period k", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     ((1 - (1 + QuantityVariable["i", "Name" -> "interest rate (per period)", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^
         (-1 + QuantityVariable["k", "Name" -> "current period", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
           "Name" -> "compounding periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]))*QuantityVariable["PMT", "Name" -> "payment", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}])/
      QuantityVariable["i", "Name" -> "interest rate (per period)", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["PP", "Name" -> "principal portion of payment", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
     QuantityVariable["PMT", "Name" -> "payment", "PhysicalQuantity" -> 
        "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
       "UnitDimensions" -> {"MoneyUnit", 1}] - 
      QuantityVariable["i", "Name" -> "interest rate (per period)", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*QuantityVariable[
        Subscript["PV", "k"], "Name" -> 
         "present value at beginning of period k", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]}, 
  HoldPattern[MathematicaFormula[{"RayleighScattering", 
      "CommonDepolarizationFactor", "CommonVolumePolarizability"}]] :> 
   QuantityVariable["\[Sigma]", "Name" -> 
      "Rayleigh scattering cross section", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Centimeters"^2]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (128*Pi^5*QuantityVariable[Subscript["\[Alpha]", "0"], 
        "Name" -> "volume polarizability", "PhysicalQuantity" -> "Volume", 
        "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
         {"LengthUnit", 3}]^2*(6 + 3*QuantityVariable[Subscript["\[Rho]", 
          "n"], "Name" -> "depolarization factor", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/(3*QuantityVariable["\[Lambda]", 
        "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
        "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^4*(6 - 7*QuantityVariable[Subscript["\[Rho]", 
          "n"], "Name" -> "depolarization factor", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"RayleighScattering", 
      "CommonDepolarizationFactor", "VolumePolarizability"}]] :> 
   QuantityVariable["\[Sigma]", "Name" -> 
      "Rayleigh scattering cross section", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Centimeters"^2]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (128*Pi^5*QuantityVariable[Subscript["\[Alpha]", "0"], 
        "Name" -> "volume polarizability", "PhysicalQuantity" -> "Volume", 
        "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
         {"LengthUnit", 3}]^2*(6 + 3*QuantityVariable[Subscript["\[Rho]", 
          "n"], "Name" -> "depolarization factor", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/(3*QuantityVariable["\[Lambda]", 
        "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
        "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^4*(6 - 7*QuantityVariable[Subscript["\[Rho]", 
          "n"], "Name" -> "depolarization factor", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"RayleighScattering", 
      "DepolarizationFactor", "VolumePolarizability"}]] :> 
   QuantityVariable["\[Sigma]", "Name" -> 
      "Rayleigh scattering cross section", "PhysicalQuantity" -> "Area", 
     "CanonicalUnit" -> {HoldForm["Centimeters"^2]}, 
     "UnitDimensions" -> {"LengthUnit", 2}] == 
    (128*Pi^5*QuantityVariable[Subscript["\[Alpha]", "0"], 
        "Name" -> "volume polarizability", "PhysicalQuantity" -> "Volume", 
        "CanonicalUnit" -> {HoldForm["Meters"^3]}, "UnitDimensions" -> 
         {"LengthUnit", 3}]^2*(6 + 3*QuantityVariable[Subscript["\[Rho]", 
          "n"], "Name" -> "depolarization factor", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]))/(3*QuantityVariable["\[Lambda]", 
        "Name" -> "wavelength", "PhysicalQuantity" -> "Wavelength", 
        "CanonicalUnit" -> {HoldForm["Micrometers"]}, "UnitDimensions" -> 
         {"LengthUnit", 1}]^4*(6 - 7*QuantityVariable[Subscript["\[Rho]", 
          "n"], "Name" -> "depolarization factor", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"Resonance", "Inductor", "Capacitor"}]] :> 
   QuantityVariable["f", "Name" -> "resonance frequency", 
     "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
      {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}] == 
    1/(2*Pi*Sqrt[QuantityVariable["C", "Name" -> "electric capacitance", 
         "PhysicalQuantity" -> "ElectricCapacitance", "CanonicalUnit" -> 
          {HoldForm["Farads"]}, "UnitDimensions" -> 
          {{"ElectricCurrentUnit", 2}, {"LengthUnit", -2}, {"MassUnit", -1}, 
           {"TimeUnit", 4}}]*QuantityVariable["L", 
         "Name" -> "magnetic inductance", "PhysicalQuantity" -> 
          "MagneticInductance", "CanonicalUnit" -> {HoldForm["Henries"]}, 
         "UnitDimensions" -> {{"ElectricCurrentUnit", -2}, {"LengthUnit", 2}, 
           {"MassUnit", 1}, {"TimeUnit", -2}}]]), 
  HoldPattern[MathematicaFormula[{"SackurTetrodeEquation", "InternalEnergy", 
      "Temperature"}]] :> {QuantityVariable["S", "Name" -> "entropy", 
      "PhysicalQuantity" -> "Entropy", "CanonicalUnit" -> 
       {HoldForm["Joules"/"Kelvins"]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}, {"TemperatureUnit", -1}, 
        {"TimeUnit", -2}}] == 
     (5/2 + Log[(8*Pi^(3/2)*((Quantity[None, "PlanckConstant"^(-2)]*
             QuantityVariable["m", "Name" -> "mass of a particle", 
              "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> {
                HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}]*
             QuantityVariable["U", "Name" -> "internal energy", 
              "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> {
                HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
                {"MassUnit", 1}, {"TimeUnit", -2}}])/QuantityVariable["N", 
             "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
             "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])^(3/2)*
          Row[{QuantityVariable["V", "Name" -> "volume", 
              "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> {
                HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]/
             QuantityVariable["N", "Name" -> "particle number", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"]}])/
         (3*Sqrt[3])])*Quantity[None, "BoltzmannConstant"]*
      QuantityVariable["N", "Name" -> "particle number", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["U", "Name" -> "internal energy", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     Quantity[3/2, "BoltzmannConstant"]*QuantityVariable["N", 
       "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["T", "Name" -> "temperature", "PhysicalQuantity" -> 
        "Temperature", "CanonicalUnit" -> {HoldForm["Kelvins"]}, 
       "UnitDimensions" -> {"TemperatureUnit", 1}]}, 
  HoldPattern[MathematicaFormula[{"SackurTetrodeEquation", 
      "ThermalDeBroglieWavelength", "Temperature"}]] :> 
   {QuantityVariable["S", "Name" -> "entropy", "PhysicalQuantity" -> 
       "Entropy", "CanonicalUnit" -> {HoldForm["Joules"/"Kelvins"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TemperatureUnit", -1}, {"TimeUnit", -2}}] == 
     (5/2 + Log[QuantityVariable["V", "Name" -> "volume", 
          "PhysicalQuantity" -> "Volume", "CanonicalUnit" -> 
           {HoldForm["Meters"^3]}, "UnitDimensions" -> {"LengthUnit", 3}]/
         (QuantityVariable["N", "Name" -> "particle number", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]*
          QuantityVariable["\[CapitalLambda]", "Name" -> 
             "thermal de Broglie wavelength", "PhysicalQuantity" -> 
             "Wavelength", "CanonicalUnit" -> {HoldForm["Meters"]}, 
            "UnitDimensions" -> {"LengthUnit", 1}]^3)])*
      Quantity[None, "BoltzmannConstant"]*QuantityVariable["N",
       "Name" -> "particle number", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
    QuantityVariable["\[CapitalLambda]", "Name" -> 
       "thermal de Broglie wavelength", "PhysicalQuantity" -> "Wavelength", 
      "CanonicalUnit" -> {HoldForm["Meters"]}, "UnitDimensions" -> 
       {"LengthUnit", 1}] == Quantity[1/Sqrt[2*Pi], "PlanckConstant"]/
      Sqrt[Quantity[None, "BoltzmannConstant"]*QuantityVariable["m",
         "Name" -> "mass of a particle", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]*QuantityVariable["T", "Name" -> "temperature", 
         "PhysicalQuantity" -> "Temperature", "CanonicalUnit" -> 
          {HoldForm["Kelvins"]}, "UnitDimensions" -> {"TemperatureUnit", 
           1}]]}, HoldPattern[MathematicaFormula[{"SeismicMoment", 
      "RuptureLength", "RuptureWidth"}]] :> 
   {QuantityVariable[Subscript["M", 0], "Name" -> "seismic moment", 
      "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
       {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
        {"MassUnit", 1}, {"TimeUnit", -2}}] == 
     QuantityVariable["L", "Name" -> "rupture length", 
       "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["W", "Name" -> "rupture width", 
       "PhysicalQuantity" -> "Width", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["\[Mu]", "Name" -> "shear modulus", 
       "PhysicalQuantity" -> "ShearModulus", "CanonicalUnit" -> 
        {HoldForm["Pascals"]}, "UnitDimensions" -> {{"LengthUnit", -1}, 
         {"MassUnit", 1}, {"TimeUnit", -2}}]*QuantityVariable[OverBar["D"], 
       "Name" -> "average displacement on rupture", "PhysicalQuantity" -> 
        "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", 1}], 
    QuantityVariable[Subscript["M", "w"], 
      "Name" -> "seismic moment magnitude", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] == 
     (2*(-9.1 + Log[Quantity[None, "Joules"^(-1)]*QuantityVariable[
            Subscript["M", 0], "Name" -> "seismic moment", 
            "PhysicalQuantity" -> "Energy", "CanonicalUnit" -> 
             {HoldForm["Joules"]}, "UnitDimensions" -> {{"LengthUnit", 2}, 
              {"MassUnit", 1}, {"TimeUnit", -2}}]]/Log[10]))/3}, 
  HoldPattern[MathematicaFormula[{"SingleSlitDiffraction", "Wavelength", 
      "RayleighCriterionAngle"}]] :> 
   Sin[QuantityVariable[Subscript["\[Theta]", "R"], 
      "Name" -> "Rayleigh criterion angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == 
    QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
      "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
       {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]/
     QuantityVariable["d", "Name" -> "slit width", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"SingleSlitDiffraction", "Wavenumber", 
      "RayleighCriterionAngle"}]] :> 
   Sin[QuantityVariable[Subscript["\[Theta]", "R"], 
      "Name" -> "Rayleigh criterion angle", "PhysicalQuantity" -> "Angle", 
      "CanonicalUnit" -> {HoldForm["AngularDegrees"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}]] == 
    (2*Pi)/(QuantityVariable["d", "Name" -> "slit width", 
       "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
        {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
      QuantityVariable["k", "Name" -> "wavenumber", "PhysicalQuantity" -> 
        "Wavenumber", "CanonicalUnit" -> {HoldForm[1/"Meters"]}, 
       "UnitDimensions" -> {"LengthUnit", -1}]), 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationDistance", 
      "InitialPosition", "FinalPosition"}]] :> 
   QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2 == 
    QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]^2 + 
     2*QuantityVariable["a", "Name" -> "acceleration", 
       "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      (QuantityVariable[Subscript["x", "f"], "Name" -> "final position", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] - 
       QuantityVariable[Subscript["x", "i"], "Name" -> "initial position", 
        "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]), 
  HoldPattern[MathematicaFormula[{"SpeedAccelerationDistanceCircularForm", 
      "InitialAngle", "FinalAngle"}]] :> 
   QuantityVariable[Subscript["\[Omega]", "f"], 
      "Name" -> "final angular velocity", "PhysicalQuantity" -> 
       "AngularVelocity", "CanonicalUnit" -> {HoldForm["Radians"/"Seconds"]}, 
      "UnitDimensions" -> {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 == 
    2*QuantityVariable["\[Alpha]", "Name" -> "angular acceleration", 
       "PhysicalQuantity" -> "AngularAcceleration", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -2}}]*
      (QuantityVariable[Subscript["\[Theta]", "f"], "Name" -> "final angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}] - 
       QuantityVariable[Subscript["\[Theta]", "i"], 
        "Name" -> "initial angle", "PhysicalQuantity" -> "Angle", 
        "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
         {"AngleUnit", 1}]) + QuantityVariable[Subscript["\[Omega]", "i"], 
       "Name" -> "initial angular velocity", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2, 
  HoldPattern[MathematicaFormula[{"Torque", "AngularAcceleration", 
      "MomentOfInertia"}]] :> QuantityVariable["\[Tau]", "Name" -> "torque", 
     "PhysicalQuantity" -> "Torque", "CanonicalUnit" -> 
      {HoldForm["Meters"*"Newtons"]}, "UnitDimensions" -> 
      {{"LengthUnit", 2}, {"MassUnit", 1}, {"TimeUnit", -2}}] == 
    QuantityVariable["I", "Name" -> "moment of inertia", 
      "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
       {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 2}, {"MassUnit", 1}}]*QuantityVariable["\[Alpha]", 
      "Name" -> "angular acceleration", "PhysicalQuantity" -> 
       "AngularAcceleration", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -2}}], 
  HoldPattern[MathematicaFormula[{"TurkeyPortions", "Adults", 
      "Children"}]] :> QuantityVariable["W", "Name" -> "turkey weight", 
     "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
      {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] == 
    Quantity[0.5, "Pounds"]*QuantityVariable["C", 
       "Name" -> "number of children", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     Quantity[None, "Pounds"]*QuantityVariable["A", 
       "Name" -> "number of adults", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["P", "Name" -> "meal proportions", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"TurkeyPortions", "Adults", 
      "Teenagers"}]] :> QuantityVariable["W", "Name" -> "turkey weight", 
     "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
      {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] == 
    Quantity[None, "Pounds"]*QuantityVariable["P", 
      "Name" -> "meal proportions", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     (QuantityVariable["A", "Name" -> "number of adults", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"] + QuantityVariable["T", 
       "Name" -> "number of teenagers", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"UncertaintyPrinciple", "Energy", 
      "Time"}]] :> QuantityVariable["\[CapitalDelta]\[InvisibleSpace]E", 
      "Name" -> "energy uncertainty", "PhysicalQuantity" -> "Energy", 
      "CanonicalUnit" -> {HoldForm["Electronvolts"]}, 
      "UnitDimensions" -> {{"LengthUnit", 2}, {"MassUnit", 1}, 
        {"TimeUnit", -2}}]*QuantityVariable[
      "\[CapitalDelta]\[InvisibleSpace]t", "Name" -> "time uncertainty", 
      "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
       {HoldForm["Nanoseconds"]}, "UnitDimensions" -> {"TimeUnit", 1}] >= 
    Quantity[1/(4*Pi), "PlanckConstant"], 
  HoldPattern[MathematicaFormula[{"UncertaintyPrinciple", "Position", 
      "Momentum"}]] :> QuantityVariable["\[CapitalDelta]\[InvisibleSpace]p", 
      "Name" -> "measured momentum uncertainty", "PhysicalQuantity" -> 
       "Momentum", "CanonicalUnit" -> 
       {HoldForm[("Kilograms"*"Meters")/"Seconds"]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"MassUnit", 1}, 
        {"TimeUnit", -1}}]*QuantityVariable[
      "\[CapitalDelta]\[InvisibleSpace]x", 
      "Name" -> "measured position uncertainty", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Nanometers"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] >= Quantity[1/(4*Pi), 
     "PlanckConstant"], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Hits", 
      "ClickThroughRate"}]] :> QuantityVariable["R", "Name" -> "revenue", 
     "PhysicalQuantity" -> "MoneyPerTime", "CanonicalUnit" -> 
      {HoldForm["USDollars"/"Years"]}, "UnitDimensions" -> 
      {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, IndependentUnit["hits"]^(-1)]*QuantityVariable["CPC", 
      "Name" -> "cost per click (CPC)", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}]*QuantityVariable["CTR", 
      "Name" -> "clickthrough rate (CTR)", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["H", "Name" -> "hit rate", "PhysicalQuantity" -> 
       "HitRate", "CanonicalUnit" -> {HoldForm[IndependentUnit["hits"]/
          "Seconds"]}, "UnitDimensions" -> {"TimeUnit", -1}]*
     QuantityVariable[Subscript["f", "H"], "Name" -> "impressions per hit", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Impressions", 
      "ClickThroughRate"}]] :> QuantityVariable["R", "Name" -> "revenue", 
     "PhysicalQuantity" -> "MoneyPerTime", "CanonicalUnit" -> 
      {HoldForm["USDollars"/"Years"]}, "UnitDimensions" -> 
      {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    QuantityVariable["CPC", "Name" -> "cost per click (CPC)", 
      "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
       {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
     QuantityVariable["CTR", "Name" -> "clickthrough rate (CTR)", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"]*QuantityVariable["I", 
      "Name" -> "impression rate", "PhysicalQuantity" -> "ImpressionRate", 
      "CanonicalUnit" -> {HoldForm[IndependentUnit["impressions"]/
          "Seconds"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Visits", 
      "ClickThroughRate"}]] :> QuantityVariable["R", "Name" -> "revenue", 
     "PhysicalQuantity" -> "MoneyPerTime", "CanonicalUnit" -> 
      {HoldForm["USDollars"/"Years"]}, "UnitDimensions" -> 
      {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, IndependentUnit["visits"]^(-1)]*QuantityVariable["CPC", 
      "Name" -> "cost per click (CPC)", "PhysicalQuantity" -> "Money", 
      "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
       {"MoneyUnit", 1}]*QuantityVariable["CTR", 
      "Name" -> "clickthrough rate (CTR)", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
     QuantityVariable["V", "Name" -> "visitor rate", 
      "PhysicalQuantity" -> "VisitRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["visits"]/"Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
      Subscript["f", "V"], "Name" -> "impressions per visit", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Font"}]] :> 
   QuantityVariable["p", "Name" -> "book pages", "PhysicalQuantity" -> 
      "Page", "CanonicalUnit" -> {HoldForm[IndependentUnit["pages"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["f", "Name" -> "font size", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["w", "Name" -> "English words", 
       "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
        "Dimensionless"])/36000, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Pagination"}]] :> 
   QuantityVariable["p", "Name" -> "book pages", "PhysicalQuantity" -> 
      "Page", "CanonicalUnit" -> {HoldForm[IndependentUnit["pages"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/(250*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Spacing"}]] :> 
   QuantityVariable["p", "Name" -> "book pages", "PhysicalQuantity" -> 
      "Page", "CanonicalUnit" -> {HoldForm[IndependentUnit["pages"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["spacing", "Name" -> "spacing", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["w", "Name" -> "English words", 
       "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
        "Dimensionless"])/250, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", "Font"}]] :> 
   QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/93600, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", 
      "Pagination"}]] :> QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/(650*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", "Spacing"}]] :> 
   QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/650, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", "Font"}]] :> 
   QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/36000, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", 
      "Pagination"}]] :> QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == QuantityVariable["w", "Name" -> "English words", 
      "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
       "Dimensionless"]/(250*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", 
      "Spacing"}]] :> QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/250, 
  HoldPattern[MathematicaFormula[{"Annuity", "FutureValue", 
      "PaymentFrequency", "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-(1 + QuantityVariable["g", "Name" -> "periodic payment growth rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^
         (QuantityVariable["f", "Name" -> "payments per period", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]*QuantityVariable["n", 
           "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]) + 
       (1 + QuantityVariable["i", "Name" -> "interest rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^QuantityVariable["n", 
         "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["i", "Name" -> "interest rate", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/QuantityVariable["f", 
        "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"Annuity", "PresentValue", 
      "PaymentFrequency", "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 - ((1 + QuantityVariable["g", "Name" -> 
            "periodic payment growth rate", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/(1 + QuantityVariable["i", 
            "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/QuantityVariable["f", "Name" -> 
             "payments per period", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]))^(QuantityVariable["f", 
          "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["n", "Name" -> 
           "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["i", "Name" -> "interest rate", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/QuantityVariable["f", 
        "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "FutureValue", 
      "PaymentFrequency", "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["FV", "Name" -> "future value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
         "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*
      (-(1 + QuantityVariable["g", "Name" -> "periodic payment growth rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])^
         (QuantityVariable["f", "Name" -> "payments per period", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]*QuantityVariable["n", 
           "Name" -> "number of periods", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]) + 
       (1 + QuantityVariable["i", "Name" -> "interest rate", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(QuantityVariable["f", 
          "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["n", "Name" -> 
           "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["i", "Name" -> "interest rate", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/QuantityVariable["f", 
        "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"AnnuityDue", "PresentValue", 
      "PaymentFrequency", "AnnualPaymentGrowthRate"}]] :> 
   QuantityVariable["PV", "Name" -> "present value", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((1 + QuantityVariable["i", "Name" -> "interest rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
         "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])*
      (1 - ((1 + QuantityVariable["g", "Name" -> 
            "periodic payment growth rate", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/(1 + QuantityVariable["i", 
            "Name" -> "interest rate", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/QuantityVariable["f", "Name" -> 
             "payments per period", "PhysicalQuantity" -> "Unitless", 
            "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]))^(QuantityVariable["f", 
          "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["n", "Name" -> 
           "number of periods", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]))*QuantityVariable["PMT", 
       "Name" -> "periodic payment", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}])/
     (-QuantityVariable["g", "Name" -> "periodic payment growth rate", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + 
      QuantityVariable["i", "Name" -> "interest rate", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]/QuantityVariable["f", 
        "Name" -> "payments per period", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DIC", 
         "Name" -> "days in coupon period containing settlement", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])) + 
     (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", 
           "Name" -> "days from last coupon to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
           "Name" -> "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "DayCountConvention"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DIC", 
        "Name" -> "days in coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     (2^(-(QuantityVariable["DCS", "Name" -> 
             "days from last coupon to settlement", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
             "days in coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["par", 
        "Name" -> "face value", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]*(2 + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", 
           "Name" -> "days from last coupon to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
           "Name" -> "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DIC", 
        "Name" -> "days in coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     (2^(-(QuantityVariable["DCS", "Name" -> 
             "days from last coupon to settlement", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
             "days in coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> 
            "days from last coupon to settlement", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
            "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(((QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DICQ", 
         "Name" -> "days in quasi\[Hyphen]coupon period containing \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        QuantityVariable["f", "Name" -> "coupon frequency", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
           "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
          "UnitDimensions" -> {"MoneyUnit", 1}]*QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
          "Name" -> "face value", "PhysicalQuantity" -> "Money", 
          "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
           {"MoneyUnit", 1}]*(-1 + ((QuantityVariable["f", 
              "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
              "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
               "Dimensionless"] + QuantityVariable["y", "Name" -> 
               "annual yield", "PhysicalQuantity" -> "Unitless", 
              "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
               "Dimensionless"])/QuantityVariable["f", "Name" -> 
              "coupon frequency", "PhysicalQuantity" -> "Unitless", 
             "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "DayCountConvention"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> "days from last quasi\[Hyphen]coupon \
(possibly ocurring before issue date) to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DICQ", 
        "Name" -> 
         "days in quasi\[Hyphen]coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
           "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
          "UnitDimensions" -> {"MoneyUnit", 1}]*QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
          "Name" -> "face value", "PhysicalQuantity" -> "Money", 
          "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
           {"MoneyUnit", 1}]*(-1 + (2 + QuantityVariable["y", 
              "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
              "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
               "Dimensionless"])^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> "days from last quasi\[Hyphen]coupon \
(possibly ocurring before issue date) to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DICQ", 
        "Name" -> 
         "days in quasi\[Hyphen]coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
        "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
       "UnitDimensions" -> {"MoneyUnit", 1}]*
      ((QuantityVariable["f", "Name" -> "coupon frequency", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["DCS", 
          "Name" -> "days from last coupon to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "remaining coupons payable to maturity", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "DayCountConvention"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (2^(-(QuantityVariable["DCS", "Name" -> 
            "days from last coupon to settlement", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
            "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*QuantityVariable["par", 
       "Name" -> "face value", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}]*(2 + QuantityVariable["y", 
         "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["DCS", 
          "Name" -> "days from last coupon to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (2^(-(QuantityVariable["DCS", "Name" -> 
            "days from last coupon to settlement", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
            "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (2 + QuantityVariable["y", "Name" -> "annual yield", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])^
       (QuantityVariable["DCS", "Name" -> 
           "days from last coupon to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["red", "Name" -> "redemption value", 
         "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
          {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
        QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}]*(-1 + (2 + QuantityVariable["y", 
             "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
             "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "DayCountConvention"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["par", 
        "Name" -> "face value", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]*(2 + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTime", "Acceleration", 
      "InitialSpeed", "InitialPosition"}]] :> 
   QuantityVariable[Subscript["x", "f"], "Name" -> "final position", 
     "PhysicalQuantity" -> "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
     "UnitDimensions" -> {"LengthUnit", 1}] == 
    (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
       "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
        {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
      QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
      Subscript["x", "i"], "Name" -> "initial position", 
      "PhysicalQuantity" -> "Length", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}], 
  HoldPattern[MathematicaFormula[{"DistanceSpeedTimeCircularForm", 
      "InitialAngle", "InitialAngularSpeed", "AngularAcceleration"}]] :> 
   QuantityVariable[Subscript["\[Theta]", "f"], "Name" -> "final angle", 
     "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
     "UnitDimensions" -> {"AngleUnit", 1}] == 
    (QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
         "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
          {"TimeUnit", 1}]^2*QuantityVariable["\[Alpha]", 
        "Name" -> "angular acceleration", "PhysicalQuantity" -> 
         "AngularAcceleration", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"^2]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -2}}])/2 + 
     QuantityVariable[Subscript["\[Theta]", "i"], "Name" -> "initial angle", 
      "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
       {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}] + 
     QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
       "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
        {"TimeUnit", 1}]*QuantityVariable[Subscript["\[Omega]", "i"], 
       "Name" -> "initial angular velocity", "PhysicalQuantity" -> 
        "AngularVelocity", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Frequency", 
      "ObserverSpeed", "WindSpeed"}]] :> 
   QuantityVariable[Subscript["f", "o"], "Name" -> "frequency observed", 
      "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
       {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}]/
     QuantityVariable[Subscript["f", "s"], 
      "Name" -> "frequency at the source", "PhysicalQuantity" -> "Frequency", 
      "CanonicalUnit" -> {HoldForm["Hertz"]}, "UnitDimensions" -> 
       {"TimeUnit", -1}] == (QuantityVariable["c", "Name" -> "sound speed", 
       "PhysicalQuantity" -> "SoundSpeed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}] + QuantityVariable[
       Subscript["v", "o"], "Name" -> 
        "speed of the observer towards the source", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
      QuantityVariable[Subscript["v", "w"], "Name" -> "wind speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
      QuantityVariable[Subscript["v", "w"], "Name" -> "wind speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"DopplerShift", "Ratio", "ObserverSpeed", 
      "WindSpeed"}]] :> QuantityVariable[Subscript["f", "o"]/
      Subscript["f", "s"], "Name" -> "frequency reduction factor", 
     "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "o"], "Name" -> 
        "speed of the observer towards the source", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
      QuantityVariable[Subscript["v", "w"], "Name" -> "wind speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}])/
     (QuantityVariable["c", "Name" -> "sound speed", "PhysicalQuantity" -> 
        "SoundSpeed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] + 
      QuantityVariable[Subscript["v", "s"], "Name" -> 
        "speed of the source away from the observer", "PhysicalQuantity" -> 
        "Speed", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}] - 
      QuantityVariable[Subscript["v", "w"], "Name" -> "wind speed", 
       "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
        {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
        {{"LengthUnit", 1}, {"TimeUnit", -1}}]), 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "FrequencyPeriod", 
      "Damping", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "Damping", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]], 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "FrequencyPeriod", "Damping"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
       Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "FrequencyPeriod", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", "Damping", 
      "Driving"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], QuantityVariable["A", "Name" -> "amplitude", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"] == 
     (QuantityVariable[Subscript["A", "d"], "Name" -> "driving amplitude", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", 
      "FrequencyPeriod", "Damping"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[1 - QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]^2]*QuantityVariable[
       Subscript["\[Omega]", 0], "Name" -> "natural angular frequency", 
       "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
        {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
        {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1)}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", 
      "FrequencyPeriod", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion", "Damping", 
      "Driving"}]] :> {QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]], 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion", 
      "FrequencyPeriod", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == QuantityVariable[Subscript["A", "d"], 
       "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
      Abs[1 - QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2/
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     Pi*HeavisideTheta[Quantity[None, "Seconds"^2/"Radians"^2]*
        (-QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 + QuantityVariable[Subscript["\[Omega]", 
            "d"], "Name" -> "driving angular frequency", 
           "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "MomentOfInertia"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/((QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
       QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
          "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
      Sqrt[1 + QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2]), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "ShapeFactor"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/
     (Sqrt[1 + QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2]*(1 + QuantityVariable[Subscript["\[Sigma]", 
         "shape"], "Name" -> "shape factor", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "MomentOfInertia"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
     (QuantityVariable["I", "Name" -> "moment of inertia", 
       "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
        {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "ShapeFactor"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (Quantity[None, "StandardAccelerationOfGravity"]*
      Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
     (1 + QuantityVariable[Subscript["\[Sigma]", "shape"], 
       "Name" -> "shape factor", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"SingleSlitDiffraction", "Wavelength", 
      "Diffraction", "IntensityRatio"}]] :> 
   QuantityVariable[Subscript[Style["I", Italic], "\[Theta]"]/
      Subscript[Style["I", Italic], 0], 
     "Name" -> "normalized transmitted intensity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    Sinc[(Pi*QuantityVariable["d", "Name" -> "slit width", 
         "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]*
        Sin[QuantityVariable["\[Theta]", "Name" -> "diffraction angle", 
          "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
           {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
       QuantityVariable["\[Lambda]", "Name" -> "wavelength", 
        "PhysicalQuantity" -> "Wavelength", "CanonicalUnit" -> 
         {HoldForm["Micrometers"]}, "UnitDimensions" -> {"LengthUnit", 1}]]^
     2, HoldPattern[MathematicaFormula[{"SingleSlitDiffraction", 
      "Wavenumber", "Diffraction", "IntensityRatio"}]] :> 
   QuantityVariable[Subscript[Style["I", Italic], "\[Theta]"]/
      Subscript[Style["I", Italic], 0], 
     "Name" -> "normalized transmitted intensity", "PhysicalQuantity" -> 
      "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
      "Dimensionless"] == 
    Sinc[(QuantityVariable["d", "Name" -> "slit width", "PhysicalQuantity" -> 
          "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
         "UnitDimensions" -> {"LengthUnit", 1}]*QuantityVariable["k", 
         "Name" -> "wavenumber", "PhysicalQuantity" -> "Wavenumber", 
         "CanonicalUnit" -> {HoldForm[1/"Meters"]}, "UnitDimensions" -> 
          {"LengthUnit", -1}]*Sin[QuantityVariable["\[Theta]", 
          "Name" -> "diffraction angle", "PhysicalQuantity" -> "Angle", 
          "CanonicalUnit" -> {HoldForm["Radians"]}, "UnitDimensions" -> 
           {"AngleUnit", 1}]])/2]^2, 
  HoldPattern[MathematicaFormula[{"TurkeyPortions", "Adults", "Children", 
      "Teenagers"}]] :> QuantityVariable["W", "Name" -> "turkey weight", 
     "PhysicalQuantity" -> "Mass", "CanonicalUnit" -> 
      {HoldForm["Kilograms"]}, "UnitDimensions" -> {"MassUnit", 1}] == 
    Quantity[0.5, "Pounds"]*QuantityVariable["C", 
       "Name" -> "number of children", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     Quantity[None, "Pounds"]*QuantityVariable["P", 
       "Name" -> "meal proportions", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      (QuantityVariable["A", "Name" -> "number of adults", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"] + QuantityVariable["T", 
        "Name" -> "number of teenagers", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Hits", 
      "ClickThroughRate", "CostPerImpression"}]] :> 
   QuantityVariable["R", "Name" -> "revenue", "PhysicalQuantity" -> 
      "MoneyPerTime", "CanonicalUnit" -> {HoldForm["USDollars"/"Years"]}, 
     "UnitDimensions" -> {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, IndependentUnit["hits"]^(-1)]*
     (QuantityVariable["CPM", "Name" -> 
        "cost per thousand impressions (CPM)", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}] + QuantityVariable["CPC", 
        "Name" -> "cost per click (CPC)", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]*QuantityVariable["CTR", 
        "Name" -> "clickthrough rate (CTR)", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])*QuantityVariable["H", "Name" -> "hit rate", 
      "PhysicalQuantity" -> "HitRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["hits"]/"Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
      Subscript["f", "H"], "Name" -> "impressions per hit", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Impressions", 
      "ClickThroughRate", "CostPerImpression"}]] :> 
   QuantityVariable["R", "Name" -> "revenue", "PhysicalQuantity" -> 
      "MoneyPerTime", "CanonicalUnit" -> {HoldForm["USDollars"/"Years"]}, 
     "UnitDimensions" -> {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    (QuantityVariable["CPM", "Name" -> "cost per thousand impressions (CPM)", 
       "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
        {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] + 
      QuantityVariable["CPC", "Name" -> "cost per click (CPC)", 
        "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
         {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
       QuantityVariable["CTR", "Name" -> "clickthrough rate (CTR)", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"])*QuantityVariable["I", 
      "Name" -> "impression rate", "PhysicalQuantity" -> "ImpressionRate", 
      "CanonicalUnit" -> {HoldForm[IndependentUnit["impressions"]/
          "Seconds"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
  HoldPattern[MathematicaFormula[{"WebAdvertisingRevenue", "Visits", 
      "ClickThroughRate", "CostPerImpression"}]] :> 
   QuantityVariable["R", "Name" -> "revenue", "PhysicalQuantity" -> 
      "MoneyPerTime", "CanonicalUnit" -> {HoldForm["USDollars"/"Years"]}, 
     "UnitDimensions" -> {{"MoneyUnit", 1}, {"TimeUnit", -1}}] == 
    Quantity[None, IndependentUnit["visits"]^(-1)]*
     (QuantityVariable["CPM", "Name" -> 
        "cost per thousand impressions (CPM)", "PhysicalQuantity" -> "Money", 
       "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
        {"MoneyUnit", 1}] + QuantityVariable["CPC", 
        "Name" -> "cost per click (CPC)", "PhysicalQuantity" -> "Money", 
        "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
         {"MoneyUnit", 1}]*QuantityVariable["CTR", 
        "Name" -> "clickthrough rate (CTR)", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])*QuantityVariable["V", "Name" -> "visitor rate", 
      "PhysicalQuantity" -> "VisitRate", "CanonicalUnit" -> 
       {HoldForm[IndependentUnit["visits"]/"Seconds"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}]*QuantityVariable[
      Subscript["f", "V"], "Name" -> "impressions per visit", 
      "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
      "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Pagination", 
      "Font"}]] :> QuantityVariable["p", "Name" -> "book pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (36000*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Pagination", 
      "Spacing"}]] :> QuantityVariable["p", "Name" -> "book pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (250*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Spacing", 
      "Font"}]] :> QuantityVariable["p", "Name" -> "book pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["spacing", 
       "Name" -> "spacing", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["w", "Name" -> "English words", 
       "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
        "Dimensionless"])/36000, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", "Pagination", 
      "Font"}]] :> QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (93600*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", "Pagination", 
      "Spacing"}]] :> QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (650*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", "Spacing", 
      "Font"}]] :> QuantityVariable["p", "Name" -> "magazine pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["spacing", 
       "Name" -> "spacing", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["w", "Name" -> "English words", 
       "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
        "Dimensionless"])/93600, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", "Pagination", 
      "Font"}]] :> QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (36000*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", "Pagination", 
      "Spacing"}]] :> QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (250*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", "Spacing", 
      "Font"}]] :> QuantityVariable["p", "Name" -> "manuscript pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["spacing", 
       "Name" -> "spacing", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["w", "Name" -> "English words", 
       "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
        "Dimensionless"])/36000, 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "CouponFrequency", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DIC", 
         "Name" -> "days in coupon period containing settlement", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])) + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", 
           "Name" -> "days from last coupon to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
           "Name" -> "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "DayCountConvention", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DIC", 
         "Name" -> "days in coupon period containing settlement", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])) + 
     (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", 
           "Name" -> "days from last coupon to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
           "Name" -> "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "DayCountConvention", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(QuantityVariable["DCS", "Name" -> 
          "days from last coupon to settlement", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DIC", 
        "Name" -> "days in coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     (2^(-(QuantityVariable["DCS", "Name" -> 
             "days from last coupon to settlement", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
             "days in coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> 
            "days from last coupon to settlement", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
            "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "CouponFrequency", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(((QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DICQ", 
         "Name" -> "days in quasi\[Hyphen]coupon period containing \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        QuantityVariable["f", "Name" -> "coupon frequency", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "DayCountConvention", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -(((QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DICQ", 
         "Name" -> "days in quasi\[Hyphen]coupon period containing \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        QuantityVariable["f", "Name" -> "coupon frequency", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
           "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
          "UnitDimensions" -> {"MoneyUnit", 1}]*QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
          "Name" -> "face value", "PhysicalQuantity" -> "Money", 
          "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
           {"MoneyUnit", 1}]*(-1 + ((QuantityVariable["f", 
              "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
              "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
               "Dimensionless"] + QuantityVariable["y", "Name" -> 
               "annual yield", "PhysicalQuantity" -> "Unitless", 
              "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
               "Dimensionless"])/QuantityVariable["f", "Name" -> 
              "coupon frequency", "PhysicalQuantity" -> "Unitless", 
             "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "DayCountConvention", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "c"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> "days from last quasi\[Hyphen]coupon \
(possibly ocurring before issue date) to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(2*QuantityVariable["DICQ", 
        "Name" -> 
         "days in quasi\[Hyphen]coupon period containing settlement", 
        "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
        "UnitDimensions" -> "Dimensionless"]) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "CouponFrequency", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (((QuantityVariable["f", "Name" -> "coupon frequency", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["DCS", 
          "Name" -> "days from last coupon to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["red", "Name" -> "redemption value", 
         "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
          {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
        QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}]*(-1 + 
         ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "remaining coupons payable to maturity", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "DayCountConvention", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
        "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
       "UnitDimensions" -> {"MoneyUnit", 1}]*
      ((QuantityVariable["f", "Name" -> "coupon frequency", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["DCS", 
          "Name" -> "days from last coupon to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*
        (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "remaining coupons payable to maturity", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "DayCountConvention", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    (2^(-(QuantityVariable["DCS", "Name" -> 
            "days from last coupon to settlement", "PhysicalQuantity" -> 
            "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DIC", "Name" -> 
            "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (2 + QuantityVariable["y", "Name" -> "annual yield", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])^
       (QuantityVariable["DCS", "Name" -> 
           "days from last coupon to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["red", "Name" -> "redemption value", 
         "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
          {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
        QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}]*(-1 + (2 + QuantityVariable["y", 
             "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
             "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "CouponFrequency", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "DayCountConvention", "CouponFrequency"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       ((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "DayCountConvention", "RedemptionValue"}]] :> 
   QuantityVariable[Subscript["P", "d"], "Name" -> "price", 
     "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
      {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/2)^
        (-1 + QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/2 + 
     (2^(-(QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
            "Name" -> 
             "days in quasi\[Hyphen]coupon period containing settlement", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"]) + QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (2 + QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])^
        (QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + (2 + QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])^
            QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"]/2^QuantityVariable["n", "Name" -> 
              "remaining coupons payable to maturity", "PhysicalQuantity" -> 
              "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
              "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Pendulum", 
      "FrequencyPeriod", "Damping", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]/
       QuantityVariable["l", "Name" -> "length", "PhysicalQuantity" -> 
         "Length", "CanonicalUnit" -> {HoldForm["Meters"]}, 
        "UnitDimensions" -> {"LengthUnit", 1}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Spring", 
      "FrequencyPeriod", "Damping", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["k", "Name" -> "spring constant", 
        "PhysicalQuantity" -> "SpringConstant", "CanonicalUnit" -> 
         {HoldForm["Newtons"/"Meters"]}, "UnitDimensions" -> 
         {{"MassUnit", 1}, {"TimeUnit", -2}}]/QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]], QuantityVariable["\[Omega]", 
      "Name" -> "angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"HarmonicOscillator", "Torsion", 
      "FrequencyPeriod", "Damping", "Driving"}]] :> 
   {QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == QuantityVariable[
      Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["\[Omega]", 0], 
      "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
       "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     Sqrt[QuantityVariable["\[Kappa]", "Name" -> "torsional constant", 
        "PhysicalQuantity" -> "TorsionalConstant", "CanonicalUnit" -> 
         {HoldForm[("Meters"*"Newtons")/"Radians"]}, "UnitDimensions" -> 
         {{"AngleUnit", -1}, {"LengthUnit", 2}, {"MassUnit", 1}, 
          {"TimeUnit", -2}}]/QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}]], 
    QuantityVariable["\[Omega]", "Name" -> "angular frequency", 
      "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
       {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
       {{"AngleUnit", 1}, {"TimeUnit", -1}}] == 
     2*Pi*QuantityVariable["f", "Name" -> "frequency", 
       "PhysicalQuantity" -> "Frequency", "CanonicalUnit" -> 
        {HoldForm["Hertz"]}, "UnitDimensions" -> {"TimeUnit", -1}], 
    QuantityVariable["f", "Name" -> "frequency", "PhysicalQuantity" -> 
       "Frequency", "CanonicalUnit" -> {HoldForm["Hertz"]}, 
      "UnitDimensions" -> {"TimeUnit", -1}] == 
     QuantityVariable["T", "Name" -> "period", "PhysicalQuantity" -> 
        "Period", "CanonicalUnit" -> {HoldForm["Seconds"]}, 
       "UnitDimensions" -> {"TimeUnit", 1}]^(-1), 
    QuantityVariable["A", "Name" -> "amplitude", "PhysicalQuantity" -> 
       "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
       "Dimensionless"] == (QuantityVariable[Subscript["A", "d"], 
        "Name" -> "driving amplitude", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
         "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
          "AngularFrequency", "CanonicalUnit" -> 
          {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
          {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)/
      Sqrt[4*QuantityVariable["\[Zeta]", "Name" -> "damping ratio", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2*
         QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
            "natural angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2*
         QuantityVariable[Subscript["\[Omega]", "d"], 
           "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
            "AngularFrequency", "CanonicalUnit" -> 
            {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
            {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 + 
        (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
             "natural angular frequency", "PhysicalQuantity" -> 
             "AngularFrequency", "CanonicalUnit" -> {HoldForm["Radians"/
                "Seconds"]}, "UnitDimensions" -> {{"AngleUnit", 1}, 
              {"TimeUnit", -1}}]^2 - QuantityVariable[Subscript["\[Omega]", 
             "d"], "Name" -> "driving angular frequency", 
            "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
             {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
             {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2)^2], 
    QuantityVariable["\[Phi]", "Name" -> "phase", "PhysicalQuantity" -> 
       "Angle", "CanonicalUnit" -> {HoldForm["Radians"]}, 
      "UnitDimensions" -> {"AngleUnit", 1}] == 
     ArcTan[Quantity[None, "Seconds"^2/"Radians"^2]*
       (QuantityVariable[Subscript["\[Omega]", 0], "Name" -> 
           "natural angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2 - 
        QuantityVariable[Subscript["\[Omega]", "d"], 
          "Name" -> "driving angular frequency", "PhysicalQuantity" -> 
           "AngularFrequency", "CanonicalUnit" -> 
           {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
           {{"AngleUnit", 1}, {"TimeUnit", -1}}]^2), 
      Quantity[2, "Seconds"^2/"Radians"^2]*QuantityVariable["\[Zeta]", 
        "Name" -> "damping ratio", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable[Subscript["\[Omega]", 0], 
        "Name" -> "natural angular frequency", "PhysicalQuantity" -> 
         "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]*QuantityVariable[
        Subscript["\[Omega]", "d"], "Name" -> "driving angular frequency", 
        "PhysicalQuantity" -> "AngularFrequency", "CanonicalUnit" -> 
         {HoldForm["Radians"/"Seconds"]}, "UnitDimensions" -> 
         {{"AngleUnit", 1}, {"TimeUnit", -1}}]]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "MomentOfInertia", "GravitationalAcceleration"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["g", "Name" -> "gravitational acceleration", 
       "PhysicalQuantity" -> "GravitationalAcceleration", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/((QuantityVariable["I", 
        "Name" -> "moment of inertia", "PhysicalQuantity" -> 
         "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
       QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
          "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
      Sqrt[1 + QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2]), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "MomentOfInertia", "SpeedDistance"}]] :> 
   {QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (Quantity[None, "StandardAccelerationOfGravity"]*QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/((QuantityVariable["I", 
         "Name" -> "moment of inertia", "PhysicalQuantity" -> 
          "MomentOfInertia", "CanonicalUnit" -> 
          {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
        QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
           "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
       Sqrt[1 + QuantityVariable["s", "Name" -> "slope", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2]), 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "ShapeFactor", "GravitationalAcceleration"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["g", "Name" -> "gravitational acceleration", 
       "PhysicalQuantity" -> "GravitationalAcceleration", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"])/
     (Sqrt[1 + QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]^2]*(1 + QuantityVariable[Subscript["\[Sigma]", 
         "shape"], "Name" -> "shape factor", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "ShapeFactor", "SpeedDistance"}]] :> 
   {QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (Quantity[None, "StandardAccelerationOfGravity"]*QuantityVariable["s", 
        "Name" -> "slope", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
      (Sqrt[1 + QuantityVariable["s", "Name" -> "slope", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2]*
       (1 + QuantityVariable[Subscript["\[Sigma]", "shape"], 
         "Name" -> "shape factor", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), QuantityVariable["d", "Name" -> "distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "MomentOfInertia", "GravitationalAcceleration"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["g", "Name" -> "gravitational acceleration", 
       "PhysicalQuantity" -> "GravitationalAcceleration", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
       "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
        {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
        "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
         {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
      Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
     (QuantityVariable["I", "Name" -> "moment of inertia", 
       "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
        {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
        {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
      QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "MomentOfInertia", "SpeedDistance"}]] :> 
   {QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (Quantity[None, "StandardAccelerationOfGravity"]*QuantityVariable["m", 
        "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
      (QuantityVariable["I", "Name" -> "moment of inertia", 
        "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
       QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
          "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "ShapeFactor", "GravitationalAcceleration"}]] :> 
   QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
      "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
     "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
    (QuantityVariable["g", "Name" -> "gravitational acceleration", 
       "PhysicalQuantity" -> "GravitationalAcceleration", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
      Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
        "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
         {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
     (1 + QuantityVariable[Subscript["\[Sigma]", "shape"], 
       "Name" -> "shape factor", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "ShapeFactor", "SpeedDistance"}]] :> 
   {QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
       "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
      "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (Quantity[None, "StandardAccelerationOfGravity"]*
       Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
      (1 + QuantityVariable[Subscript["\[Sigma]", "shape"], 
        "Name" -> "shape factor", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), QuantityVariable["d", "Name" -> "distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Book", "Pagination", 
      "Spacing", "Font"}]] :> QuantityVariable["p", "Name" -> "book pages", 
     "PhysicalQuantity" -> "Page", "CanonicalUnit" -> 
      {HoldForm[IndependentUnit["pages"]]}, "UnitDimensions" -> 
      "Dimensionless"] == (QuantityVariable["f", "Name" -> "font size", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["spacing", 
       "Name" -> "spacing", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
      QuantityVariable["w", "Name" -> "English words", 
       "PhysicalQuantity" -> "Word", "CanonicalUnit" -> 
        {HoldForm[IndependentUnit["words"]]}, "UnitDimensions" -> 
        "Dimensionless"])/(36000*QuantityVariable["sides", 
       "Name" -> "sidedness", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Magazine", "Pagination", 
      "Spacing", "Font"}]] :> QuantityVariable["p", 
     "Name" -> "magazine pages", "PhysicalQuantity" -> "Page", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit["pages"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["f", "Name" -> "font size", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (93600*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"WordsPerPage", "Manuscript", "Pagination", 
      "Spacing", "Font"}]] :> QuantityVariable["p", 
     "Name" -> "manuscript pages", "PhysicalQuantity" -> "Page", 
     "CanonicalUnit" -> {HoldForm[IndependentUnit["pages"]]}, 
     "UnitDimensions" -> "Dimensionless"] == 
    (QuantityVariable["f", "Name" -> "font size", "PhysicalQuantity" -> 
        "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
        "Dimensionless"]*QuantityVariable["spacing", "Name" -> "spacing", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]*QuantityVariable["w", 
       "Name" -> "English words", "PhysicalQuantity" -> "Word", 
       "CanonicalUnit" -> {HoldForm[IndependentUnit["words"]]}, 
       "UnitDimensions" -> "Dimensionless"])/
     (36000*QuantityVariable["sides", "Name" -> "sidedness", 
       "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
       "UnitDimensions" -> "Dimensionless"]), 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "RegularCoupon", "DayCountConvention", "CouponFrequency", 
      "RedemptionValue"}]] :> QuantityVariable[Subscript["P", "c"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    -((QuantityVariable["DCS", "Name" -> "days from last coupon to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
         "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
          {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}])/
       (QuantityVariable["DIC", "Name" -> 
          "days in coupon period containing settlement", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])) + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", 
           "Name" -> "days from last coupon to settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
           "Name" -> "days in coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "CleanPrice", 
      "ShortFirstCoupon", "DayCountConvention", "CouponFrequency", 
      "RedemptionValue"}]] :> QuantityVariable[Subscript["P", "c"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    -(((QuantityVariable["DCS", "Name" -> "days from last \
quasi\[Hyphen]coupon (possibly ocurring before issue date) to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["DIS", 
          "Name" -> "days from issue to settlement", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])*QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}])/(QuantityVariable["DICQ", 
         "Name" -> "days in quasi\[Hyphen]coupon period containing \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
          {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
        QuantityVariable["f", "Name" -> "coupon frequency", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])) + 
     ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "RegularCoupon", "DayCountConvention", "CouponFrequency", 
      "RedemptionValue"}]] :> QuantityVariable[Subscript["P", "d"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    (((QuantityVariable["f", "Name" -> "coupon frequency", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
          "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])/QuantityVariable["f", 
         "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])^(QuantityVariable["DCS", 
          "Name" -> "days from last coupon to settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"]/QuantityVariable["DIC", 
          "Name" -> "days in coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
         "Name" -> "remaining coupons payable to maturity", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"])*
      (QuantityVariable["red", "Name" -> "redemption value", 
         "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
          {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
        QuantityVariable["y", "Name" -> "annual yield", "PhysicalQuantity" -> 
          "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"] + QuantityVariable["i", "Name" -> "coupon rate", 
         "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
         "UnitDimensions" -> "Dimensionless"]*QuantityVariable["par", 
         "Name" -> "face value", "PhysicalQuantity" -> "Money", 
         "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
          {"MoneyUnit", 1}]*(-1 + 
         ((QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
            QuantityVariable["y", "Name" -> "annual yield", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])/
           QuantityVariable["f", "Name" -> "coupon frequency", 
            "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
            "UnitDimensions" -> "Dimensionless"])^QuantityVariable["n", 
           "Name" -> "remaining coupons payable to maturity", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"])))/QuantityVariable["y", 
      "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
      "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"BondPriceBetweenCoupons", "DirtyPrice", 
      "ShortFirstCoupon", "DayCountConvention", "CouponFrequency", 
      "RedemptionValue"}]] :> QuantityVariable[Subscript["P", "d"], 
     "Name" -> "price", "PhysicalQuantity" -> "Money", 
     "CanonicalUnit" -> {HoldForm["USDollars"]}, "UnitDimensions" -> 
      {"MoneyUnit", 1}] == 
    ((-1 + QuantityVariable["DFC", "Name" -> 
           "actual days in short first coupon period", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]/QuantityVariable["DICQ", 
          "Name" -> 
           "days in quasi\[Hyphen]coupon period containing settlement", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*QuantityVariable["i", 
        "Name" -> "coupon rate", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"]*
       QuantityVariable["par", "Name" -> "face value", "PhysicalQuantity" -> 
         "Money", "CanonicalUnit" -> {HoldForm["USDollars"]}, 
        "UnitDimensions" -> {"MoneyUnit", 1}]*
       (1 + QuantityVariable["y", "Name" -> "annual yield", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]/QuantityVariable["f", 
           "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])^(-1 + QuantityVariable["DCS", 
           "Name" -> "days from last quasi\[Hyphen]coupon (possibly ocurring \
before issue date) to settlement", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"]/QuantityVariable["DICQ", 
           "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]))/QuantityVariable["f", 
       "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"] + 
     (((QuantityVariable["f", "Name" -> "coupon frequency", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] + QuantityVariable["y", 
           "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
           "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
            "Dimensionless"])/QuantityVariable["f", 
          "Name" -> "coupon frequency", "PhysicalQuantity" -> "Unitless", 
          "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"])^(QuantityVariable["DCS", "Name" -> "days from \
last quasi\[Hyphen]coupon (possibly ocurring before issue date) to \
settlement", "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
            {"Unities"}, "UnitDimensions" -> "Dimensionless"]/
          QuantityVariable["DICQ", "Name" -> 
            "days in quasi\[Hyphen]coupon period containing settlement", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"] - QuantityVariable["n", 
          "Name" -> "remaining coupons payable to maturity", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"])*
       (QuantityVariable["red", "Name" -> "redemption value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         QuantityVariable["y", "Name" -> "annual yield", 
          "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
          "UnitDimensions" -> "Dimensionless"] + 
        QuantityVariable["i", "Name" -> "coupon rate", "PhysicalQuantity" -> 
           "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
           "Dimensionless"]*QuantityVariable["par", "Name" -> "face value", 
          "PhysicalQuantity" -> "Money", "CanonicalUnit" -> 
           {HoldForm["USDollars"]}, "UnitDimensions" -> {"MoneyUnit", 1}]*
         (-1 + ((QuantityVariable["f", "Name" -> "coupon frequency", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"] + 
             QuantityVariable["y", "Name" -> "annual yield", 
              "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {
                "Unities"}, "UnitDimensions" -> "Dimensionless"])/
            QuantityVariable["f", "Name" -> "coupon frequency", 
             "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> 
              {"Unities"}, "UnitDimensions" -> "Dimensionless"])^
           QuantityVariable["n", "Name" -> 
             "remaining coupons payable to maturity", "PhysicalQuantity" -> 
             "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
             "Dimensionless"])))/QuantityVariable["y", 
       "Name" -> "annual yield", "PhysicalQuantity" -> "Unitless", 
       "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> "Dimensionless"], 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "MomentOfInertia", "GravitationalAcceleration", 
      "SpeedDistance"}]] :> {QuantityVariable["a", "Name" -> "acceleration", 
      "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/((QuantityVariable["I", 
         "Name" -> "moment of inertia", "PhysicalQuantity" -> 
          "MomentOfInertia", "CanonicalUnit" -> 
          {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
        QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
          "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
           {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
           "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
            {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2)*
       Sqrt[1 + QuantityVariable["s", "Name" -> "slope", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2]), 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "Slope", "ShapeFactor", "GravitationalAcceleration", 
      "SpeedDistance"}]] :> {QuantityVariable["a", "Name" -> "acceleration", 
      "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["s", "Name" -> "slope", "PhysicalQuantity" -> 
         "Unitless", "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"])/
      (Sqrt[1 + QuantityVariable["s", "Name" -> "slope", 
           "PhysicalQuantity" -> "Unitless", "CanonicalUnit" -> {"Unities"}, 
           "UnitDimensions" -> "Dimensionless"]^2]*
       (1 + QuantityVariable[Subscript["\[Sigma]", "shape"], 
         "Name" -> "shape factor", "PhysicalQuantity" -> "Unitless", 
         "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
          "Dimensionless"])), QuantityVariable["d", "Name" -> "distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "MomentOfInertia", "GravitationalAcceleration", 
      "SpeedDistance"}]] :> {QuantityVariable["a", "Name" -> "acceleration", 
      "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
        "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
         {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
         "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
          {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2*
       Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
      (QuantityVariable["I", "Name" -> "moment of inertia", 
        "PhysicalQuantity" -> "MomentOfInertia", "CanonicalUnit" -> 
         {HoldForm["Kilograms"*"Meters"^2]}, "UnitDimensions" -> 
         {{"LengthUnit", 2}, {"MassUnit", 1}}] + 
       QuantityVariable["m", "Name" -> "mass", "PhysicalQuantity" -> "Mass", 
         "CanonicalUnit" -> {HoldForm["Kilograms"]}, "UnitDimensions" -> 
          {"MassUnit", 1}]*QuantityVariable["r", "Name" -> "radius", 
          "PhysicalQuantity" -> "Radius", "CanonicalUnit" -> 
           {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}]^2), 
    QuantityVariable["d", "Name" -> "distance", "PhysicalQuantity" -> 
       "Distance", "CanonicalUnit" -> {HoldForm["Meters"]}, 
      "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[{"InclinedPlaneRolling", "PureRolling", 
      "SlopeAngle", "ShapeFactor", "GravitationalAcceleration", 
      "SpeedDistance"}]] :> {QuantityVariable["a", "Name" -> "acceleration", 
      "PhysicalQuantity" -> "Acceleration", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -2}}] == 
     (QuantityVariable["g", "Name" -> "gravitational acceleration", 
        "PhysicalQuantity" -> "GravitationalAcceleration", 
        "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       Sin[QuantityVariable["\[Theta]", "Name" -> "slope angle", 
         "PhysicalQuantity" -> "Angle", "CanonicalUnit" -> 
          {HoldForm["Radians"]}, "UnitDimensions" -> {"AngleUnit", 1}]])/
      (1 + QuantityVariable[Subscript["\[Sigma]", "shape"], 
        "Name" -> "shape factor", "PhysicalQuantity" -> "Unitless", 
        "CanonicalUnit" -> {"Unities"}, "UnitDimensions" -> 
         "Dimensionless"]), QuantityVariable["d", "Name" -> "distance", 
      "PhysicalQuantity" -> "Distance", "CanonicalUnit" -> 
       {HoldForm["Meters"]}, "UnitDimensions" -> {"LengthUnit", 1}] == 
     (QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
          "Acceleration", "CanonicalUnit" -> 
          {HoldForm["Meters"/"Seconds"^2]}, "UnitDimensions" -> 
          {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
        QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
          "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
           {"TimeUnit", 1}]^2)/2 + QuantityVariable["t", "Name" -> "time", 
        "PhysicalQuantity" -> "Time", "CanonicalUnit" -> 
         {HoldForm["Seconds"]}, "UnitDimensions" -> {"TimeUnit", 1}]*
       QuantityVariable[Subscript["v", "i"], "Name" -> "initial speed", 
        "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
         {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
         {{"LengthUnit", 1}, {"TimeUnit", -1}}], 
    QuantityVariable[Subscript["v", "f"], "Name" -> "final speed", 
      "PhysicalQuantity" -> "Speed", "CanonicalUnit" -> 
       {HoldForm["Meters"/"Seconds"]}, "UnitDimensions" -> 
       {{"LengthUnit", 1}, {"TimeUnit", -1}}] == 
     QuantityVariable["a", "Name" -> "acceleration", "PhysicalQuantity" -> 
         "Acceleration", "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"^2]}, 
        "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -2}}]*
       QuantityVariable["t", "Name" -> "time", "PhysicalQuantity" -> "Time", 
        "CanonicalUnit" -> {HoldForm["Seconds"]}, "UnitDimensions" -> 
         {"TimeUnit", 1}] + QuantityVariable[Subscript["v", "i"], 
       "Name" -> "initial speed", "PhysicalQuantity" -> "Speed", 
       "CanonicalUnit" -> {HoldForm["Meters"/"Seconds"]}, 
       "UnitDimensions" -> {{"LengthUnit", 1}, {"TimeUnit", -1}}]}, 
  HoldPattern[MathematicaFormula[___]] :> Missing["NotAvailable"]}, 
 {HoldPattern[MathematicaFormulaList[___]] :> {}}}
